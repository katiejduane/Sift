{"version":3,"sources":["actions/logoutAction.js","actions/setCategory.js","containers/navBar/Nav.js","components/utility/footer/Footer.js","hoc/Aux.js","components/layout/Layout.js","components/splash/Splash.js","actions/loginAction.js","containers/users/login/Login.js","actions/regAction.js","containers/users/register/Register.js","containers/users/account/Account.js","containers/home/Home.js","components/utility/button/Button.js","containers/Forms/AddForm.js","components/Lists/PlaceCards/PlaceCards.js","components/utility/filterDropDown/Filter.js","containers/pages/food/todo/FoodTodo.js","containers/pages/food/favorites/FoodFavorites.js","containers/Forms/AddReviewForm.js","containers/pages/food/reviews/FoodReviews.js","containers/Forms/ExploreForm.js","config.js","containers/pages/food/explore/FoodExplore.js","containers/Forms/EditForm.js","containers/Forms/FaveReviewForm.js","containers/navBar/SideNav.js","containers/pages/CategoryHomeLayout.js","containers/pages/food/Food.js","containers/pages/culture/todo/CultureTodo.js","containers/pages/culture/favorites/CultureFavorites.js","containers/pages/culture/reviews/CultureReviews.js","containers/pages/culture/explore/CultureExplore.js","containers/pages/culture/Culture.js","containers/pages/active/todo/ActiveTodo.js","containers/pages/active/favorites/ActiveFavorites.js","containers/pages/active/reviews/ActiveReviews.js","containers/pages/active/explore/ActiveExplore.js","containers/pages/active/Active.js","containers/Forms/AddEventForm.js","containers/pages/event/todo/EventTodo.js","containers/pages/event/favorites/EventFavorites.js","containers/Forms/AddEventReviewForm.js","containers/pages/event/reviews/EventReviews.js","containers/Forms/EventFaveReviewForm.js","containers/Forms/EventEditForm.js","containers/pages/event/explore/EventExplore.js","containers/pages/event/Event.js","containers/Protected/Protected.js","App.js","reducers/loginReducer.js","reducers/rootReducer.js","reducers/categoryReducer.js","index.js"],"names":["logoutAction","type","setCategory","category","payload","Nav","navRightLoginToggle","event","cat","preventDefault","_this","props","document","querySelector","style","display","navRightLoggedInToggle","handleLogout","react_default","a","createElement","Redirect","to","navLeft","navRight","_this2","this","console","log","login","length","msg","className","Link","src","alt","onClick","Component","connect","state","dispatcher","bindActionCreators","Footer","aux","children","Layout","Aux","containers_navBar_Nav","footer_Footer","Splash","loginAction","userData","axios","url","concat","window","apiHost","method","data","Login","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inputEmail","setState","email","target","value","inputPassword","password","handleLogin","userEmail","userPassword","showAlert","newProps","history","push","lib_default","show","title","text","onConfirm","onSubmit","onChange","id","placeholder","regAction","registerData","Register","inputTestPassword","testPassword","handleRegister","Account","alertTitle","then","Home","welcomeMessage","number","Math","floor","random","textDecoration","Button","clicked","AddForm","addNew","addNewPlace","place","getElementById","defaultType","changePlace","changeType","changeDate","date","changeText","filter","required","types","textType","utility_button_Button","PlaceCards","styles","cards","visibility","Filter","filterResults","viewAll","clearFilter","defaultValue","changeFilter","defaultFilter","filters","FoodTodo","placename","note","backEndResponse","swTitle","list","addToFavorites","removePlace","foodListFromDB","_this3","undefined","foodToDo","map","food","i","key","typeArray","filterArray","containers_Forms_AddForm","utility_filterDropDown_Filter","Lists_PlaceCards_PlaceCards","FoodFavorites","favorites","AddReviewForm","addNewReview","addReview","review","stars","getElementsByClassName","defaultStars","changeStars","changeReview","FoodReviews","responseFromDB","removeReview","reviewListFromDB","foodReviews","confirmBtnBsStyle","containers_Forms_AddReviewForm","ExploreForm","exploreSearch","exploreRequest","searchPlace","searchLocation","changeSearchPlace","changeSearchLocation","searchPlaceholder","locationPlaceholder","config","apiKey","FoodExplore","name","city","cityCoordinates","searchLat","searchLon","locationFinalFormat","replace","addressToCoordinatesUrl","response","results","geometry","location","lat","lng","request","query","rankby","radius","service","google","maps","places","PlacesService","searchResults","textSearch","status","loopLength","exploreResults","addExploreTodo","addExploreFavorite","exploreTypeArray","j","toLowerCase","formatted_address","containers_Forms_ExploreForm","EditForm","editPlace","match","params","section","updatedPlacename","updatedType","updatedText","updatedStars","redirect","foodTypes","activeTypes","cultureTypes","eventTypes","textFromDB","placeFromDB","eventname","starsFromDB","starDropdown","FaveReviewForm","updatedReview","SideNav","catHome","todoLink","faveLink","reviewsLink","CategoryHomeLayout","containers_navBar_SideNav","Food","pages_CategoryHomeLayout","Route","exact","path","component","CultureToDo","cultureListFromDB","backgroundColor","cultureToDo","culture","CultureFavorites","CultureReviews","cultureReviews","CultureExplore","Culture","CultureTodo","ActiveTodo","addNewActive","activity","removeActive","activeListFromDB","activeTodo","ActiveFavorites","ActiveReviews","activeReviews","ActiveExplore","Active","AddEventForm","addNewEvent","events","readabledate","changeEvent","currDate","toString","slice","currYear","currMonDay","publishDate","minDate","Date","toISOString","min","max","EventTodo","removeEvent","eventListFromDB","eventToDo","containers_Forms_AddEventForm","EventFavorites","AddEventReviewForm","EventReviews","containers_Forms_AddEventReviewForm","EventFaveReviewForm","editevent","updatedEventName","updatedDate","updatedReadableDate","changeevent","eventFromDB","convertedDate","EventExplore","Event","EventEditForm","Protected","route","search","split","pathArray","currentPath","pathname","pathMatch","App","BrowserRouter","layout_Layout","loginReducer","arguments","action","rootReducer","combineReducers","reg","theStoreWithMiddlewareAndReducers","applyMiddleware","reduxPromise","middleware","createStore","theStore","reducers","ReactDOM","render","es","store","src_App_0"],"mappings":"qWAAeA,EAAA,WACX,MAAM,CACFC,KAAM,iCCFCC,EAAA,SAACC,GACZ,MAAO,CACHF,KAAM,kBACNG,QAASD,ICKXE,6MAIFC,oBAAsB,SAACC,EAAOC,GAC1BD,EAAME,iBACNC,EAAKC,MAAMT,YAAYM,GAC4C,SAAhEI,SAASC,cAAc,uBAAuBC,MAAMC,QACnDH,SAASC,cAAc,uBAAuBC,MAAMC,QAAU,SAE9DH,SAASC,cAAc,uBAAuBC,MAAMC,QAAU,UAItEC,uBAAyB,SAACT,EAAOC,GAC7BD,EAAME,iBACNC,EAAKC,MAAMT,YAAYM,GACsD,SAA1EI,SAASC,cAAc,iCAAiCC,MAAMC,QAC7DH,SAASC,cAAc,iCAAiCC,MAAMC,QAAU,SAExEH,SAASC,cAAc,iCAAiCC,MAAMC,QAAU,UAIhFE,aAAe,SAACV,GAQZ,OAPAA,EAAME,iBACNC,EAAKC,MAAMX,eACkE,SAA1EY,SAASC,cAAc,iCAAiCC,MAAMC,QAC7DH,SAASC,cAAc,iCAAiCC,MAAMC,QAAU,SAExEH,SAASC,cAAc,iCAAiCC,MAAMC,QAAU,OAGxEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,+EAIb,IACAC,EACAC,EAFAC,EAAAC,KA0CJ,OAvCAC,QAAQC,IAAIF,KAAKf,MAAMkB,OACQ,IAA5BH,KAAKf,MAAMkB,MAAMC,QAAyC,YAAzBJ,KAAKf,MAAMkB,MAAME,KAA8C,eAAzBL,KAAKf,MAAMkB,MAAME,KACvFR,EAAUL,EAAAC,EAAAC,cAAA,OAAKY,UAAU,QAAOd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,KAAIJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UAAUE,IAAI,2CAA2CC,IAAI,WACzHX,EAAWN,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACVd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,UAAT,UAC5BJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBAAgBd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,aAAT,cAEnCJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,wBAAwBI,QAAS,SAAC7B,GAASkB,EAAKnB,oBAAoBC,EAAO,UACtFW,EAAAC,EAAAC,cAAA,KAAGY,UAAU,iBAEjBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,0BAA0BI,QAAS,SAAC7B,GAASkB,EAAKnB,oBAAoBC,EAAO,UAAUW,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,UAAT,UACtGJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,0BAA0BI,QAAS,SAAC7B,GAASkB,EAAKnB,oBAAoBC,EAAO,UAAUW,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,aAAT,iBAK1HC,EAAUL,EAAAC,EAAAC,cAAA,OAAKY,UAAU,QAAOd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,aAAYJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UAAUE,IAAI,2CAA2CC,IAAI,WACjIX,EAAWN,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACVd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBAAgBd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMG,QAAS,WAAKX,EAAKd,MAAMT,YAAY,SAAUoB,GAAG,kBAAxD,SAC/BJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBAAgBd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMG,QAAS,WAAKX,EAAKd,MAAMT,YAAY,WAAaoB,GAAG,oBAA3D,WAC/BJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBAAgBd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMG,QAAS,WAAKX,EAAKd,MAAMT,YAAY,YAAcoB,GAAG,qBAA5D,YAC/BJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBAAgBd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMG,QAAS,WAAKX,EAAKd,MAAMT,YAAY,UAAYoB,GAAG,mBAA1D,YAEnCJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBAAkBI,QAAS,SAAC7B,GAASkB,EAAKT,uBAAuBT,EAAO,UACnFW,EAAAC,EAAAC,cAAA,KAAGY,UAAU,iBAEjBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gCACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,0BAA0BI,QAAS,SAAC7B,GAAWkB,EAAKT,uBAAuBT,EAAO,UAAUW,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,YAAT,YAC3GJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qCAAqCI,QAASV,KAAKT,cAAlE,WACAC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,uCAAuCI,QAAS,SAAC7B,GAASkB,EAAKT,uBAAuBT,EAAO,UAAUW,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,kBAAT,SACtHJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,uCAAuCI,QAAS,SAAC7B,GAASkB,EAAKT,uBAAuBT,EAAO,YAAYW,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,oBAAT,WACxHJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,uCAAuCI,QAAS,SAAC7B,GAASkB,EAAKT,uBAAuBT,EAAO,aAAaW,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,qBAAT,YACzHJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,uCAAuCI,QAAS,SAAC7B,GAASkB,EAAKT,uBAAuBT,EAAO,WAAWW,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,mBAAT,cAK3IJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACVT,EACAC,UAlFCa,aAuGHC,kBAbf,SAAyBC,GACrB,MAAM,CACFV,MAAQU,EAAMV,QAItB,SAA4BW,GACxB,OAAOC,YAAmB,CACtBzC,aAAeA,EACfE,YAAcA,GACfsC,IAGQF,CAA4CjC,SCtG5CqC,MANf,SAAgB/B,GACZ,OACIO,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UAAf,gDCHOW,EAFH,SAAChC,GAAD,OAAYA,EAAMiC,UCkBfC,MAZf,SAAgBlC,GACZ,OACIO,EAAAC,EAAAC,cAAC0B,EAAD,KACI5B,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACVrB,EAAMiC,UAEX1B,EAAAC,EAAAC,cAAC4B,EAAD,cCoCGC,MA7Cf,SAAgBtC,GAEZ,OACIO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WAAWE,IAAI,uCAAuCC,IAAI,UAEjFjB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACVd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eAAeE,IAAI,sBAAsBC,IAAI,qBAKzEjB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACXd,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,4OAKAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACfd,EAAAC,EAAAC,cAAA,gCAEJF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACfd,EAAAC,EAAAC,cAAA,mCAEJF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACfd,EAAAC,EAAAC,cAAA,oCAIRF,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,QAAMY,UAAU,gBAAhB,OACbd,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAG,kBAAT,YAAH,6EC1CD4B,EAAA,SAACC,GAMZ,MAAM,CACFlD,KAAM,eACNG,QAPiBgD,IAAM,CACvBC,IAAG,GAAAC,OAAMC,OAAOC,QAAb,gBACHC,OAAS,OACTC,KAAOP,sBCETQ,qBACF,SAAAA,IAAa,IAAAjD,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAiC,IACTjD,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAtC,QAyBJuC,WAAa,SAAC1D,GACVG,EAAKwD,SAAS,CACVC,MAAQ5D,EAAM6D,OAAOC,SA5BhB3D,EAgCb4D,cAAgB,SAAC/D,GACbG,EAAKwD,SAAS,CACVK,SAAUhE,EAAM6D,OAAOC,SAlClB3D,EAsCb8D,YAAc,SAACjE,GACX,IAAMkE,EAAY/D,EAAK6B,MAAM4B,MACvBO,EAAchE,EAAK6B,MAAMgC,SAC/BhE,EAAME,iBACNC,EAAKC,MAAMuC,YAAY,CACnBuB,YACAC,kBA1CJhE,EAAK6B,MAAQ,CACToC,WAAY,EACZ5C,IAAM,GACNoC,MAAQ,GACRI,SAAW,IANN7D,yFAUakE,GACI,YAAvBA,EAAS/C,MAAME,IACdL,KAAKwC,SAAS,CACVnC,IAAM,qCACN4C,WAAW,IAEc,gBAAvBC,EAAS/C,MAAME,IACrBL,KAAKwC,SAAS,CACVnC,IAAM,wCACN4C,WAAY,IAEc,iBAAvBC,EAAS/C,MAAME,KACtBL,KAAKf,MAAMkE,QAAQC,KAAK,8CA2BxB,IAAArD,EAAAC,KACJ,OACIR,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eAAeE,IAAI,yCAAyCC,IAAI,gBAEnFjB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,SAAd,SACAd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,gBAAb,yCAEJd,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACQ6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAM,mBACNC,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM1D,EAAKyC,SAAS,CAAES,WAAW,OAEpDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAK8C,YAAaxC,UAAU,cACxCd,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKuC,WAAYqB,GAAG,cAAcrF,KAAK,QAAQsF,YAAY,UAC5ErE,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAK4C,cAAegB,GAAG,iBAAiBrF,KAAK,WAAWsF,YAAY,aACrFrE,EAAAC,EAAAC,cAAA,UAAQkE,GAAG,eAAerF,KAAK,UAA/B,mBAtEJoC,cA2FLC,kBAbf,SAAyBC,GACrB,MAAM,CACFV,MAAOU,EAAMV,QAKrB,SAA4BW,GACxB,OAAOC,YAAmB,CACtBS,YAAcA,GACfV,IAGQF,CAA4CqB,GCjG5C6B,SAAA,SAACC,GAMZ,MAAM,CACFxF,KAAM,aACNG,QAPiBgD,IAAM,CACvBC,IAAG,GAAAC,OAAMC,OAAOC,QAAb,mBACHC,OAAS,OACTC,KAAO+B,OCETC,cACF,SAAAA,IAAa,IAAAhF,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAgE,IACThF,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA8B,GAAA1B,KAAAtC,QAqBJuC,WAAa,SAAC1D,GACVG,EAAKwD,SAAS,CACVC,MAAQ5D,EAAM6D,OAAOC,SAxBhB3D,EA4Bb4D,cAAgB,SAAC/D,GACbG,EAAKwD,SAAS,CACVK,SAAUhE,EAAM6D,OAAOC,SA9BlB3D,EAkCbiF,kBAAoB,SAACpF,GACjBG,EAAKwD,SAAS,CACV0B,aAAerF,EAAM6D,OAAOC,SApCvB3D,EAwCbmF,eAAiB,SAACtF,GACd,IAAMkE,EAAY/D,EAAK6B,MAAM4B,MACvBO,EAAchE,EAAK6B,MAAMgC,SACzBqB,EAAelF,EAAK6B,MAAMqD,aAChCrF,EAAME,iBACHiE,IAAiBkB,EAChBlF,EAAKwD,SAAS,CACVnC,IAAM,+CACN4C,WAAW,IAGfjE,EAAKC,MAAM6E,UAAU,CACjBf,YACAC,kBAnDRhE,EAAK6B,MAAQ,CACToC,WAAY,EACZ5C,IAAM,GACNoC,MAAQ,GACRI,SAAW,GACXqB,aAAe,IAPVlF,yFAWakE,GACI,cAAvBA,EAAS/C,MAAME,IACdL,KAAKf,MAAMkE,QAAQC,KAAK,aACK,eAAvBF,EAAS/C,MAAME,KACrBL,KAAKwC,SAAS,CACVnC,IAAM,8CACN4C,WAAW,qCA0Cf,IAAAlD,EAAAC,KACJ,OACIR,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eAAeE,IAAI,0CAA0CC,IAAI,mBAEpFjB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACXd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,SAAd,YACAd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,gBAAb,iEAEJd,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAM,mBACNC,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM1D,EAAKyC,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAKmE,eAAgB7D,UAAU,iBAC3Cd,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKuC,WAAYqB,GAAG,cAAcrF,KAAK,QAAQsF,YAAY,UAC5ErE,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAK4C,cAAegB,GAAG,iBAAiBrF,KAAK,WAAWsF,YAAY,aACrFrE,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKiE,kBAAmBL,GAAG,kBAAkBrF,KAAK,WAAWsF,YAAY,qBAC1FrE,EAAAC,EAAAC,cAAA,UAAQkE,GAAG,kBAAkBrF,KAAK,UAAlC,sBAjFDoC,aAqGRC,kBAZf,SAAyBC,GACrB,MAAM,CACFV,MAAQU,EAAMV,QAItB,SAA4BW,GACxB,OAAOC,YAAmB,CACtB+C,UAAYA,GACdhD,IAGSF,CAA6CoD,GCpGtDI,qBACF,SAAAA,IAAa,IAAApF,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAoE,IACTpF,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAkC,GAAA9B,KAAAtC,QAYJ4C,cAAgB,SAAC/D,GACbG,EAAKwD,SAAS,CACVK,SAAUhE,EAAM6D,OAAOC,SAflB3D,EAmBbiF,kBAAoB,SAACpF,GACjBG,EAAKwD,SAAS,CACV0B,aAAerF,EAAM6D,OAAOC,SArBvB3D,EAyBbmF,eAAiB,SAACtF,GACd,IAAMmE,EAAchE,EAAK6B,MAAMgC,SACzBqB,EAAelF,EAAK6B,MAAMqD,aAChCrF,EAAME,iBACHiE,IAAiBkB,EAChBlF,EAAKwD,SAAS,CACV6B,WAAY,mBACZhE,IAAM,+CACN4C,WAAW,KAGXpE,EAAME,iBACN2C,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,kBACHE,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,MACxBI,SAAS7D,EAAK6B,MAAMgC,YAEzByB,KAAK,WACJtF,EAAKwD,SAAS,CACVnC,IAAM,mBACNgE,WAAY,UACZpB,WAAW,QA9C3BjE,EAAK6B,MAAQ,CACToC,WAAY,EACZ5C,IAAM,GACNgE,WAAY,GACZ5B,MAAM,GACNI,SAAW,GACXqB,aAAe,IARVlF,wEAuDL,IAAAe,EAAAC,KACJ,OACIR,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eAAeE,IAAI,yCAAyCC,IAAI,mBAEnFjB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACXd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,SAAd,WACAd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,gBAAb,kEAEJd,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAOvD,KAAKa,MAAMwD,WAClBb,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM1D,EAAKyC,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAKmE,eAAgB7D,UAAU,iBAC3Cd,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAK4C,cAAegB,GAAG,iBAAiBrF,KAAK,WAAWsF,YAAY,aACrFrE,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKiE,kBAAmBL,GAAG,kBAAkBrF,KAAK,WAAWsF,YAAY,qBAC1FrE,EAAAC,EAAAC,cAAA,UAAQkE,GAAG,kBAAkBrF,KAAK,UAAlC,oBA5EFoC,cA2FPC,kBAPf,SAAyBC,GACrB,MAAM,CACFV,MAAQU,EAAMV,QAKkB,KAAzBS,CAA+BwD,GC5FxCG,oNAGF/F,YAAc,SAACK,EAAOC,GAClBE,EAAKC,MAAMT,YAAYM,4EAGnB,IAIA0F,EAJAzE,EAAAC,KAEEyE,EAAUC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAkBhD,OAbIJ,EADkB,IAHAC,EAID,gBACQ,IALPA,EAMD,gBACQ,IAPPA,EAQD,iBACQ,IATPA,EAUD,eAEA,mBAKU,IAA5BzE,KAAKf,MAAMkB,MAAMC,OAEhBZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAITJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sBACXd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,kBAAkBkE,IAEpChF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,2BACPd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBACfd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMnB,MAAO,CAAEyF,eAAgB,QAAUnE,QAAS,SAAC7B,GAASkB,EAAKvB,YAAYK,EAAM,SAAUe,GAAG,kBAAiBJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,QAAOd,EAAAC,EAAAC,cAAA,mBACvIF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMnB,MAAO,CAAEyF,eAAgB,QAAUnE,QAAS,SAAC7B,GAASkB,EAAKvB,YAAYK,EAAO,WAAYe,GAAG,oBAAmBJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UAASd,EAAAC,EAAAC,cAAA,sBAE9IF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMnB,MAAO,CAAEyF,eAAgB,QAAUnE,QAAS,SAAC7B,GAASkB,EAAKvB,YAAYK,EAAM,YAAae,GAAG,qBAAoBJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WAAUd,EAAAC,EAAAC,cAAA,sBAChJF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMnB,MAAO,CAAEyF,eAAgB,QAAUnE,QAAS,SAAC7B,GAASkB,EAAKvB,YAAYK,EAAM,UAAWe,GAAG,mBAAkBJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UAASd,EAAAC,EAAAC,cAAA,+BA5CpJiB,cAkEJC,kBAPf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,MACb1B,SAAUoC,EAAMpC,WATxB,SAA4BqC,GACxB,OAAOC,YAAmB,CACtBvC,YAAaA,GACdsC,IAUQF,CAA6C2D,GClE7CO,SALA,SAAC7F,GAAD,OACXO,EAAAC,EAAAC,cAAA,UACIY,UAAWrB,EAAMqB,UAAWsD,GAAI3E,EAAM2E,GAAIrF,KAAOU,EAAMV,KAAMmC,QAASzB,EAAM8F,SAAU9F,EAAMiC,YCsErF8D,qBArEX,SAAAA,IAAc,IAAAhG,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAgF,IACVhG,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA8C,GAAA1C,KAAAtC,QAWJiF,OAAS,SAACpG,GACNA,EAAME,eAAeF,GACrBG,EAAKC,MAAMiG,YAAYlG,EAAK6B,MAAMsE,MAAOnG,EAAK6B,MAAMtC,KAAMS,EAAK6B,MAAM2C,MACrEtE,SAASkG,eAAe,YAAYzC,MAAQ3D,EAAKC,MAAMoG,YACvDrG,EAAKwD,SAAS,CACV2C,MAAO,GACP5G,KAAM,GACNiF,KAAM,MAnBAxE,EAuBdsG,YAAc,SAACzG,GACXG,EAAKwD,SAAS,CACV2C,MAAOtG,EAAM6D,OAAOC,SAzBd3D,EA6BduG,WAAa,SAAC1G,GACVG,EAAKwD,SAAS,CACVjE,KAAMM,EAAM6D,OAAOC,SA/Bb3D,EAmCdwG,WAAa,SAAC3G,GACVG,EAAKwD,SAAS,CACViD,KAAM5G,EAAM6D,OAAOC,SArCb3D,EAyCd0G,WAAa,SAAC7G,GACVG,EAAKwD,SAAS,CACVgB,KAAM3E,EAAM6D,OAAOC,SAzCvB3D,EAAK6B,MAAQ,CACTsE,MAAO,GACP5G,KAAM,GACNiF,KAAM,GACNmC,OAAQ,IANF3G,wEAiDV,OACIQ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,oBACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAKiF,OAAQ3E,UAAU,WACnCd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACXd,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKsF,YAAa/G,KAAK,OAAOqF,GAAG,WAAWC,YAAa7D,KAAKf,MAAM4E,YAAalB,MAAO3C,KAAKa,MAAMsE,MAAOS,UAAQ,IACnIpG,EAAAC,EAAAC,cAAA,UAAQY,UAAU,gBAAgBsD,GAAG,WAAWD,SAAU3D,KAAKuF,WAAYK,UAAQ,GAC/EpG,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,IAAI3C,KAAKf,MAAMoG,aAC5BrF,KAAKf,MAAM4G,QAGpBrG,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,YAAUiE,SAAU3D,KAAK0F,WAAY9B,GAAG,UAAUC,YAAa7D,KAAKf,MAAM6G,SAAUnD,MAAO3C,KAAKa,MAAM2C,QAE1GhE,EAAAC,EAAAC,cAACqG,EAAD,CAAQxH,KAAK,SAAS+B,UAAU,gBAAhC,gBA/DEK,cCgBPqF,mLAhBP,IAAIC,EAQJ,OAPIjG,KAAKf,MAAMiH,QAEPD,EAD2B,IAA5BjG,KAAKf,MAAMiH,MAAM9F,OACP,CAAC+F,WAAa,UAEd,CAACA,WAAa,YAI3B3G,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aAAalB,MAAO6G,GAC9BjG,KAAKf,MAAMiH,cAbHvF,aCgDVyF,qBA7CX,SAAAA,IAAa,IAAApH,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAoG,IACTpH,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAkE,GAAA9D,KAAAtC,QAMJ2F,OAAS,SAAC9G,GACNA,EAAME,eAAeF,GACrBG,EAAKC,MAAMoH,cAAcrH,EAAK6B,MAAM8E,SAT3B3G,EAYbsH,QAAU,SAACzH,GACPA,EAAME,eAAeF,GACrBG,EAAKC,MAAMsH,cACXrH,SAASkG,eAAe,kBAAkBzC,MAAQ3D,EAAKC,MAAMuH,aAC7DxH,EAAKwD,SAAS,CACVmD,OAAQ3G,EAAKC,MAAMuH,gBAjBdxH,EAqBbyH,aAAe,SAAC5H,GACZG,EAAKwD,SAAS,CACVmD,OAAQ9G,EAAM6D,OAAOC,SArBzB3D,EAAK6B,MAAQ,CACT8E,OAAQ,IAHH3G,wEA4BT,OACIQ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAK2F,OAAQrF,UAAU,cACnCd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,iBAAiBsD,GAAG,iBAAiBD,SAAU3D,KAAKyG,cAClEjH,EAAAC,EAAAC,cAAA,UAAQiD,MAAO3C,KAAKf,MAAMuH,cAAexG,KAAKf,MAAMyH,eACnD1G,KAAKf,MAAM0H,SAEhBnH,EAAAC,EAAAC,cAACqG,EAAD,CAAQxH,KAAK,SAAS+B,UAAU,gBAAhC,WAEJd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAKsG,QAAShG,UAAU,mBACpCd,EAAAC,EAAAC,cAACqG,EAAD,CAAQxH,KAAK,SAAS+B,UAAU,gBAAhC,kBAvCCK,cCSfiG,qBACF,SAAAA,IAAc,IAAA5H,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAA4G,IACV5H,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA0E,GAAAtE,KAAAtC,QAwBJkF,YAAc,SAACC,EAAO5G,EAAMiF,GACxB9B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,iBACHE,KAAM,CACF6E,UAAW1B,EACX5G,KAAMA,EACNuI,KAAMtD,EACNf,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GAC+B,IAAhCA,EAAgB/E,KAAK5B,OACrBpB,EAAKwD,SAAS,CACVS,WAAW,EACX+D,QAAS,UACT3G,IAAK,0CAGTrB,EAAKwD,SAAS,CACVyE,KAAMF,OA5CR/H,EAkDdkI,eAAiB,SAACL,GACdnF,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,kBAAAF,OAAoCiF,GACvC7E,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,EACN1G,IAAK,sBACL2G,QAAS,OACT/D,WAAW,OA9DTjE,EAmEdmI,YAAc,SAACN,GACXnF,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,sBAAAF,OAAwCiF,GAC3C7E,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA5EJ/H,EAiFdqH,cAAgB,SAACV,GACbjE,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,iBAAAF,OAAmC+D,GACtC3D,KAAM,CACFzD,KAAMoH,EACNlD,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA3FJ/H,EAgGduH,YAAc,WACV7E,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,qBACHE,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC8C,GACLpI,EAAKwD,SAAS,CACVyE,KAAMG,OAvGdpI,EAAK6B,MAAQ,CACToG,KAAM,GACNpB,MAAO,CAAC,aAAc,OAAQ,MAAO,SACrCxF,IAAK,GACL4C,WAAW,EACX+D,QAAS,mBAPHhI,mFAWM,IAAAe,EAAAC,KAChB0B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,qBACHE,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC8C,GACLrH,EAAKyC,SAAS,CACVyE,KAAMG,uCA0FT,IAAAC,EAAArH,KAIL,QAA6BsH,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAChB,IAAIuF,EAAWvH,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAACC,EAAMC,GAC3C,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAK+H,EAAKZ,UAAV,MAAwBY,EAAKlJ,MAC7BiB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAI+H,EAAKX,QAGjBtH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKH,eAAeO,EAAKZ,YAAYvG,UAAU,cAAtE,QACAd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,4BAAoD6H,EAAKZ,WAAnE,SAC/BrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKF,YAAYM,EAAKZ,YAAYvG,UAAU,gBAAnE,cAOpB,IAAMsH,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAEpCsJ,EAAc7H,KAAKa,MAAMgF,MAAM2B,IAAI,SAAC7B,EAAQ+B,GAC9C,OAAOlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOgD,GAASA,KAG3C,OAA+B,IAA5B3F,KAAKf,MAAMkB,MAAMC,OAEZZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAIbJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,QACXd,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAOvD,KAAKa,MAAMmG,QAClBxD,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAACoI,EAAD,CACIvE,MAAM,oBACN2B,YAAalF,KAAKkF,YAClBrB,YAAY,mBACZwB,YAAY,eACZS,SAAS,cACTD,MAAO+B,KAGfpI,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAACqI,EAAD,CACIrB,cAAc,iBACdF,aAAcxG,KAAKa,MAAMgF,MAAM,GAC/Bc,QAASkB,EACTxB,cAAerG,KAAKqG,cACpBE,YAAavG,KAAKuG,cAEtB/G,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOqB,cA/KxB5G,cA8LRC,kBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+BgG,GC9LxCqB,qBACE,SAAAA,IAAc,IAAAjJ,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAiI,IACVjJ,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA+F,GAAA3F,KAAAtC,QAwBJkF,YAAc,SAACC,EAAO5G,EAAMiF,GAExB9B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,4BACHE,KAAM,CACF6E,UAAW1B,EACX5G,KAAMA,EACNuI,KAAMtD,EACNf,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GAC+B,IAAhCA,EAAgB/E,KAAK5B,OACrBpB,EAAKwD,SAAS,CACVS,WAAW,EACX+D,QAAS,UACT3G,IAAK,0CAGTrB,EAAKwD,SAAS,CACVyE,KAAMF,OA7CR/H,EAmDdmI,YAAc,SAACN,GACXnF,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,0BAAAF,OAA4CiF,GAC/C7E,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA5DJ/H,EAiEdqH,cAAgB,SAACV,GACbjE,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,qBAAAF,OAAuC+D,GAC1C3D,KAAM,CACFzD,KAAMoH,EACNlD,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA3EJ/H,EAgFduH,YAAc,WACV7E,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,yBACHE,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC8C,GACLpI,EAAKwD,SAAS,CACVyE,KAAMG,OAvFdpI,EAAK6B,MAAQ,CACToG,KAAM,GACNpB,MAAO,CAAC,aAAa,OAAQ,MAAO,SACpCxF,IAAK,GACL4C,WAAW,EACX+D,QAAS,IAPHhI,mFAWM,IAAAe,EAAAC,KAChB0B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,yBACHE,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC8C,GACDrH,EAAKyC,SAAS,CACVyE,KAAMG,uCA0Eb,IAAAC,EAAArH,KAGL,QAA6BsH,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAChB,IAAIkG,EAAYlI,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAACC,EAAMC,GAC5C,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAK+H,EAAKZ,UAAV,MAAwBY,EAAKlJ,KAA7B,KACAiB,EAAAC,EAAAC,cAAA,SAAI+H,EAAKX,OAEbtH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,gBAAed,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,oCAAuD6H,EAAKZ,WAAtE,WACjCrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,iCAAoD6H,EAAKZ,WAAnE,SAC/BrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKF,YAAYM,EAAKZ,YAAYvG,UAAU,gBAAnE,cAOpB,IAAMsH,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAEpCsJ,EAAc7H,KAAKa,MAAMgF,MAAM2B,IAAI,SAAC7B,EAAQ+B,GAC9C,OAAOlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOgD,GAASA,KAG3C,OAA+B,IAA5B3F,KAAKf,MAAMkB,MAAMC,OAEhBZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAITJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAOvD,KAAKa,MAAMmG,QAClBxD,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAACoI,EAAD,CACIvE,MAAM,kBACN2B,YAAalF,KAAKkF,YAClBrB,YAAY,aACZiC,SAAS,cACTT,YAAY,eACZQ,MAAO+B,KAGfpI,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAACqI,EAAD,CACIrB,cAAc,iBACdF,aAAcxG,KAAKa,MAAMgF,MAAM,GAC/Bc,QAASkB,EACTxB,cAAerG,KAAKqG,cACpBE,YAAavG,KAAKuG,cAEtB/G,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOgC,cA5JvBvH,cA2KTC,kBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+BqH,GCnGnCE,qBAhFX,SAAAA,IAAc,IAAAnJ,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAmI,IACVnJ,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAiG,GAAA7F,KAAAtC,QASJoI,aAAe,SAACvJ,GACZA,EAAME,iBACNC,EAAKC,MAAMoJ,UAAUrJ,EAAK6B,MAAMsE,MAAMnG,EAAK6B,MAAMyH,OAAQtJ,EAAK6B,MAAMtC,KAAMS,EAAK6B,MAAM0H,OACrFrJ,SAASsJ,uBAAuB,QAAQ7F,MAAQ3D,EAAKC,MAAMoG,YAC3DnG,SAASsJ,uBAAuB,gBAAgB7F,MAAQ3D,EAAKC,MAAMwJ,aACnEzJ,EAAKwD,SAAS,CACV2C,MAAO,GACPmD,OAAQ,GACR/J,KAAM,GACNgK,MAAO,MAnBDvJ,EAuBdsG,YAAc,SAACzG,GACXG,EAAKwD,SAAS,CACV2C,MAAQtG,EAAM6D,OAAOC,SAzBf3D,EA6BduG,WAAa,SAAC1G,GACVG,EAAKwD,SAAS,CACXjE,KAAOM,EAAM6D,OAAOC,SA/Bb3D,EAoCd0J,YAAc,SAAC7J,GACXG,EAAKwD,SAAS,CACX+F,MAAQ1J,EAAM6D,OAAOC,SAtCd3D,EA0Cd2J,aAAe,SAAC9J,GACZG,EAAKwD,SAAS,CACV8F,OAASzJ,EAAM6D,OAAOC,SA1C1B3D,EAAK6B,MAAQ,CACTsE,MAAO,GACPmD,OAAQ,GACR/J,KAAM,GACNgK,MAAO,IANDvJ,wEAiDV,OACIQ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAKoI,aAAc9H,UAAU,cAE7Cd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,OAAOsF,YAAY,mCAAmClB,MAAO3C,KAAKa,MAAMsE,MAAOvB,GAAG,WAAWD,SAAU3D,KAAKsF,YAAaM,UAAQ,KAEjJpG,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBACfd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,OAAOsD,GAAG,iBAAiBD,SAAU3D,KAAKuF,WAAY5C,MAAO3C,KAAKa,MAAMtC,KAAMqH,UAAQ,GAChGpG,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,IAAI3C,KAAKf,MAAMoG,aAC5BrF,KAAKf,MAAM4G,OAEhBrG,EAAAC,EAAAC,cAAA,UAAQY,UAAU,eAAesD,GAAG,eAAejB,MAAO3C,KAAKa,MAAM0H,MAAO5E,SAAU3D,KAAK0I,YAAa9C,UAAQ,GAC5GpG,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,IAAI3C,KAAKf,MAAMwJ,cAC7BjJ,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,OAGRnD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAAA,YAAUiE,SAAU3D,KAAK2I,aAAc/E,GAAG,YAAYC,YAAa7D,KAAKf,MAAM4E,YAAalB,MAAO3C,KAAKa,MAAMyH,OAAQ1C,UAAQ,IACzHpG,EAAAC,EAAAC,cAACqG,EAAD,CAAQxH,KAAK,SAAS+B,UAAU,gBAAhC,wBAzEIK,cCQtBiI,qBACF,SAAAA,IAAc,IAAA5J,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAA4I,IACV5J,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA0G,GAAAtG,KAAAtC,QAuBJqI,UAAY,SAAClD,EAAOmD,EAAQ/J,EAAMgK,GAC9B7G,IAAM,CACFK,OAAS,OACTJ,IAAG,GAAAC,OAAMC,OAAOC,QAAb,wBAAAF,OAA2CuD,GAC9CnD,KAAO,CACHS,MAAQzD,EAAKC,MAAMkB,MAAMsC,MACzB0C,QACAmD,SACA/J,OACAgK,WAELjE,KAAK,SAACuE,GACL7J,EAAKwD,SAAS,CACVyE,KAAO4B,EACPxI,IAAG,uCAAAuB,OAA0CuD,EAA1C,KACHlC,WAAW,MAGnB/D,SAASC,cAAc,eAAeC,MAAM+G,WAAa,WA1C/CnH,EA6Cd8J,aAAe,SAAC3D,GACZzD,IAAM,CACFK,OAAS,OACTJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,2BAAAF,OAA6CuD,GAChDnD,KAAM,CACFS,MAAQzD,EAAKC,MAAMkB,MAAMsC,SAE9B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAOF,OApDf/H,EAAK6B,MAAQ,CACToG,KAAO,GACP5G,IAAM,GACNwF,MAAQ,CAAC,aAAc,OAAQ,MAAO,SACtC5C,WAAW,GANLjE,mFAUK,IAAAe,EAAAC,KACf0B,IAAM,CACFK,OAAS,OACTJ,IAAG,GAAAC,OAAMC,OAAOC,QAAb,wBACHE,KAAO,CACHS,MAAQzC,KAAKf,MAAMkB,MAAMsC,SAE9B6B,KAAK,SAACyE,GACLhJ,EAAKyC,SAAU,CACXyE,KAAO8B,uCAwCV,IAAA1B,EAAArH,KAGL,QAA6BsH,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAChB,IAAIgH,EAAchJ,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAACc,EAAQZ,GAChD,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAK4I,EAAOzB,UAAZ,MAA0ByB,EAAOC,MAAjC,UACA/I,EAAAC,EAAAC,cAAA,SAAI4I,EAAOA,SAEf9I,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,+BAAoD0I,EAAOzB,WAArE,SAC/BrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKyB,aAAaR,EAAOzB,YAAYvG,UAAU,gBAAtE,eAQxB,IAAMsH,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAG1C,OAA+B,IAA5ByB,KAAKf,MAAMkB,MAAMC,OAEZZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAIbJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAM,eACNC,KAAMxD,KAAKa,MAAMR,IACjB4I,kBAAkB,SAClBxF,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAACwJ,EAAD,CACIrF,YAAY,6BACZwB,YAAa,eACboD,aAAe,QACf5C,MAAO+B,EACPS,UAAWrI,KAAKqI,aAGxB7I,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAO8C,cAhHrBrI,cA+HXC,kBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAIkB,KAAxBS,CAA8BgI,GC3F9BO,sBA3CX,SAAAA,IAAc,IAAAnK,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAmJ,IACVnK,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAiH,GAAA7G,KAAAtC,QAOJoJ,cAAgB,SAACvK,GACbA,EAAME,eAAeF,GACrBG,EAAKC,MAAMoK,eAAerK,EAAK6B,MAAMyI,YAAatK,EAAK6B,MAAM0I,iBAVnDvK,EAadwK,kBAAoB,SAAC3K,GACjBG,EAAKwD,SAAS,CACV8G,YAAazK,EAAM6D,OAAOC,SAfpB3D,EAmBdyK,qBAAuB,SAAC5K,GACpBG,EAAKwD,SAAS,CACV+G,eAAgB1K,EAAM6D,OAAOC,SAnBjC3D,EAAK6B,MAAQ,CACTyI,YAAc,GACdC,eAAiB,IAJXvK,wEA2BV,OACIQ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,wBACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAKoJ,cAAe9I,UAAU,eAC1Cd,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACXd,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKwJ,kBAAmBjL,KAAK,OAAOqF,GAAG,iBAAiBC,YAAa7D,KAAKf,MAAMyK,kBAAmB/G,MAAO3C,KAAKa,MAAMyI,YAAa1D,UAAQ,IAC3JpG,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKyJ,qBAAsBlL,KAAK,OAAOqF,GAAG,oBAAoBC,YAAa7D,KAAKf,MAAM0K,oBAAqBhH,MAAO3C,KAAKa,MAAM0I,eAAgB3D,UAAQ,KAG1KpG,EAAAC,EAAAC,cAACqG,EAAD,CAAQxH,KAAK,SAAS+B,UAAU,gBAAhC,mBArCMK,cCAXiJ,EAJA,CACXC,OAAS,2CCSPC,qBACF,SAAAA,IAAa,IAAA9K,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAA8J,IACT9K,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA4H,GAAAxH,KAAAtC,QAQJqJ,eAAiB,SAACU,EAAKC,GACnB,IAAIC,EAAiBC,EAAWC,EAE1BC,EADgBJ,EAAKK,QAAQ,KAAK,IACEA,QAAQ,KAAK,KACjDC,EAAuB,6DAAA1I,OAA8DwI,EAA9D,SAAAxI,OAAyFgI,EAAOC,QAC7HnI,IAAM,CACFK,OAAS,MACTJ,IAAM2I,IACPhG,KAAK,SAACiG,GACLL,EAAaK,EAASvI,KAAKwI,QAAQ,GAAGC,SAASC,SAASC,IACxDR,EAAaI,EAASvI,KAAKwI,QAAQ,GAAGC,SAASC,SAASE,IACxDX,EAAkB,CACdU,IAAMT,EACNU,IAAMT,GAGV,IAAIU,EAAU,CACZC,MAAK,GAAAlJ,OAAKmI,GACVgB,OAAS,WACTL,SAAWT,EACXe,OAAQ,KAKNC,EAAU,IAAIpJ,OAAOqJ,OAAOC,KAAKC,OAAOC,cAAcnM,SAASQ,cAAc,QAC7E4L,EAAgB,GACpBL,EAAQM,WAAWV,EAAS,SAACL,EAASgB,GAClC,IAAIC,EAEAA,EADA,GAAKjB,EAAQpK,OACA,GAEAoK,EAAQpK,OAGzB,IAAI,IAAIsH,EAAI,EAAGA,EAAI+D,EAAY/D,IAC3B4D,EAAclI,KAAKoH,EAAQ9C,IAG/B1I,EAAKwD,SAAS,CACVkJ,eAAiBJ,SAjDpBtM,EAuDb2M,eAAiB,SAACxG,EAAO5G,EAAMiF,GAE3B,IAAMf,EAAQzD,EAAKC,MAAMkB,MAAMsC,MAC/Bf,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,wBACHE,KAAM,CACFmD,QACA5G,OACAiF,OACAf,WAEL6B,KAAK,SAACyC,GAC2B,UAA7BA,EAAgB/E,KAAK3B,KACpBrB,EAAKC,MAAMkE,QAAQC,KAAK,0BArEvBpE,EA0Eb4M,mBAAqB,SAACzG,EAAO5G,EAAMiF,GAC/B,IAAMf,EAAQzD,EAAKC,MAAMkB,MAAMsC,MAC/Bf,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,4BACHE,KAAM,CACFmD,QACA5G,OACAiF,OACAf,WAEL6B,KAAK,SAACyC,GAC2B,UAA7BA,EAAgB/E,KAAK3B,KACpBrB,EAAKC,MAAMkE,QAAQC,KAAK,+BArFhCpE,EAAK6B,MAAQ,CACT6K,eAAiB,GACjB7F,MAAO,CAAC,aAAa,OAAQ,MAAO,UAJ/B7G,wEA4FL,IAAAe,EAAAC,KAEE0L,EAAiB1L,KAAKa,MAAM6K,eAAelE,IAAI,SAACrC,EAAOuC,GAIzD,IAHA,IAEInJ,EAFEqJ,EAAY7H,EAAKc,MAAMgF,MACvBgG,EAAmB1G,EAAMU,MAEvB6B,EAAG,EAAGA,EAAIE,EAAUxH,OAAQsH,IAChC,IAAI,IAAIoE,EAAI,EAAGA,EAAID,EAAiBzL,OAAQ0L,IACrClE,EAAUF,GAAGqE,gBAAkBF,EAAiBC,KAC/CvN,EAAOqJ,EAAUF,IAS7B,YAJYJ,IAAT/I,IACCA,EAAO,cAIPiB,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAKyF,EAAM4E,MACXvK,EAAAC,EAAAC,cAAA,SAAInB,IAERiB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMhF,EAAK4L,eAAexG,EAAM4E,KAAMxL,EAAM4G,EAAM6G,oBAAoB1L,UAAU,cAAjG,QACAd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMhF,EAAK6L,mBAAmBzG,EAAM4E,KAAMxL,EAAM4G,EAAM6G,oBAAoB1L,UAAU,cAArG,gBAMZ,OAA+B,IAA5BN,KAAKf,MAAMkB,MAAMC,OAEhBZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAITJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WAIXd,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAACuM,EAAD,CACAvC,kBAAkB,8BAClBC,oBAAoB,uBACpBN,eAAgBrJ,KAAKqJ,kBAGzB7J,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBACXd,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOwF,cAjJzB/K,cAgKXC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+BkJ,GClKxCoC,sBACF,SAAAA,IAAc,IAAAlN,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAkM,IACVlN,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAgK,GAAA5J,KAAAtC,QAyCJmM,UAAY,SAACtN,GACTA,EAAME,iBACN,IAAM8H,EAAY7H,EAAKC,MAAMmN,MAAMC,OAAOlH,MACpCmH,EAAUtN,EAAKC,MAAMmN,MAAMC,OAAOC,QAClC7N,EAAWO,EAAKC,MAAMmN,MAAMC,OAAO5N,SACnC8N,EAAmBvN,EAAK6B,MAAMsE,MAC9BqH,EAAcxN,EAAK6B,MAAMtC,KACzBkO,EAAczN,EAAK6B,MAAM2C,KACzBkJ,EAAe1N,EAAK6B,MAAM0H,MAChC7G,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,KAAAF,OAAuBnD,EAAvB,KAAAmD,OAAmC0K,EAAnC,eAAA1K,OAAwDiF,GAC3D7E,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,MACxB8J,mBACAC,cACAC,cACAC,kBAELpI,KAAK,SAACuE,GACL7J,EAAKwD,SAAS,CACV2C,MAAQ,GACR1G,SAAW,GACXF,KAAO,GACPiF,KAAO,GACPmJ,UAAU,OAnER3N,EA0EdsG,YAAc,SAACzG,GACXG,EAAKwD,SAAS,CACV2C,MAAOtG,EAAM6D,OAAOC,SA5Ed3D,EAgFduG,WAAa,SAAC1G,GACVG,EAAKwD,SAAS,CACVjE,KAAMM,EAAM6D,OAAOC,SAlFb3D,EAsFdwG,WAAa,SAAC3G,GACVG,EAAKwD,SAAS,CACViD,KAAM5G,EAAM6D,OAAOC,SAxFb3D,EA4Fd0G,WAAa,SAAC7G,GACVG,EAAKwD,SAAS,CACVgB,KAAM3E,EAAM6D,OAAOC,SA9Fb3D,EAkGd0J,YAAc,SAAC7J,GACXG,EAAKwD,SAAS,CACV+F,MAAQ1J,EAAM6D,OAAOC,SAlGzB3D,EAAK6B,MAAQ,CACTsE,MAAO,GACP1G,SAAW,GACXF,KAAM,GACNiF,KAAM,GACNoJ,UAAW,CAAC,aAAc,OAAQ,MAAO,SACzCC,YAAa,CAAC,WAAY,UAAW,SAAU,SAC/CC,aAAc,CAAC,QAAS,MAAO,UAAW,YAC1CC,WAAY,CAAC,WAAY,oBAAqB,kBAAmB,eACjEJ,UAAW,EACXpE,MAAO,IAZDvJ,mFAkBM,IAAAe,EAAAC,KACV6G,EAAY7G,KAAKf,MAAMmN,MAAMC,OAAOlH,MACpCmH,EAAUtM,KAAKf,MAAMmN,MAAMC,OAAOC,QAClC7N,EAAWuB,KAAKf,MAAMmN,MAAMC,OAAO5N,SACzCiD,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,KAAAF,OAAuBnD,EAAvB,KAAAmD,OAAmC0K,EAAnC,oBAAA1K,OAA6DiF,GAChE7E,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACuE,GACL,IAAImE,EAAanE,EAAe7G,KAAK8E,MAAQ+B,EAAe7G,KAAKsG,OAC7D2E,EAAcpE,EAAe7G,KAAK6E,WAAagC,EAAe7G,KAAKkL,UACnEC,EAActE,EAAe7G,KAAKuG,MACtCxI,EAAKyC,SAAS,CACV2C,MAAQ8H,EACRxO,SAAWA,EACXF,KAAOsK,EAAe7G,KAAKzD,KAC3BiF,KAAOwJ,EACPzE,MAAO4E,uCAqEf,IACIvF,EAkBAwF,EAnBE3O,EAAWuB,KAAKf,MAAMmN,MAAMC,OAAO5N,SAgCzC,GA9BgB,SAAbA,EACCmJ,EAAY5H,KAAKa,MAAM+L,UAAUpF,IAAI,SAACjJ,EAAMmJ,GACxC,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAEvB,YAAbE,EACNmJ,EAAY5H,KAAKa,MAAMiM,aAAatF,IAAI,SAACjJ,EAAMmJ,GAC3C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAEvB,WAAbE,EACNmJ,EAAY5H,KAAKa,MAAMgM,YAAYrF,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAEtB,WAAbE,IACPmJ,EAAY5H,KAAKa,MAAMkM,WAAWvF,IAAI,SAACjJ,EAAMmJ,GACzC,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,MAIP,YAApCyB,KAAKf,MAAMmN,MAAMC,OAAOC,UACvBc,EACA5N,EAAAC,EAAAC,cAAA,UAAQkE,GAAG,kBAAkBjB,MAAO3C,KAAKa,MAAM0H,MAAO5E,SAAU3D,KAAK0I,YAAa9C,UAAQ,GACtFpG,EAAAC,EAAAC,cAAA,UAAQiD,MAAO3C,KAAKa,MAAM0H,OAAQvI,KAAKa,MAAM0H,OAC7C/I,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,QAImB,IAAxB3C,KAAKa,MAAM8L,SAAkB,CAC5B,IAAML,EAAUtM,KAAKf,MAAMmN,MAAMC,OAAOC,QACxC,MAAgB,WAAb7N,EACQe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAE,mBAAAgC,OAAqB0K,KAEjC9M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAE,aAAAgC,OAAenD,EAAf,KAAAmD,OAA2B0K,KAGlD,OACI9M,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAKmM,UAAW7L,UAAU,YAC1Cd,EAAAC,EAAAC,cAAA,oCACIF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKsF,YAAa/G,KAAK,OAAOqF,GAAG,YAAY4C,aAAcxG,KAAKa,MAAMsE,SAE3F3F,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBACXd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,oBAAoBsD,GAAG,eAAeD,SAAU3D,KAAKuF,YACnE/F,EAAAC,EAAAC,cAAA,UAAQ8G,aAAcxG,KAAKa,MAAMtC,MAAOyB,KAAKa,MAAMtC,MAClDqJ,GAEJwF,GAEL5N,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,YAAUiE,SAAU3D,KAAK0F,WAAY/C,MAAO3C,KAAKa,MAAM2C,KAAMI,GAAG,cAEpEpE,EAAAC,EAAAC,cAACqG,EAAD,CAAQxH,KAAK,SAAS+B,UAAU,gBAAhC,mBApKDK,cAkLRC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+BsL,IClLxCmB,uBACF,SAAAA,IAAc,IAAArO,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAqN,IACVrO,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAmL,GAAA/K,KAAAtC,QAiCJmM,UAAY,SAACtN,GACTA,EAAME,iBACN,IAAM8H,EAAY7H,EAAKC,MAAMmN,MAAMC,OAAOlH,MACpCmH,EAAUtN,EAAKC,MAAMmN,MAAMC,OAAOC,QAClC7N,EAAWO,EAAKC,MAAMmN,MAAMC,OAAO5N,SACnC6O,EAAgBtO,EAAK6B,MAAMyH,OAC3BoE,EAAe1N,EAAK6B,MAAM0H,MAChC7G,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,KAAAF,OAAuBnD,EAAvB,KAAAmD,OAAmC0K,EAAnC,gBAAA1K,OAAyDiF,GAC5D7E,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,MACxB6K,gBACAZ,kBAELpI,KAAK,SAACuE,GACL7J,EAAKwD,SAAS,CACV+F,MAAM,GACND,OAAQ,GACRqE,UAAU,OArDR3N,EA0DdsG,YAAc,SAACzG,KA1DDG,EA4DduG,WAAa,SAAC1G,KA5DAG,EA8Dd2J,aAAe,SAAC9J,GACZG,EAAKwD,SAAS,CACV8F,OAAQzJ,EAAM6D,OAAOC,SAhEf3D,EAoEd0J,YAAc,SAAC7J,GACXG,EAAKwD,SAAS,CACV+F,MAAO1J,EAAM6D,OAAOC,SApExB3D,EAAK6B,MAAQ,CACTsE,MAAM,GACN1G,SAAS,GACT6J,OAAO,GACP/J,KAAM,GACNgK,MAAO,GACPoE,UAAW,GARL3N,mFAcM,IAAAe,EAAAC,KACV6G,EAAY7G,KAAKf,MAAMmN,MAAMC,OAAOlH,MACpCmH,EAAUtM,KAAKf,MAAMmN,MAAMC,OAAOC,QAClC7N,EAAWuB,KAAKf,MAAMmN,MAAMC,OAAO5N,SAEzCiD,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,KAAAF,OAAuBnD,EAAvB,KAAAmD,OAAmC0K,EAAnC,qBAAA1K,OAA8DiF,GACjE7E,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACuE,GACL9I,EAAKyC,SAAS,CACV2C,MAAQ0D,EAAe7G,KAAK6E,UAC5BpI,SAAWA,EACXF,KAAOsK,EAAe7G,KAAKzD,0CAgDnC,IAA2B,IAAxByB,KAAKa,MAAM8L,SAAkB,CAC5B,IAAML,EAAUtM,KAAKf,MAAMmN,MAAMC,OAAOC,QAClC7N,EAAWuB,KAAKf,MAAMmN,MAAMC,OAAO5N,SACzC,OACIe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAE,aAAAgC,OAAenD,EAAf,KAAAmD,OAA2B0K,KAG3C,OACI9M,EAAAC,EAAAC,cAAA,OAAKY,UAAU,2BACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAKmM,UAAW7L,UAAU,kBACtCd,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sBACXd,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKsF,YAAa/G,KAAK,OAAOqF,GAAG,gBAAgBjB,MAAO3C,KAAKa,MAAMsE,QACpF3F,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBACXd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,8BAA8BsD,GAAG,eAAeD,SAAU3D,KAAKuF,YAC7E/F,EAAAC,EAAAC,cAAA,UAAQ8G,aAAcxG,KAAKa,MAAMtC,MAAOyB,KAAKa,MAAMtC,OAEvDiB,EAAAC,EAAAC,cAAA,UAAQY,UAAU,yBAAyBqC,MAAO3C,KAAKa,MAAM0H,MAAO5E,SAAU3D,KAAK0I,YAAa9C,UAAQ,GACpGpG,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,IAAd,SACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,QAIZnD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBACXd,EAAAC,EAAAC,cAAA,YAAUiE,SAAU3D,KAAK2I,aAAchG,MAAO3C,KAAKa,MAAMyH,OAAQ1E,GAAG,uBAExEpE,EAAAC,EAAAC,cAACqG,EAAD,CAAQxH,KAAK,SAAS+B,UAAU,gBAAhC,gBA5GKK,cA0HdC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+ByM,IC5HxCE,4LAGE,IAAIC,EAAO,aAAA5L,OAAgB5B,KAAKf,MAAMR,UAClCgP,EAAQ,aAAA7L,OAAgB5B,KAAKf,MAAMR,SAA3B,SACRiP,EAAQ,aAAA9L,OAAgB5B,KAAKf,MAAMR,SAA3B,cACRkP,EAAW,aAAA/L,OAAgB5B,KAAKf,MAAMR,SAA3B,YAEf,OACIe,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMnB,MAAO,CAAEyF,eAAgB,QAAUjF,GAAI4N,GAAShO,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBAAgBd,EAAAC,EAAAC,cAAA,uBAEzFF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMnB,MAAO,CAAEyF,eAAgB,QAAUjF,GAAI6N,GAAUjO,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cAAad,EAAAC,EAAAC,cAAA,qBAEvFF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMnB,MAAO,CAAEyF,eAAgB,QAAUjF,GAAI8N,GAAUlO,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBAAkBd,EAAAC,EAAAC,cAAA,wBAE5FF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMnB,MAAO,CAAEyF,eAAgB,QAAUjF,GAAI+N,GAAanO,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBAAgBd,EAAAC,EAAAC,cAAA,gCArB3FiB,cAoCPC,mBANf,SAAyBC,GACrB,MAAO,CACHpC,SAAUoC,EAAMpC,WAIgB,KAAzBmC,CAA+B2M,UC3B/BK,OAXf,SAA4B3O,GACxB,OACIO,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yBACXd,EAAAC,EAAAC,cAACmO,GAAD,MACArO,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACVrB,EAAMiC,YCqBR4M,oLAdP,OACItO,EAAAC,EAAAC,cAACqO,GAAD,KACIvO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWrE,KAC/CtK,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,sBAAsBC,UAAWvH,IACnDpH,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,2BAA2BC,UAAWlG,IACxDzI,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBC,UAAWvF,IACtDpJ,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,2CAA2CC,UAAWjC,KACxE1M,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,8CAA8CC,UAAWd,aAVxE1M,aCCbyN,eACF,SAAAA,IAAc,IAAApP,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAoO,IACVpP,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAkM,GAAA9L,KAAAtC,QAwBJkF,YAAc,SAACC,EAAO5G,EAAMiF,GACxB9B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,uBACHE,KAAM,CACF6E,UAAW1B,EACX5G,KAAMA,EACNuI,KAAMtD,EACNf,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GAC+B,IAAhCA,EAAgB/E,KAAK5B,OACrBpB,EAAKwD,SAAS,CACVS,WAAW,EACX+D,QAAS,UACT3G,IAAK,0CAGTrB,EAAKwD,SAAS,CACVyE,KAAMF,OA5CR/H,EAkDdkI,eAAiB,SAACL,GACdnF,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,qBAAAF,OAAuCiF,GAC1C7E,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,EACN1G,IAAK,8BACL2G,QAAS,kBACT/D,WAAW,OA9DTjE,EAmEdmI,YAAc,SAACN,GACXnF,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,yBAAAF,OAA2CiF,GAC9C7E,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA5EJ/H,EAiFdqH,cAAgB,SAACV,GACbjE,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,oBAAAF,OAAsC+D,GACzC3D,KAAM,CACFzD,KAAMoH,EACNlD,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA3FJ/H,EAgGduH,YAAc,WACV7E,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,2BACHE,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC+J,GACLrP,EAAKwD,SAAS,CACVyE,KAAMoH,OAvGdrP,EAAK6B,MAAQ,CACToG,KAAM,GACNpB,MAAO,CAAC,QAAS,MAAO,UAAW,YACnCxF,IAAK,GACL4C,WAAW,EACX+D,QAAS,mBAPHhI,mFAWM,IAAAe,EAAAC,KAChB0B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,2BACHE,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC+J,GACLtO,EAAKyC,SAAS,CACVyE,KAAMoH,uCA0FT,IAAAhH,EAAArH,KAGL,QAA6BsH,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAAoB,CACpC9C,SAASC,cAAc,eAAeC,MAAMkP,gBAAkB,UAC9D,IAAIC,EAAcvO,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAACgH,EAAS9G,GACjD,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAK8O,EAAQ3H,WACbrH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAI8O,EAAQ1H,QAGpBtH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKH,eAAesH,EAAQ3H,YAAYvG,UAAU,cAAzE,QACAd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,+BAAoD4O,EAAQ3H,WAAtE,SAC/BrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKF,YAAYqH,EAAQ3H,YAAYvG,UAAU,gBAAtE,cAOpB,IAAMsH,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAGpCsJ,EAAc7H,KAAKa,MAAMgF,MAAM2B,IAAI,SAAC7B,EAAQ+B,GAC9C,OAAOlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOgD,GAASA,KAI3C,OAAgC,IAA5B3F,KAAKf,MAAMkB,MAAMC,OAEbZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAIbJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,QACXd,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAOvD,KAAKa,MAAMmG,QAClBxD,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAACoI,EAAD,CACIvE,MAAM,oBACN2B,YAAalF,KAAKkF,YAClBrB,YAAY,4BACZiC,SAAS,cACTT,YAAY,eACZQ,MAAO+B,KAGfpI,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAACqI,EAAD,CACIrB,cAAc,iBACdF,aAAcxG,KAAKa,MAAMgF,MAAM,GAC/Bc,QAASkB,EACTxB,cAAerG,KAAKqG,cACpBE,YAAavG,KAAKuG,cAEtB/G,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOqI,cAjLrB5N,aAgMXC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+BwN,IChMxCK,eACE,SAAAA,IAAc,IAAAzP,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAyO,IACVzP,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAuM,GAAAnM,KAAAtC,QAwBJkF,YAAc,SAACC,EAAO5G,EAAMiF,GACxB9B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,+BACHE,KAAM,CACF6E,UAAW1B,EACX5G,KAAMA,EACNuI,KAAMtD,EACNf,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GAC+B,IAAhCA,EAAgB/E,KAAK5B,OACrBpB,EAAKwD,SAAS,CACVS,WAAW,EACX+D,QAAS,UACT3G,IAAK,0CAGTrB,EAAKwD,SAAS,CACVyE,KAAMF,OA5CR/H,EAkDdmI,YAAc,SAACN,GACXnF,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,6BAAAF,OAA+CiF,GAClD7E,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA3DJ/H,EAgEdqH,cAAgB,SAACV,GACbjE,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,wBAAAF,OAA0C+D,GAC7C3D,KAAM,CACFzD,KAAMoH,EACNlD,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA1EJ/H,EA+EduH,YAAc,WACV7E,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,+BACHE,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC8C,GACLpI,EAAKwD,SAAS,CACVyE,KAAMG,OAtFdpI,EAAK6B,MAAQ,CACToG,KAAM,GACN5G,IAAK,GACLwF,MAAO,CAAC,QAAS,MAAO,UAAW,YACnC5C,WAAW,EACX+D,QAAS,IAPHhI,mFAWM,IAAAe,EAAAC,KAChB0B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,+BACHE,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC+J,GACDtO,EAAKyC,SAAS,CACVyE,KAAMoH,uCAyEb,IAAAhH,EAAArH,KAKL,QAA6BsH,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAAoB,CACpC9C,SAASC,cAAc,eAAeC,MAAMkP,gBAAkB,UAC9D,IAAIpG,EAAYlI,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAACgH,EAAS9G,GAC/C,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAK8O,EAAQ3H,WACbrH,EAAAC,EAAAC,cAAA,SAAI8O,EAAQ1H,OAEhBtH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBAEXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,gBAAed,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,uCAAuD4O,EAAQ3H,WAAzE,WACjCrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,oCAAqD4O,EAAQ3H,WAAvE,SAC/BrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKF,YAAYqH,EAAQ3H,YAAYvG,UAAU,gBAAtE,cAQpB,IAAMuH,EAAc7H,KAAKa,MAAMgF,MAAM2B,IAAI,SAAC7B,EAAQ+B,GAC9C,OAAOlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOgD,GAASA,KAGrCiC,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAG1C,OAAgC,IAA5ByB,KAAKf,MAAMkB,MAAMC,OAEbZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAIbJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAOvD,KAAKa,MAAMmG,QAClBxD,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAACoI,EAAD,CACIvE,MAAM,kBACN2B,YAAalF,KAAKkF,YAClBrB,YAAY,0BACZiC,SAAS,cACTT,YAAY,eACZQ,MAAO+B,KAGfpI,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAACqI,EAAD,CACIrB,cAAc,iBACdF,aAAcxG,KAAKa,MAAMgF,MAAM,GAC/Bc,QAASkB,EACTxB,cAAerG,KAAKqG,cACpBE,YAAavG,KAAKuG,cAEtB/G,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOgC,cAjKpBvH,aAgLZC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+B6N,IClL5CC,eACF,SAAAA,IAAc,IAAA1P,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAA0O,IACV1P,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAwM,GAAApM,KAAAtC,QAuBJqI,UAAY,SAAClD,EAAOmD,EAAQ/J,EAAMgK,GAC9B7G,IAAM,CACFK,OAAS,OACTJ,IAAG,GAAAC,OAAMC,OAAOC,QAAb,8BAAAF,OAAiDuD,GACpDnD,KAAO,CACHS,MAAQzD,EAAKC,MAAMkB,MAAMsC,MACzB0C,QACAmD,SACA/J,OACAgK,WAELjE,KAAK,SAACuE,GACL7J,EAAKwD,SAAS,CACVyE,KAAO4B,EACPxI,IAAG,uCAAAuB,OAA0CuD,EAA1C,KACHlC,WAAW,MAGnB/D,SAASC,cAAc,eAAeC,MAAM+G,WAAa,WA1C/CnH,EA6Cd8J,aAAe,SAAC3D,GACZzD,IAAM,CACFK,OAAS,OACTJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,iCAAAF,OAAmDuD,GACtDnD,KAAM,CACFS,MAAQzD,EAAKC,MAAMkB,MAAMsC,SAE9B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAOF,OApDf/H,EAAK6B,MAAQ,CACToG,KAAO,GACP5G,IAAM,GACNwF,MAAO,CAAC,QAAS,MAAO,UAAW,YACnC5C,WAAW,GANLjE,mFAUK,IAAAe,EAAAC,KACf0B,IAAM,CACFK,OAAS,OACTJ,IAAG,GAAAC,OAAMC,OAAOC,QAAb,8BACHE,KAAO,CACHS,MAAQzC,KAAKf,MAAMkB,MAAMsC,SAE9B6B,KAAK,SAACyE,GACLhJ,EAAKyC,SAAU,CACXyE,KAAO8B,uCAwCV,IAAA1B,EAAArH,KAGL,QAA6BsH,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAAoB,CACpC9C,SAASC,cAAc,eAAeC,MAAMkP,gBAAkB,UAC9D,IAAIK,EAAiB3O,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAACc,EAAQZ,GACnD,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAK4I,EAAOzB,UAAZ,MAA0ByB,EAAOC,MAAjC,UACA/I,EAAAC,EAAAC,cAAA,SAAI4I,EAAOA,SAEf9I,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,kCAAqD0I,EAAOzB,WAAtE,SAC/BrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKyB,aAAaR,EAAOzB,YAAYvG,UAAU,gBAAtE,eAQxB,IAAMsH,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAG1C,OAAgC,IAA5ByB,KAAKf,MAAMkB,MAAMC,OAEbZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAIbJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAM,gBACNC,KAAMxD,KAAKa,MAAMR,IACjB4I,kBAAkB,SAClBxF,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAACwJ,EAAD,CACIrF,YAAY,6BACZwB,YAAa,eACboD,aAAe,kBACf5C,MAAO+B,EACPS,UAAWrI,KAAKqI,aAGxB7I,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOyI,cAjHlBhO,aAgIdC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAIkB,KAAxBS,CAA8B8N,IClIvCE,eACF,SAAAA,IAAa,IAAA5P,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAA4O,IACT5P,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA0M,GAAAtM,KAAAtC,QAQJqJ,eAAiB,SAACU,EAAKC,GACnB,IAAIC,EAAiBC,EAAWC,EAE1BC,EADgBJ,EAAKK,QAAQ,KAAK,IACEA,QAAQ,KAAK,KACjDC,EAAuB,6DAAA1I,OAA8DwI,EAA9D,SAAAxI,OAAyFgI,EAAOC,QAC7HnI,IAAM,CACFK,OAAS,MACTJ,IAAM2I,IACPhG,KAAK,SAACiG,GACLL,EAAaK,EAASvI,KAAKwI,QAAQ,GAAGC,SAASC,SAASC,IACxDR,EAAaI,EAASvI,KAAKwI,QAAQ,GAAGC,SAASC,SAASE,IACxDX,EAAkB,CACdU,IAAMT,EACNU,IAAMT,GAGV,IAAIU,EAAU,CACZC,MAAK,GAAAlJ,OAAKmI,GACVgB,OAAS,WACTL,SAAWT,EACXe,OAAQ,KAKNC,EAAU,IAAIpJ,OAAOqJ,OAAOC,KAAKC,OAAOC,cAAcnM,SAASQ,cAAc,QAC7E4L,EAAgB,GACpBL,EAAQM,WAAWV,EAAS,SAACL,EAASgB,GAClC,IAAIC,EAEAA,EADA,GAAKjB,EAAQpK,OACA,GAEAoK,EAAQpK,OAGzB,IAAI,IAAIsH,EAAI,EAAGA,EAAI+D,EAAY/D,IAC3B4D,EAAclI,KAAKoH,EAAQ9C,IAG/B1I,EAAKwD,SAAS,CACVkJ,eAAiBJ,QAI7BpM,SAASC,cAAc,eAAeC,MAAM+G,WAAa,WArDhDnH,EAwDb2M,eAAiB,SAACxG,EAAO5G,EAAMiF,GAE3B,IAAMf,EAAQzD,EAAKC,MAAMkB,MAAMsC,MAC/Bf,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,2BACHE,KAAM,CACFmD,QACA5G,OACAiF,OACAf,WAEL6B,KAAK,SAACyC,GAC2B,UAA7BA,EAAgB/E,KAAK3B,KACpBrB,EAAKC,MAAMkE,QAAQC,KAAK,6BAtEvBpE,EA2Eb4M,mBAAqB,SAACzG,EAAO5G,EAAMiF,GAC/B,IAAMf,EAAQzD,EAAKC,MAAMkB,MAAMsC,MAC/Bf,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,+BACHE,KAAM,CACFmD,QACA5G,OACAiF,OACAf,WAEL6B,KAAK,SAACyC,GAC2B,UAA7BA,EAAgB/E,KAAK3B,KACpBrB,EAAKC,MAAMkE,QAAQC,KAAK,kCAtFhCpE,EAAK6B,MAAQ,CACT6K,eAAiB,GACjB7F,MAAO,CAAC,QAAS,MAAO,UAAW,aAJ9B7G,wEA8FL,IAAAe,EAAAC,KACE0L,EAAiB1L,KAAKa,MAAM6K,eAAelE,IAAI,SAACrC,EAAOuC,GAIzD,IAHA,IAEInJ,EAFEqJ,EAAY7H,EAAKc,MAAMgF,MACvBgG,EAAmB1G,EAAMU,MAEvB6B,EAAG,EAAGA,EAAIE,EAAUxH,OAAQsH,IAChC,IAAI,IAAIoE,EAAI,EAAGA,EAAID,EAAiBzL,OAAQ0L,IACrClE,EAAUF,GAAGqE,gBAAkBF,EAAiBC,KAC/CvN,EAAOqJ,EAAUF,IAS7B,YAJYJ,IAAT/I,IACCA,EAAO,YAIPiB,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAKyF,EAAM4E,MACXvK,EAAAC,EAAAC,cAAA,SAAInB,IAERiB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMhF,EAAK4L,eAAexG,EAAM4E,KAAMxL,EAAM4G,EAAM6G,oBAAoB1L,UAAU,cAAjG,QACAd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMhF,EAAK6L,mBAAmBzG,EAAM4E,KAAMxL,EAAM4G,EAAM6G,oBAAoB1L,UAAU,cAArG,gBAMhB,OAA+B,IAA5BN,KAAKf,MAAMkB,MAAMC,OAEhBZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAITJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAACuM,EAAD,CACAvC,kBAAkB,6BAClBC,oBAAoB,uBACpBN,eAAgBrJ,KAAKqJ,kBAGzB7J,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBACXd,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOwF,cA/IlB/K,aA+JdC,mBAPf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,MACb1B,SAAWoC,EAAMpC,WAIe,KAAzBmC,CAA+BgO,IC3I/BC,oLAdP,OACIrP,EAAAC,EAAAC,cAACqO,GAAD,KACIvO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWS,KACjDpP,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBC,UAAWW,KACtDtP,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,8BAA8BC,UAAWM,KAC3DjP,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,4BAA4BC,UAAWO,KACzDlP,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,2CAA2CC,UAAWjC,KACxE1M,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,8CAA8CC,UAAWd,aAVrE1M,aCAhBoO,eACF,SAAAA,IAAc,IAAA/P,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAA+O,IACV/P,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA6M,GAAAzM,KAAAtC,QAwBJgP,aAAe,SAACC,EAAU1Q,EAAMiF,GAC5B9B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,qBACHE,KAAM,CACF6E,UAAWoI,EACX1Q,KAAMA,EACNuI,KAAMtD,EACNf,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GAC+B,IAAhCA,EAAgB/E,KAAK5B,OACrBpB,EAAKwD,SAAS,CACVS,WAAW,EACX+D,QAAS,UACT3G,IAAK,0CAGTrB,EAAKwD,SAAS,CACVyE,KAAMF,OA5CR/H,EAkDdkI,eAAiB,SAAC+H,GACdvN,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,oBAAAF,OAAsCqN,GACzCjN,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,EACN1G,IAAK,8BACL2G,QAAS,kBACT/D,WAAW,OA9DTjE,EAmEdkQ,aAAe,SAACD,GACZvN,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,yBAAAF,OAA2CqN,GAC9CjN,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA5EJ/H,EAiFdqH,cAAgB,SAACV,GACbjE,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,mBAAAF,OAAqC+D,GACxC3D,KAAM,CACFzD,KAAMoH,EACNlD,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA3FJ/H,EAgGduH,YAAc,WACV7E,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,yBACHE,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC6K,GACLnQ,EAAKwD,SAAS,CACVyE,KAAMkI,OAvGdnQ,EAAK6B,MAAQ,CACToG,KAAM,GACNpB,MAAO,CAAC,WAAY,UAAW,SAAU,SACzCxF,IAAK,GACL4C,WAAW,EACX+D,QAAS,mBAPHhI,mFAWM,IAAAe,EAAAC,KAChB0B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,yBACHE,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC6K,GACLpP,EAAKyC,SAAS,CACVyE,KAAMkI,uCA0FT,IAAA9H,EAAArH,KAGL,QAA6BsH,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAAoB,CACpC9C,SAASC,cAAc,eAAeC,MAAMkP,gBAAkB,UAC9D,IAAIc,EAAapP,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAACyH,EAAUvH,GACjD,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAKuP,EAASpI,WACdrH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAIuP,EAASnI,QAGrBtH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKH,eAAe+H,EAASpI,YAAYvG,UAAU,cAA1E,QACAd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,8BAAqDqP,EAASpI,WAAxE,SAC/BrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAK6H,aAAaD,EAASpI,YAAYvG,UAAU,gBAAxE,cAQpB,IAAMsH,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAGpCsJ,EAAc7H,KAAKa,MAAMgF,MAAM2B,IAAI,SAAC7B,EAAQ+B,GAC9C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOgD,GAASA,KAG5C,OAAgC,IAA5B3F,KAAKf,MAAMkB,MAAMC,OAEbZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAIbJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,QACXd,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAOvD,KAAKa,MAAMmG,QAClBxD,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAACoI,EAAD,CACI5C,YAAalF,KAAKgP,aAClBnL,YAAY,sBACZiC,SAAS,cACTT,YAAY,eACZQ,MAAO+B,KAGfpI,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAACqI,EAAD,CACIrB,cAAc,iBACdF,aAAcxG,KAAKa,MAAMgF,MAAM,GAC/Bc,QAASkB,EACTxB,cAAerG,KAAKqG,cACpBE,YAAavG,KAAKuG,cAEtB/G,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOkJ,cAhLtBzO,aA+LVC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+BmO,IC9LxCM,eACF,SAAAA,IAAc,IAAArQ,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAqP,IACVrQ,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAmN,GAAA/M,KAAAtC,QAwBJgP,aAAe,SAACC,EAAU1Q,EAAMiF,GAC5B9B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,8BACHE,KAAM,CACF6E,UAAWoI,EACX1Q,KAAMA,EACNuI,KAAMtD,EACNf,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GAC+B,IAAhCA,EAAgB/E,KAAK5B,OACrBpB,EAAKwD,SAAS,CACVS,WAAW,EACX+D,QAAS,UACT3G,IAAK,0CAGTrB,EAAKwD,SAAS,CACVyE,KAAMF,OA5CR/H,EAmDdmI,YAAc,SAAC8H,GACXvN,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,4BAAAF,OAA8CqN,GACjDjN,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA5DJ/H,EAiEdqH,cAAgB,SAACV,GACbjE,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,uBAAAF,OAAyC+D,GAC5C3D,KAAM,CACFzD,KAAMoH,EACNlD,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA3EJ/H,EAgFduH,YAAc,WACV7E,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,6BACHE,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC6K,GACLnQ,EAAKwD,SAAS,CACVyE,KAAMkI,OAvFdnQ,EAAK6B,MAAQ,CACToG,KAAM,GACNpB,MAAO,CAAC,WAAY,UAAW,SAAU,SACzCxF,IAAK,GACL2G,QAAS,GACT/D,WAAW,GAPLjE,mFAWM,IAAAe,EAAAC,KAChB0B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,6BACHE,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAAC6K,GACLpP,EAAKyC,SAAS,CACVyE,KAAMkI,uCA0ET,IAAA9H,EAAArH,KAGC4H,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAGpCsJ,EAAc7H,KAAKa,MAAMgF,MAAM2B,IAAI,SAAC7B,EAAQ+B,GAC9C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOgD,GAASA,KAO5C,QAA6B2B,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAAoB,CACpC9C,SAASC,cAAc,eAAeC,MAAMkP,gBAAkB,UAC9D,IAAIpG,EAAYlI,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAACyH,EAAUvH,GAChD,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAKuP,EAASpI,WACdrH,EAAAC,EAAAC,cAAA,SAAIuP,EAASnI,OAEjBtH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,gBAAed,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,sCAAuDqP,EAASpI,WAA1E,WACjCrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,mCAAqDqP,EAASpI,WAAxE,SAC/BrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKF,YAAY8H,EAASpI,YAAYvG,UAAU,gBAAvE,cAQpB,OAAgC,IAA5BN,KAAKf,MAAMkB,MAAMC,OAEbZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAIbJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAOvD,KAAKa,MAAMmG,QAClBxD,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAACoI,EAAD,CACIvE,MAAM,8BACN2B,YAAalF,KAAKgP,aAClBnL,YAAY,+BACZiC,SAAS,cACTT,YAAY,eACZQ,MAAO+B,KAGfpI,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAACqI,EAAD,CACIrB,cAAc,iBACdF,aAAcxG,KAAKa,MAAMgF,MAAM,GAC/Bc,QAASkB,EACTxB,cAAerG,KAAKqG,cACpBE,YAAavG,KAAKuG,cAEtB/G,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOgC,cAnKjBvH,aAkLfC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+ByO,ICpLxCC,eACF,SAAAA,IAAc,IAAAtQ,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAsP,IACVtQ,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAoN,GAAAhN,KAAAtC,QAuBJqI,UAAY,SAAC4G,EAAU3G,EAAQ/J,EAAMgK,GACjC7G,IAAM,CACFK,OAAS,OACTJ,IAAG,GAAAC,OAAMC,OAAOC,QAAb,4BAAAF,OAA+CqN,GAClDjN,KAAO,CACHS,MAAQzD,EAAKC,MAAMkB,MAAMsC,MACzBwM,WACA3G,SACA/J,OACAgK,WAELjE,KAAK,SAACuE,GACL7J,EAAKwD,SAAS,CACVyE,KAAO4B,EACPxI,IAAG,uCAAAuB,OAA0CqN,EAA1C,KACHhM,WAAW,MAGnB/D,SAASC,cAAc,eAAeC,MAAM+G,WAAa,WA1C/CnH,EA6Cd8J,aAAe,SAACmG,GACZvN,IAAM,CACFK,OAAS,OACTJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,+BAAAF,OAAiDqN,GACpDjN,KAAM,CACFS,MAAQzD,EAAKC,MAAMkB,MAAMsC,SAE9B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAOF,OApDf/H,EAAK6B,MAAQ,CACToG,KAAM,GACNpB,MAAO,CAAC,WAAY,UAAW,SAAU,SACzCxF,IAAK,GACL4C,WAAW,GANLjE,mFAUM,IAAAe,EAAAC,KAChB0B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,4BACHE,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyE,GACLhJ,EAAKyC,SAAU,CACXyE,KAAM8B,uCAwCT,IAAA1B,EAAArH,KAGL,QAA6BsH,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAAoB,CACpC9C,SAASC,cAAc,eAAeC,MAAMkP,gBAAkB,UAC9D,IAAIiB,EAAgBvP,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAACc,EAAQZ,GAClD,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAK4I,EAAOzB,UAAZ,WAA0ByB,EAAOC,MAAjC,UACA/I,EAAAC,EAAAC,cAAA,SAAI4I,EAAOA,SAEf9I,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,iCAAqD0I,EAAOzB,WAAtE,SAC/BrH,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKyB,aAAaR,EAAOzB,YAAYvG,UAAU,gBAAtE,eAQxB,IAAMsH,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAG1C,OAAgC,IAA5ByB,KAAKf,MAAMkB,MAAMC,OAEbZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAIbJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAM,gBACNC,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAACwJ,EAAD,CACIrF,YAAY,+BACZwB,YAAY,eACZoD,aAAa,kBACb5C,MAAO+B,EACPS,UAAWrI,KAAKqI,aAGxB7I,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOqJ,cAhHnB5O,aA+HbC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+B0O,ICjIxCE,eACF,SAAAA,IAAa,IAAAxQ,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAwP,IACTxQ,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAsN,GAAAlN,KAAAtC,QAUJqJ,eAAiB,SAACU,EAAKC,GACnB,IAAIC,EAAiBC,EAAWC,EAE1BC,EADgBJ,EAAKK,QAAQ,KAAK,IACEA,QAAQ,KAAK,KACjDC,EAAuB,6DAAA1I,OAA8DwI,EAA9D,SAAAxI,OAAyFgI,EAAOC,QAC7HnI,IAAM,CACFK,OAAS,MACTJ,IAAM2I,IACPhG,KAAK,SAACiG,GACLL,EAAaK,EAASvI,KAAKwI,QAAQ,GAAGC,SAASC,SAASC,IACxDR,EAAaI,EAASvI,KAAKwI,QAAQ,GAAGC,SAASC,SAASE,IACxDX,EAAkB,CACdU,IAAMT,EACNU,IAAMT,GAGV,IAAIU,EAAU,CACZC,MAAK,GAAAlJ,OAAKmI,GACVgB,OAAS,WACTL,SAAWT,EACXe,OAAQ,KAKNC,EAAU,IAAIpJ,OAAOqJ,OAAOC,KAAKC,OAAOC,cAAcnM,SAASQ,cAAc,QAC7E4L,EAAgB,GACpBL,EAAQM,WAAWV,EAAS,SAACL,EAASgB,GAClC,IAAIC,EAEAA,EADA,GAAKjB,EAAQpK,OACA,GAEAoK,EAAQpK,OAGzB,IAAI,IAAIsH,EAAI,EAAGA,EAAI+D,EAAY/D,IAC3B4D,EAAclI,KAAKoH,EAAQ9C,IAG/B1I,EAAKwD,SAAS,CACVkJ,eAAiBJ,QAI7BpM,SAASC,cAAc,eAAeC,MAAM+G,WAAa,WAvDhDnH,EA0Db2M,eAAiB,SAACxG,EAAO5G,EAAMiF,GAC3B,IAAMf,EAAQzD,EAAKC,MAAMkB,MAAMsC,MAC/Bf,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,0BACHE,KAAM,CACFmD,QACA5G,OACAiF,OACAf,WAEL6B,KAAK,SAACyC,GAC2B,UAA7BA,EAAgB/E,KAAK3B,KACpBrB,EAAKC,MAAMkE,QAAQC,KAAK,4BAvEvBpE,EA4Eb4M,mBAAqB,SAACzG,EAAO5G,EAAMiF,GAC/B,IAAMf,EAAQzD,EAAKC,MAAMkB,MAAMsC,MAC/Bf,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,8BACHE,KAAM,CACFmD,QACA5G,OACAiF,OACAf,WAEL6B,KAAK,SAACyC,GAC2B,UAA7BA,EAAgB/E,KAAK3B,KACpBrB,EAAKC,MAAMkE,QAAQC,KAAK,iCAvFhCpE,EAAK6B,MAAQ,CACT6K,eAAiB,GACjB7F,MAAO,CAAC,WAAY,UAAW,SAAU,SACzC5C,WAAW,GALNjE,wEA+FL,IAAAe,EAAAC,KACE0L,EAAiB1L,KAAKa,MAAM6K,eAAelE,IAAI,SAACrC,EAAOuC,GAIzD,IAHA,IAEInJ,EAFEqJ,EAAY7H,EAAKc,MAAMgF,MACvBgG,EAAmB1G,EAAMU,MAEvB6B,EAAG,EAAGA,EAAIE,EAAUxH,OAAQsH,IAChC,IAAI,IAAIoE,EAAI,EAAGA,EAAID,EAAiBzL,OAAQ0L,IACrClE,EAAUF,GAAGqE,gBAAkBF,EAAiBC,KAC/CvN,EAAOqJ,EAAUF,IAU7B,YALYJ,IAAT/I,IACCA,EAAO,YAKPiB,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAKyF,EAAM4E,MACXvK,EAAAC,EAAAC,cAAA,SAAInB,IAERiB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMhF,EAAK4L,eAAexG,EAAM4E,KAAMxL,EAAM4G,EAAM6G,oBAAoB1L,UAAU,cAAjG,QACAd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMhF,EAAK6L,mBAAmBzG,EAAM4E,KAAMxL,EAAM4G,EAAM6G,oBAAoB1L,UAAU,cAArG,gBAKhB,OACId,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAACuM,EAAD,CACAvC,kBAAkB,6BAClBC,oBAAoB,uBACpBN,eAAgBrJ,KAAKqJ,kBAGzB7J,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBACXd,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOwF,cA3If/K,aAyJbC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+B4O,ICpI/BC,oLAdP,OACIjQ,EAAAC,EAAAC,cAACqO,GAAD,KACIvO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,UAAWqB,KAChDhQ,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,wBAAwBC,UAAWY,KACrDvP,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,6BAA6BC,UAAWkB,KAC1D7P,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,2BAA2BC,UAAWmB,KACxD9P,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,2CAA2CC,UAAWjC,KACxE1M,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,8CAA8CC,UAAWd,aAVtE1M,aC6EN+O,uBArFX,SAAAA,IAAa,IAAA1Q,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAA0P,IACT1Q,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAwN,GAAApN,KAAAtC,QAYJ2P,YAAc,SAAC9Q,GACXA,EAAME,eAAeF,GACrBG,EAAKC,MAAM0Q,YAAY3Q,EAAK6B,MAAM+O,OAAQ5Q,EAAK6B,MAAMtC,KAAMS,EAAK6B,MAAM4E,KAAMzG,EAAK6B,MAAMgP,aAAc7Q,EAAK6B,MAAM2C,MAChHtE,SAASkG,eAAe,wBAAwBzC,MAAQ3D,EAAKC,MAAMoG,YACnErG,EAAKwD,SAAS,CACVoN,OAAQ,GACRrR,KAAM,GACNkH,KAAK,GACLoK,aAAa,GACbrM,KAAM,MAtBDxE,EA2Bb8Q,YAAc,SAACjR,GACXG,EAAKwD,SAAS,CACVoN,OAAQ/Q,EAAM6D,OAAOC,SA7BhB3D,EAiCbuG,WAAa,SAAC1G,GACVG,EAAKwD,SAAS,CACVjE,KAAMM,EAAM6D,OAAOC,SAnCd3D,EAuCbwG,WAAa,SAAC3G,GACV,IAAI4G,EAAM5G,EAAM6D,OAAOC,MAEnBoN,EAAYtK,EAAMuK,WAAWC,MAAM,EAAE,IACrCC,EAAWH,EAASE,MAAM,EAAE,GAC5BE,EAAcJ,EAASE,MAAM,EAAE,IAAK5F,QAAQ,OAAQ,KACpD+F,EAAW,GAAAxO,OAAMuO,EAAN,KAAAvO,OAAoBsO,GAEnClR,EAAKwD,SAAS,CACVqN,aAAcO,EACd3K,KAAMA,KAjDDzG,EAqDb0G,WAAa,SAAC7G,GACVG,EAAKwD,SAAS,CACVgB,KAAM3E,EAAM6D,OAAOC,SArDvB3D,EAAK6B,MAAQ,CACT+O,OAAQ,GACRrR,KAAM,GACNkH,KAAK,GACLoK,aAAa,GACbrM,KAAM,GACNmC,OAAQ,IARH3G,wEA4DT,IAAIqR,GAAU,IAAIC,MAAOC,cAAcN,MAAM,EAAE,IAE/C,OACIzQ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yBACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAK2P,YAAarP,UAAU,gBACxCd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBACXd,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAK8P,YAAavR,KAAK,OAAOqF,GAAG,cAAcC,YAAa7D,KAAKf,MAAM4E,YAAalB,MAAO3C,KAAKa,MAAM+O,OAAQhK,UAAQ,KAE3IpG,EAAAC,EAAAC,cAAA,OAAKY,UAAU,uBACXd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,gBAAgBsD,GAAG,uBAAuBD,SAAU3D,KAAKuF,WAAYK,UAAQ,GAC3FpG,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,IAAI3C,KAAKf,MAAMoG,aAC5BrF,KAAKf,MAAM4G,OAEhBrG,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKwF,WAAY5B,GAAG,uBAAuBrF,KAAK,OAAOiS,IAAKH,EAASI,IAZxF,aAYsG9N,MAAO3C,KAAKa,MAAM4E,KAAMG,UAAQ,KAExIpG,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAAA,YAAUiE,SAAU3D,KAAK0F,WAAY9B,GAAG,kBAAkBC,YAAa7D,KAAKf,MAAM6G,SAAUnD,MAAO3C,KAAKa,MAAM2C,QAElHhE,EAAAC,EAAAC,cAACqG,EAAD,CAAQxH,KAAK,SAAS+B,UAAU,gBAAhC,gBA/EOK,cCQrB+P,eACF,SAAAA,IAAc,IAAA1R,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAA0Q,IACV1R,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAwO,GAAApO,KAAAtC,QA0BJ2P,YAAc,SAAC9Q,EAAON,EAAMkH,EAAMoK,EAAerM,GAC7C9B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,oBACHE,KAAM,CACFkL,UAAWrO,EACXN,KAAMA,EACNsR,aAAcA,EACdpK,KAAMA,EACNqB,KAAMtD,EACNf,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GAC+B,IAAhCA,EAAgB/E,KAAK5B,OACrBpB,EAAKwD,SAAS,CACVS,WAAW,EACX+D,QAAS,UACT3G,IAAK,0CAGTrB,EAAKwD,SAAS,CACVyE,KAAMF,OAhDR/H,EAsDdkI,eAAiB,SAACgG,GACdxL,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,oBAAAF,OAAsCsL,GACzClL,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,EACN1G,IAAK,8BACL2G,QAAS,kBACT/D,WAAW,OAlETjE,EAuEd2R,YAAc,SAACzD,GACXxL,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,wBAAAF,OAA0CsL,GAC7ClL,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OAhFJ/H,EAqFdqH,cAAgB,SAACV,GACbjE,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,mBAAAF,OAAqC+D,GACxC3D,KAAM,CACFzD,KAAMoH,EACNlD,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA/FJ/H,EAqGduH,YAAc,WACV7E,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,wBACHE,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACsM,GACL5R,EAAKwD,SAAS,CACVyE,KAAM2J,OA5Gd5R,EAAK6B,MAAQ,CACToG,KAAM,GACNpB,MAAO,CAAC,WAAW,oBAAqB,kBAAmB,eAC3DgK,aAAa,GACbpK,KAAK,GACLpF,IAAK,GACL4C,WAAW,EACX+D,QAAS,mBATHhI,mFAaM,IAAAe,EAAAC,KAChB0B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,wBACHE,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACsM,GACL7Q,EAAKyC,SAAS,CACVyE,KAAM2J,uCA6FT,IAAAvJ,EAAArH,KAIL,QAA6BsH,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAAoB,CACpC9C,SAASC,cAAc,eAAeC,MAAMkP,gBAAkB,UAC9D,IAAIuC,EAAY7Q,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAACoI,EAAQlI,GAC9C,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aAClBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACZd,EAAAC,EAAAC,cAAA,UAAKkQ,EAAO1C,WACZ1N,EAAAC,EAAAC,cAAA,SAAIkQ,EAAOC,cACXrQ,EAAAC,EAAAC,cAAA,SAAIkQ,EAAO9I,OAEftH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKH,eAAe0I,EAAO1C,YAAY5M,UAAU,cAAxE,QACAd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,kCAA0DgQ,EAAO1C,WAA3E,SAC/B1N,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKsJ,YAAYf,EAAO1C,YAAY5M,UAAU,gBAArE,cAQpB,IAAMsH,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAGpCsJ,EAAc7H,KAAKa,MAAMgF,MAAM2B,IAAI,SAAC7B,EAAQ+B,GAC9C,OAAOlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOgD,GAASA,KAG3C,OAAgC,IAA5B3F,KAAKf,MAAMkB,MAAMC,OAEbZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAIbJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,QACXd,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAOvD,KAAKa,MAAMmG,QAClBxD,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAACoR,GAAD,CACInB,YAAa3P,KAAK2P,YAClB9L,YAAY,mBACZiC,SAAS,cACTT,YAAY,eACZQ,MAAO+B,KAGfpI,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAACqI,EAAD,CACIrB,cAAc,iBACdF,aAAcxG,KAAKa,MAAMgF,MAAM,GAC/Bc,QAASkB,EACTxB,cAAerG,KAAKqG,cACpBE,YAAavG,KAAKuG,cAEtB/G,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAO2K,cArLvBlQ,aAoMTC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+B8P,ICpMxCK,eACF,SAAAA,IAAc,IAAA/R,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAA+Q,IACV/R,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA6O,GAAAzO,KAAAtC,QA0BJ2P,YAAc,SAAC9Q,EAAON,EAAMkH,EAAMoK,EAAcrM,GAC5C9B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,8BACHE,KAAM,CACFkL,UAAWrO,EACXN,KAAMA,EACNsR,aAAaA,EACbpK,KAAMA,EACNqB,KAAMtD,EACNf,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GAC+B,IAAhCA,EAAgB/E,KAAK5B,OACrBpB,EAAKwD,SAAS,CACVS,WAAW,EACX+D,QAAS,UACT3G,IAAK,0CAGTrB,EAAKwD,SAAS,CACVyE,KAAMF,OAhDR/H,EAuDd2R,YAAc,SAACzD,GACXxL,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,4BAAAF,OAA8CsL,GACjDlL,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OAhEJ/H,EAqEdqH,cAAgB,SAACV,GACbjE,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,uBAAAF,OAAyC+D,GAC5C3D,KAAM,CACFzD,KAAMoH,EACNlD,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAMF,OA/EJ/H,EAoFduH,YAAc,WACV7E,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,4BACHE,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACsM,GACL5R,EAAKwD,SAAS,CACVyE,KAAM2J,OA3Fd5R,EAAK6B,MAAQ,CACToG,KAAM,GACNpB,MAAO,CAAC,WAAW,oBAAqB,kBAAmB,eAC3DgK,aAAa,GACbpK,KAAK,GACLpF,IAAK,GACL4C,WAAW,EACX+D,QAAS,IATHhI,mFAaM,IAAAe,EAAAC,KAChB0B,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,4BACHE,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACsM,GACD7Q,EAAKyC,SAAS,CACVyE,KAAM2J,uCA6Eb,IAAAvJ,EAAArH,KAGL,QAA6BsH,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAAoB,CAEpC9C,SAASC,cAAc,eAAeC,MAAMkP,gBAAkB,UAC9D,IAAIpG,EAAYlI,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAAC3I,EAAO6I,GAC7C,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAKb,EAAMqO,WACX1N,EAAAC,EAAAC,cAAA,SAAIb,EAAMgR,cACVrQ,EAAAC,EAAAC,cAAA,SAAIb,EAAMiI,OAEdtH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,gBAAed,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,0CAA4Df,EAAMqO,WAA5E,WACjC1N,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,uCAA0Df,EAAMqO,WAA1E,SAC/B1N,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKsJ,YAAY9R,EAAMqO,YAAY5M,UAAU,gBAApE,cAOpB,IAAMsH,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAEpCsJ,EAAc7H,KAAKa,MAAMgF,MAAM2B,IAAI,SAAC7B,EAAQ+B,GAC9C,OAAOlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOgD,GAASA,KAG3C,OAAgC,IAA5B3F,KAAKf,MAAMkB,MAAMC,OAEbZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAIbJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAOvD,KAAKa,MAAMmG,QAClBxD,KAAMxD,KAAKa,MAAMR,IACjBoD,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAACoR,GAAD,CACInB,YAAa3P,KAAK2P,YAClB9L,YAAY,aACZiC,SAAS,cACTT,YAAY,eACZQ,MAAO+B,KAGfpI,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAACqI,EAAD,CACIrB,cAAc,iBACdF,aAAcxG,KAAKa,MAAMgF,MAAM,GAC/Bc,QAASkB,EACTxB,cAAerG,KAAKqG,cACpBE,YAAavG,KAAKuG,cAEtB/G,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOgC,cAnKlBvH,aAkLdC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+BmQ,ICrF/BC,uBArGX,SAAAA,IAAc,IAAAhS,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAgR,IACVhS,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA8O,GAAA1O,KAAAtC,QAWJoI,aAAe,SAACvJ,GACZA,EAAME,iBACNC,EAAKC,MAAMoJ,UAAUrJ,EAAK6B,MAAM+O,OAAQ5Q,EAAK6B,MAAMtC,KAAMS,EAAK6B,MAAMyH,OAAQtJ,EAAK6B,MAAM4E,KAAMzG,EAAK6B,MAAMgP,aAAc7Q,EAAK6B,MAAM0H,OACjIrJ,SAASsJ,uBAAuB,QAAQ7F,MAAQ3D,EAAKC,MAAMoG,YAC3DnG,SAASsJ,uBAAuB,gBAAgB7F,MAAQ3D,EAAKC,MAAMwJ,aACnEzJ,EAAKwD,SAAS,CACVoN,OAAQ,GACRrR,KAAK,GACL+J,OAAQ,GACR7C,KAAK,GACLoK,aAAa,GACbtH,MAAO,MAvBDvJ,EA2BdsG,YAAc,SAACzG,GACXG,EAAKwD,SAAS,CACVoN,OAAS/Q,EAAM6D,OAAOC,SA7BhB3D,EAiCduG,WAAa,SAAC1G,GACVG,EAAKwD,SAAS,CACXjE,KAAOM,EAAM6D,OAAOC,SAnCb3D,EAuCdwG,WAAa,SAAC3G,GACV,IAAI4G,EAAM5G,EAAM6D,OAAOC,MACnBoN,EAAYtK,EAAMuK,WAAWC,MAAM,EAAE,IACrCC,EAAWH,EAASE,MAAM,EAAE,GAC5BE,EAAcJ,EAASE,MAAM,EAAE,IAAK5F,QAAQ,OAAQ,KACpD+F,EAAW,GAAAxO,OAAMuO,EAAN,KAAAvO,OAAoBsO,GAEnClR,EAAKwD,SAAS,CACVqN,aAAcO,EACd3K,KAAMA,KAhDAzG,EAqDd0J,YAAc,SAAC7J,GACXG,EAAKwD,SAAS,CACX+F,MAAQ1J,EAAM6D,OAAOC,SAvDd3D,EA2Dd2J,aAAe,SAAC9J,GACZG,EAAKwD,SAAS,CACV8F,OAASzJ,EAAM6D,OAAOC,SA3D1B3D,EAAK6B,MAAQ,CACT+O,OAAQ,GACRrR,KAAK,GACL+J,OAAQ,GACR7C,KAAK,GACLoK,aAAa,GACbtH,MAAO,IARDvJ,wEAkEV,IAAIqR,GAAU,IAAIC,MAAOC,cAAcN,MAAM,EAAE,IAE/C,OACIzQ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sBACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAKoI,aAAc9H,UAAU,mBAC7Cd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,OAAOsF,YAAY,mCAAmClB,MAAO3C,KAAKa,MAAMsE,MAAOvB,GAAG,WAAWD,SAAU3D,KAAKsF,YAAaM,UAAQ,KAEjJpG,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,0BACXd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,OAAOsD,GAAG,oBAAoBD,SAAU3D,KAAKuF,WAAY5C,MAAO3C,KAAKa,MAAMtC,KAAMqH,UAAQ,GACvGpG,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,IAAI3C,KAAKf,MAAMoG,aAC5BrF,KAAKf,MAAM4G,OAEhBrG,EAAAC,EAAAC,cAAA,UAAQkE,GAAG,oBAAoBjB,MAAO3C,KAAKa,MAAM0H,MAAO5E,SAAU3D,KAAK0I,YAAa9C,UAAQ,GACxFpG,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,IAAI3C,KAAKf,MAAMwJ,cAC7BjJ,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,OAGRnD,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKwF,WAAY5B,GAAG,oBAAoBrF,KAAK,OAAOiS,IAAKH,EAASI,IAtBjF,aAsB+F9N,MAAO3C,KAAKa,MAAM4E,KAAMG,UAAQ,KAErIpG,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACXd,EAAAC,EAAAC,cAAA,YAAUiE,SAAU3D,KAAK2I,aAAc/E,GAAG,iBAAiBC,YAAa7D,KAAKf,MAAM4E,YAAalB,MAAO3C,KAAKa,MAAMyH,OAAQ1C,UAAQ,IAC9HpG,EAAAC,EAAAC,cAACqG,EAAD,CAAQxH,KAAK,SAAS+B,UAAU,gBAAhC,wBA9FSK,cCS3BsQ,eACF,SAAAA,IAAc,IAAAjS,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAiR,IACVjS,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA+O,GAAA3O,KAAAtC,QA2BJqI,UAAY,SAACxJ,EAAON,EAAM+J,EAAQ7C,EAAMoK,EAActH,GAElD7G,IAAM,CACFK,OAAS,OACTJ,IAAG,GAAAC,OAAMC,OAAOC,QAAb,2BAAAF,OAA8C/C,GACjDmD,KAAO,CACHS,MAAQzD,EAAKC,MAAMkB,MAAMsC,MACzB5D,QACAN,OACA+J,SACA7C,OACAoK,eACAtH,WAELjE,KAAK,SAACuE,GACL7J,EAAKwD,SAAS,CACVyE,KAAO4B,EACPxI,IAAG,uCAAAuB,OAA0C/C,EAA1C,KACHoE,WAAW,MAGnB/D,SAASC,cAAc,eAAeC,MAAM+G,WAAa,WAjD/CnH,EAoDd8J,aAAe,SAACjK,GACZ6C,IAAM,CACFK,OAAS,OACTJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,8BAAAF,OAAgD/C,GACnDmD,KAAM,CACFS,MAAQzD,EAAKC,MAAMkB,MAAMsC,SAE9B6B,KAAK,SAACyC,GACL/H,EAAKwD,SAAS,CACVyE,KAAOF,OA7DL/H,EAkEdwG,WAAa,SAAC3G,GACV,IAAI4G,EAAM5G,EAAM6D,OAAOC,MACnBoN,EAAYtK,EAAMuK,WAAWC,MAAM,EAAE,IACrCC,EAAWH,EAASE,MAAM,EAAE,GAC5BE,EAAcJ,EAASE,MAAM,EAAE,IAAK5F,QAAQ,OAAQ,KACpD+F,EAAW,GAAAxO,OAAMuO,EAAN,KAAAvO,OAAoBsO,GAEnClR,EAAKwD,SAAS,CACVqN,aAAcO,EACd3K,KAAMA,KAzEVzG,EAAK6B,MAAQ,CACToG,KAAO,GACPpB,MAAO,CAAC,WAAW,oBAAqB,kBAAmB,eAC3DJ,KAAK,GACLoK,aAAa,GACbtH,MAAM,GACNlI,IAAM,GACN4C,WAAW,GATLjE,mFAaK,IAAAe,EAAAC,KACf0B,IAAM,CACFK,OAAS,OACTJ,IAAG,GAAAC,OAAMC,OAAOC,QAAb,2BACHE,KAAO,CACHS,MAAQzC,KAAKf,MAAMkB,MAAMsC,SAE9B6B,KAAK,SAACyE,GACLhJ,EAAKyC,SAAU,CACXyE,KAAO8B,uCA0DV,IAAA1B,EAAArH,KAGL,QAA6BsH,IAAzBtH,KAAKa,MAAMoG,KAAKjF,KAChB,IAAIiP,EAAejR,KAAKa,MAAMoG,KAAKjF,KAAKwF,IAAI,SAACc,EAAQZ,GACjD,OACIlI,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAK4I,EAAO4E,UAAZ,MAA0B5E,EAAOC,MAAjC,WACA/I,EAAAC,EAAAC,cAAA,SAAI4I,EAAOuH,cACXrQ,EAAAC,EAAAC,cAAA,SAAI4I,EAAOA,SAGf9I,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQzF,UAAU,cAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMX,GAAI,gCAAoD0I,EAAO4E,WAArE,SAC/B1N,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMsC,EAAKyB,aAAaR,EAAO4E,YAAY5M,UAAU,gBAAtE,eASxB,IAAMsH,EAAY5H,KAAKa,MAAMgF,MAAM2B,IAAI,SAACjJ,EAAMmJ,GAC1C,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAG1C,OAAgC,IAA5ByB,KAAKf,MAAMkB,MAAMC,OAEbZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAIbJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,KAAMtD,KAAKa,MAAMoC,UACjBM,MAAM,eACNC,KAAMxD,KAAKa,MAAMR,IACjB4I,kBAAkB,SAClBxF,UAAW,kBAAM4D,EAAK7E,SAAS,CAAES,WAAW,OAEhDzD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAACwR,GAAD,CACIrN,YAAY,8BACZwB,YAAa,eACboD,aAAa,kBACb5C,MAAO+B,EACPS,UAAWrI,KAAKqI,aAGxB7I,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAO+K,cAxIpBtQ,aAwJZC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAIkB,KAAxBS,CAA8BqQ,IC7JvCE,uBACF,SAAAA,IAAc,IAAAnS,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAmR,IACVnS,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAiP,GAAA7O,KAAAtC,QAoCJmM,UAAY,SAACtN,GACTA,EAAME,iBACN,IAAM8H,EAAY7H,EAAKC,MAAMmN,MAAMC,OAAOlH,MACpCmH,EAAUtN,EAAKC,MAAMmN,MAAMC,OAAOC,QAClC7N,EAAWO,EAAKC,MAAMmN,MAAMC,OAAO5N,SACnC6O,EAAgBtO,EAAK6B,MAAMyH,OAC3BoE,EAAe1N,EAAK6B,MAAM0H,MAChC7G,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,YAAAF,OAA8B0K,EAA9B,gBAAA1K,OAAoDiF,GACvD7E,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,MACxB6K,gBACAZ,kBAELpI,KAAK,SAACuE,GACL7J,EAAKwD,SAAS,CACV+F,MAAM,GACND,OAAQ,GACRqE,UAAU,EACVlO,SAAWA,OAzDTO,EA+DdsG,YAAc,SAACzG,KA/DDG,EAiEduG,WAAa,SAAC1G,KAjEAG,EAmEdwG,WAAa,SAAC3G,KAnEAG,EAqEd2J,aAAe,SAAC9J,GACZG,EAAKwD,SAAS,CACV8F,OAAQzJ,EAAM6D,OAAOC,SAvEf3D,EA2Ed0J,YAAc,SAAC7J,GACXG,EAAKwD,SAAS,CACV+F,MAAO1J,EAAM6D,OAAOC,SA3ExB3D,EAAK6B,MAAQ,CACTsE,MAAM,GACN1G,SAAS,GACT6J,OAAO,GACP/J,KAAM,GACNgK,MAAO,GACPsH,aAAa,GACblD,UAAW,GATL3N,mFAeM,IAAAe,EAAAC,KACV6G,EAAY7G,KAAKf,MAAMmN,MAAMC,OAAOlH,MACpCmH,EAAUtM,KAAKf,MAAMmN,MAAMC,OAAOC,QAClC7N,EAAWuB,KAAKf,MAAMmN,MAAMC,OAAO5N,SAEzCiD,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,YAAAF,OAA8B0K,EAA9B,qBAAA1K,OAAyDiF,GAC5D7E,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACuE,GACL9I,EAAKyC,SAAS,CACV2C,MAAQ0D,EAAe7G,KAAKkL,UAC5B3O,KAAOsK,EAAe7G,KAAKzD,KAC3BsR,aAAchH,EAAe7G,KAAK6N,aAClCpR,SAAWA,uCAoDnB,IAA2B,IAAxBuB,KAAKa,MAAM8L,SAAkB,CAC5B,IAAML,EAAUtM,KAAKf,MAAMmN,MAAMC,OAAOC,QAExC,OACI9M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAE,mBAAAgC,OAAqB0K,KAGrC,OACI9M,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gCACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAKmM,UAAW7L,UAAU,uBACtCd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,8BACXd,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKsF,YAAa/G,KAAK,OAAOqF,GAAG,qBAAqBjB,MAAO3C,KAAKa,MAAMsE,MAAOS,UAAQ,IACxGpG,EAAAC,EAAAC,cAAA,OAAKY,UAAU,+BACXd,EAAAC,EAAAC,cAAA,UAAQkE,GAAG,yBAAyBD,SAAU3D,KAAKuF,YAC/C/F,EAAAC,EAAAC,cAAA,UAAQ8G,aAAcxG,KAAKa,MAAMtC,MAAOyB,KAAKa,MAAMtC,OAEvDiB,EAAAC,EAAAC,cAAA,UAAQkE,GAAG,0BAA0BjB,MAAO3C,KAAKa,MAAM0H,MAAO5E,SAAU3D,KAAK0I,YAAa9C,UAAQ,GAC9FpG,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,IAAI3C,KAAKf,MAAMwJ,cAC7BjJ,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,OAGhBnD,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKwF,WAAYjH,KAAK,OAAOqF,GAAG,yBAAyBjB,MAAO3C,KAAKa,MAAMgP,aAAcjK,UAAQ,KAE9GpG,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACXd,EAAAC,EAAAC,cAAA,YAAUiE,SAAU3D,KAAK2I,aAAchG,MAAO3C,KAAKa,MAAMyH,OAAQ1E,GAAG,8BAExEpE,EAAAC,EAAAC,cAACqG,EAAD,CAAQxH,KAAK,SAAS+B,UAAU,gBAAhC,gBAlHUK,cAgInBC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+BuQ,IChIxCjF,eACF,SAAAA,IAAc,IAAAlN,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAAkM,IACVlN,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAgK,GAAA5J,KAAAtC,QA4CJoR,UAAY,SAACvS,GACTA,EAAME,iBACN,IAAMmO,EAAYlO,EAAKC,MAAMmN,MAAMC,OAAOlH,MACpCmH,EAAUtN,EAAKC,MAAMmN,MAAMC,OAAOC,QAClC+E,EAAmBrS,EAAK6B,MAAMhC,MAC9B2N,EAAcxN,EAAK6B,MAAMtC,KACzB+S,EAActS,EAAK6B,MAAM4E,KACzB8L,EAAsBvS,EAAK6B,MAAMgP,aACjCpD,EAAczN,EAAK6B,MAAM2C,KACzBkJ,EAAe1N,EAAK6B,MAAM0H,MAChC7G,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,YAAAF,OAA8B0K,EAA9B,eAAA1K,OAAmDsL,GACtDlL,KAAM,CACFS,MAAOzD,EAAKC,MAAMkB,MAAMsC,MACxB4O,mBACA7E,cACA8E,cACAC,sBACA9E,cACAC,kBAELpI,KAAK,SAACuE,GACL7J,EAAKwD,SAAS,CACV3D,MAAQ,GACRN,KAAO,GACPkH,KAAM,GACNoK,aAAa,GACbrM,KAAO,GACPmJ,UAAU,EACVpE,MAAQ,QA3ENvJ,EAkFdwS,YAAc,SAAC3S,GACXG,EAAKwD,SAAS,CACV3D,MAAOA,EAAM6D,OAAOC,SApFd3D,EAwFduG,WAAa,SAAC1G,GACVG,EAAKwD,SAAS,CACVjE,KAAMM,EAAM6D,OAAOC,SA1Fb3D,EA8FdwG,WAAa,SAAC3G,GACV,IAAI4G,EAAM5G,EAAM6D,OAAOC,MAEnBoN,EAAYtK,EAAMuK,WAAWC,MAAM,EAAE,IACrCC,EAAWH,EAASE,MAAM,EAAE,GAC5BE,EAAcJ,EAASE,MAAM,EAAE,IAAK5F,QAAQ,OAAQ,KACpD+F,EAAW,GAAAxO,OAAMuO,EAAN,KAAAvO,OAAoBsO,GAEnClR,EAAKwD,SAAS,CACVqN,aAAcO,EACd3K,KAAMA,KAxGAzG,EA4Gd0G,WAAa,SAAC7G,GACVG,EAAKwD,SAAS,CACVgB,KAAM3E,EAAM6D,OAAOC,SA9Gb3D,EAkHd0J,YAAc,SAAC7J,GACXG,EAAKwD,SAAS,CACV+F,MAAQ1J,EAAM6D,OAAOC,SAlHzB3D,EAAK6B,MAAQ,CACThC,MAAO,GACPJ,SAAW,GACXF,KAAM,GACNiF,KAAM,GACNiC,KAAK,GACLoK,aAAa,GACb9C,WAAY,CAAC,WAAY,oBAAqB,kBAAmB,eACjEJ,UAAW,EACXpE,MAAO,IAXDvJ,mFAiBM,IAAAe,EAAAC,KACVkN,EAAYlN,KAAKf,MAAMmN,MAAMC,OAAOlH,MACpCmH,EAAUtM,KAAKf,MAAMmN,MAAMC,OAAOC,QAClC7N,EAAWuB,KAAKf,MAAMmN,MAAMC,OAAO5N,SAEzCiD,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,YAAAF,OAA8B0K,EAA9B,oBAAA1K,OAAwDsL,GAC3DlL,KAAM,CACFS,MAAOzC,KAAKf,MAAMkB,MAAMsC,SAE7B6B,KAAK,SAACuE,GACL,IAAImE,EAAanE,EAAe7G,KAAK8E,MAAQ+B,EAAe7G,KAAKsG,OAC7DmJ,EAAc5I,EAAe7G,KAAKkL,WAAarE,EAAe7G,KAAKkL,UACnEwE,EAAgB7I,EAAe7G,KAAKyD,KAAKuK,WAAWC,MAAM,EAAE,IAC5D9C,EAActE,EAAe7G,KAAKuG,MACtCxI,EAAKyC,SAAS,CACV3D,MAAQ4S,EACRhT,SAAWA,EACXF,KAAOsK,EAAe7G,KAAKzD,KAC3BkH,KAAMiM,EACNlO,KAAOwJ,EACPzE,MAAQ4E,uCAmFhB,IAAIvF,EAMAwF,EAcJ,GAlBIxF,EAAY5H,KAAKa,MAAMkM,WAAWvF,IAAI,SAACjJ,EAAMmJ,GACzC,OAAQlI,EAAAC,EAAAC,cAAA,UAAQiI,IAAKD,EAAG/E,MAAOpE,GAAOA,KAIP,YAApCyB,KAAKf,MAAMmN,MAAMC,OAAOC,UACvBc,EACA5N,EAAAC,EAAAC,cAAA,UAAQkE,GAAG,kBAAkBjB,MAAO3C,KAAKa,MAAM0H,MAAO5E,SAAU3D,KAAK0I,YAAa9C,UAAQ,GACtFpG,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,IAAI3C,KAAKa,MAAM0H,OAC7B/I,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,KACAnD,EAAAC,EAAAC,cAAA,UAAQiD,MAAM,KAAd,QAKmB,IAAxB3C,KAAKa,MAAM8L,SAAkB,CAC5B,IAAML,EAAUtM,KAAKf,MAAMmN,MAAMC,OAAOC,QACpC,OAAO9M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAE,mBAAAgC,OAAqB0K,KAE5C,IAAI+D,GAAU,IAAIC,MAAOC,cAAcN,MAAM,EAAE,IAE/C,OACIzQ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACXd,EAAAC,EAAAC,cAAA,QAAMgE,SAAU1D,KAAKoR,UAAW9Q,UAAU,YAC1Cd,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKwR,YAAajT,KAAK,OAAOqF,GAAG,YAAY4C,aAAcxG,KAAKa,MAAMhC,QACnFW,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBAEXd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,oBAAoBsD,GAAG,eAAeD,SAAU3D,KAAKuF,YACnE/F,EAAAC,EAAAC,cAAA,UAAQ8G,aAAcxG,KAAKa,MAAMtC,MAAOyB,KAAKa,MAAMtC,MAClDqJ,GAELpI,EAAAC,EAAAC,cAAA,SAAOiE,SAAU3D,KAAKwF,WAAY5B,GAAG,uBAAuBrF,KAAK,OAAOiS,IAAKH,EAASI,IAZxF,aAYsG9N,MAAO3C,KAAKa,MAAM4E,QAEzH2H,EACD5N,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,YAAUiE,SAAU3D,KAAK0F,WAAY/C,MAAO3C,KAAKa,MAAM2C,KAAMI,GAAG,cAEpEpE,EAAAC,EAAAC,cAACqG,EAAD,CAAQxH,KAAK,SAAS+B,UAAU,gBAAhC,mBAtKDK,aAoLRC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+BsL,IClLxCyF,eACF,SAAAA,IAAa,IAAA3S,EAAA,OAAAkD,OAAAC,EAAA,EAAAD,CAAAlC,KAAA2R,IACT3S,EAAAkD,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAyP,GAAArP,KAAAtC,QAQJqJ,eAAiB,SAACU,EAAKC,GACnB,IAAIC,EAAiBC,EAAWC,EAE1BC,EADgBJ,EAAKK,QAAQ,KAAK,IACEA,QAAQ,KAAK,KACjDC,EAAuB,6DAAA1I,OAA8DwI,EAA9D,SAAAxI,OAAyFgI,EAAOC,QAC7HnI,IAAM,CACFK,OAAS,MACTJ,IAAM2I,IACPhG,KAAK,SAACiG,GACLL,EAAaK,EAASvI,KAAKwI,QAAQ,GAAGC,SAASC,SAASC,IACxDR,EAAaI,EAASvI,KAAKwI,QAAQ,GAAGC,SAASC,SAASE,IACxDX,EAAkB,CACdU,IAAMT,EACNU,IAAMT,GAGV,IAAIU,EAAU,CACZC,MAAK,GAAAlJ,OAAKmI,GACVgB,OAAS,WACTL,SAAWT,EACXe,OAAQ,KAKNC,EAAU,IAAIpJ,OAAOqJ,OAAOC,KAAKC,OAAOC,cAAcnM,SAASQ,cAAc,QAC7E4L,EAAgB,GACpBL,EAAQM,WAAWV,EAAS,SAACL,EAASgB,GAClC,IAAIC,EAEAA,EADA,GAAKjB,EAAQpK,OACA,GAEAoK,EAAQpK,OAGzB,IAAI,IAAIsH,EAAI,EAAGA,EAAI+D,EAAY/D,IAC3B4D,EAAclI,KAAKoH,EAAQ9C,IAG/B1I,EAAKwD,SAAS,CACVkJ,eAAiBJ,QAI7BpM,SAASC,cAAc,eAAeC,MAAM+G,WAAa,WArDhDnH,EAwDb2M,eAAiB,SAACxG,EAAO5G,EAAMiF,GAE3B,IAAMf,EAAQzD,EAAKC,MAAMkB,MAAMsC,MAC/Bf,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,0BACHE,KAAM,CACFmD,QACA5G,OACAiF,OACAf,WAEL6B,KAAK,SAACyC,GAC2B,UAA7BA,EAAgB/E,KAAK3B,KACpBrB,EAAKC,MAAMkE,QAAQC,KAAK,2BAtEvBpE,EA2Eb4M,mBAAqB,SAACzG,EAAO5G,EAAMiF,GAC/B,IAAMf,EAAQzD,EAAKC,MAAMkB,MAAMsC,MAC/Bf,IAAM,CACFK,OAAQ,OACRJ,IAAG,GAAAC,OAAKC,OAAOC,QAAZ,8BACHE,KAAM,CACFmD,QACA5G,OACAiF,OACAf,WAEL6B,KAAK,SAACyC,GAC2B,UAA7BA,EAAgB/E,KAAK3B,KACpBrB,EAAKC,MAAMkE,QAAQC,KAAK,gCAtFhCpE,EAAK6B,MAAQ,CACT6K,eAAiB,GACjB7F,MAAO,CAAC,WAAW,oBAAqB,kBAAmB,gBAJtD7G,wEA8FL,IAAAe,EAAAC,KACE0L,EAAiB1L,KAAKa,MAAM6K,eAAelE,IAAI,SAACrC,EAAOuC,GAIzD,IAHA,IAEInJ,EAFEqJ,EAAY7H,EAAKc,MAAMgF,MACvBgG,EAAmB1G,EAAMU,MAEvB6B,EAAG,EAAGA,EAAIE,EAAUxH,OAAQsH,IAChC,IAAI,IAAIoE,EAAI,EAAGA,EAAID,EAAiBzL,OAAQ0L,IACrClE,EAAUF,GAAGqE,gBAAkBF,EAAiBC,KAC/CvN,EAAOqJ,EAAUF,IAS7B,YAJYJ,IAAT/I,IACCA,EAAO,eAIPiB,EAAAC,EAAAC,cAAA,OAAKiI,IAAKD,EAAGpH,UAAU,aACnBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACXd,EAAAC,EAAAC,cAAA,UAAKyF,EAAM4E,MACXvK,EAAAC,EAAAC,cAAA,SAAInB,IAERiB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMhF,EAAK4L,eAAexG,EAAM4E,KAAMxL,EAAM4G,EAAM6G,oBAAoB1L,UAAU,cAAjG,QACAd,EAAAC,EAAAC,cAACqG,EAAD,CAAQhB,QAAS,kBAAMhF,EAAK6L,mBAAmBzG,EAAM4E,KAAMxL,EAAM4G,EAAM6G,oBAAoB1L,UAAU,cAArG,gBAKhB,OAA+B,IAA5BN,KAAKf,MAAMkB,MAAMC,OAEhBZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAITJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAACuM,EAAD,CACAvC,kBAAkB,mCAClBC,oBAAoB,uBACpBN,eAAgBrJ,KAAKqJ,kBAGzB7J,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBACXd,EAAAC,EAAAC,cAACsI,EAAD,CAAY9B,MAAOwF,cA9IpB/K,aA6JZC,mBANf,SAAyBC,GACrB,MAAO,CACHV,MAAOU,EAAMV,QAImB,KAAzBS,CAA+B+Q,ICzI/BC,oLAdP,OACIpS,EAAAC,EAAAC,cAACqO,GAAD,KACIvO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWwD,KAC/CnS,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBC,UAAWuC,KACpDlR,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,4BAA4BC,UAAW4C,KACzDvR,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,0BAA0BC,UAAW8C,KACvDzR,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,8CAA8CC,UAAWd,KAC3E7N,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mDAAmDC,UAAWgD,KAChF3R,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,2CAA2CC,UAAW0D,aAXpElR,aCIdmR,oLAEE,IACMC,EADa/R,KAAKf,MAAMyL,SAASsH,OAAOC,MAAM,KAC3B,GACzB,GAAGF,EACC,OAAOvS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAImS,IAKzB,IAHA,IAAIG,EAAY,CAAC,SAAU,YAAa,KACpCC,EAAcnS,KAAKf,MAAMyL,SAAS0H,SAClCC,GAAY,EACR3K,EAAG,EAAGA,EAAIwK,EAAU9R,OAAQsH,IAC7BwK,EAAUxK,KAAOyK,IAChBE,GAAY,GAGpB,OAAGA,EAEK7S,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5M,IACjC/B,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWlM,IACtCzC,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWnK,KAIlB,IAA5BhE,KAAKf,MAAMkB,MAAMC,OAEZZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAW/J,IACxC5E,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAW5J,IACzC/E,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,UAAWL,KACxCtO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOE,KAAK,oBAAoBC,UAAWU,KAC3CrP,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOE,KAAK,kBAAkBC,UAAWyD,KACzCpS,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOE,KAAK,mBAAmBC,UAAWsB,MAK9CjQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,aArCTe,aAkDTC,mBANf,SAAyBC,GACrB,MAAM,CACFV,MAAQU,EAAMV,QAIkB,KAAzBS,CAA+BkR,IChD/BQ,oLAVX,OACE9S,EAAAC,EAAAC,cAAC6S,EAAA,EAAD,KACG/S,EAAAC,EAAAC,cAAC8S,EAAD,KACEhT,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOE,KAAK,IAAIC,UAAW2D,cALpBnR,aCPH8R,GAAA,WAAsB,IAArB5R,EAAqB6R,UAAAtS,OAAA,QAAAkH,IAAAoL,UAAA,GAAAA,UAAA,GAAb,GAAIC,EAASD,UAAAtS,OAAA,EAAAsS,UAAA,QAAApL,EACjC,MAAmB,iBAAhBqL,EAAOpU,MAA2C,eAAhBoU,EAAOpU,KACjCoU,EAAOjU,QAAQsD,KACC,kBAAhB2Q,EAAOpU,KACP,GAEAsC,GCMA+R,GANKC,YAAgB,CAChCC,IAAML,GACNtS,MAAQsS,GACRhU,SCTW,WAAwB,IAAvBoC,EAAuB6R,UAAAtS,OAAA,QAAAkH,IAAAoL,UAAA,GAAAA,UAAA,GAAf,GAAIC,EAAWD,UAAAtS,OAAA,EAAAsS,UAAA,QAAApL,EACnC,MAAoB,oBAAhBqL,EAAOpU,KACAoU,EAAOjU,QAEPmC,yBCQTkS,GAFaC,YAAgBC,KAClBC,CAAWC,IACcC,CAASC,IAGnDC,IAASC,OACL/T,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAUC,MAAOV,IACbvT,EAAAC,EAAAC,cAACgU,GAAD,OAEJxU,SAASkG,eAAe","file":"static/js/main.973ae41a.chunk.js","sourcesContent":["export default () =>{\n    return{\n        type: \"LOGOUT_ACTION\"\n    }\n}","export default (category) => {\n    return {\n        type: \"CHANGE_CATEGORY\",\n        payload: category\n    }\n}","import React, {Component} from \"react\";\nimport \"./Nav.css\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport logoutAction from \"../../actions/logoutAction\"\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport setCategory from '../../actions/setCategory';\n\nclass Nav extends Component{\n    // need logic to see if logged in, change route on left to user home\n    // and on right, display categories and hamburger with profile/logout\n\n    navRightLoginToggle = (event, cat)=>{\n        event.preventDefault();\n        this.props.setCategory(cat)\n        if(document.querySelector(\".nav-right-dropdown\").style.display === \"none\"){\n            document.querySelector(\".nav-right-dropdown\").style.display = \"inline\";\n        } else {\n            document.querySelector(\".nav-right-dropdown\").style.display = \"none\";\n        }\n    }\n\n    navRightLoggedInToggle = (event, cat)=>{\n        event.preventDefault();\n        this.props.setCategory(cat)\n        if(document.querySelector(\".nav-right-dropdown-logged-in\").style.display === \"none\"){\n            document.querySelector(\".nav-right-dropdown-logged-in\").style.display = \"inline\";\n        } else {\n            document.querySelector(\".nav-right-dropdown-logged-in\").style.display = \"none\";\n        }\n    }\n\n    handleLogout = (event)=>{\n        event.preventDefault();\n        this.props.logoutAction();\n        if(document.querySelector(\".nav-right-dropdown-logged-in\").style.display === \"none\"){\n            document.querySelector(\".nav-right-dropdown-logged-in\").style.display = \"inline\";\n        } else {\n            document.querySelector(\".nav-right-dropdown-logged-in\").style.display = \"none\";\n        }\n        return(\n            <Redirect to=\"/\"/>\n        )\n    }\n    \n    render(){\n        let navLeft;\n        let navRight;\n        console.log(this.props.login)\n        if(this.props.login.length === 0 || this.props.login.msg === \"badUser\" || this.props.login.msg === \"userExists\"){\n            navLeft = <div className=\"logo\"><Link to=\"/\"><img className=\"logoImg\" src='../../../../images/logo/logoDarkGray.png' alt='logo'/></Link></div>;\n            navRight = <div className=\"nav-right-login\">\n                            <div className=\"nav-right-login-links\">\n                                <div className=\"login-link\"><Link to=\"/login\">Login</Link></div>\n                                <div className=\"register-link\"><Link to=\"/register\">Register</Link></div>\n                            </div>\n                            <div className=\"nav-toggle-icon-login\" onClick={(event)=>{this.navRightLoginToggle(event, 'none')}}>\n                                <i className=\"fas fa-bars\"></i>\n                            </div>\n                            <div className=\"nav-right-dropdown\">\n                                <div className=\"nav-right-dropdown-link\" onClick={(event)=>{this.navRightLoginToggle(event, 'none')}}><Link to=\"/login\">Login</Link></div>\n                                <div className=\"nav-right-dropdown-link\" onClick={(event)=>{this.navRightLoginToggle(event, 'none')}}><Link to=\"/register\">Register</Link></div>\n                            </div>\n                        </div>;\n            \n        } else {\n            navLeft = <div className=\"logo\"><Link to=\"/userHome\"><img className=\"logoImg\" src='../../../../images/logo/logoDarkGray.png' alt='logo'/></Link></div>;\n            navRight = <div className=\"nav-right\">\n                            <div className=\"nav-right-links\">\n                                <div className=\"category-link\"><Link onClick={()=>{this.props.setCategory('food')}} to=\"/userHome/food\">Food</Link></div>\n                                <div className=\"category-link\"><Link onClick={()=>{this.props.setCategory('active')}}  to=\"/userHome/active\">Active</Link></div>\n                                <div className=\"category-link\"><Link onClick={()=>{this.props.setCategory('culture')}}  to=\"/userHome/culture\">Culture</Link></div>\n                                <div className=\"category-link\"><Link onClick={()=>{this.props.setCategory('event')}}  to=\"/userHome/event\">Events</Link></div>\n                            </div>\n                            <div className=\"nav-toggle-icon\" onClick={(event)=>{this.navRightLoggedInToggle(event, 'none')}}>\n                                <i className=\"fas fa-bars\"></i>\n                            </div>\n                            <div className=\"nav-right-dropdown-logged-in\">\n                                <div className=\"nav-right-dropdown-link\" onClick={(event) => {this.navRightLoggedInToggle(event, 'none')}}><Link to=\"/account\">Account</Link></div>\n                                <div className=\"nav-right-dropdown-link nav-logout\" onClick={this.handleLogout}>Log Out</div>\n                                <div className=\"nav-right-dropdown-link nav-category\" onClick={(event)=>{this.navRightLoggedInToggle(event, 'food')}}><Link to=\"/userHome/food\">Food</Link></div>\n                                <div className=\"nav-right-dropdown-link nav-category\" onClick={(event)=>{this.navRightLoggedInToggle(event, 'active')}}><Link to=\"/userHome/active\">Active</Link></div>\n                                <div className=\"nav-right-dropdown-link nav-category\" onClick={(event)=>{this.navRightLoggedInToggle(event, 'culture')}}><Link to=\"/userHome/culture\">Culture</Link></div>\n                                <div className=\"nav-right-dropdown-link nav-category\" onClick={(event)=>{this.navRightLoggedInToggle(event, 'event')}}><Link to=\"/userHome/event\">Events</Link></div>\n                            </div>\n                        </div>;\n        }\n        return(\n            <div className=\"nav\">\n                {navLeft}\n                {navRight}\n            </div>\n        )\n    }\n}\n\n// mapstate to props to find out login status\n\nfunction mapStateToProps(state){\n    return{\n        login : state.login,\n    }\n}\n\nfunction mapDispatchToProps(dispatcher){\n    return bindActionCreators({\n        logoutAction : logoutAction,\n        setCategory : setCategory\n    }, dispatcher)\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Nav);","import React from \"react\";\nimport \"./Footer.css\"\n\nfunction Footer(props){\n    return(\n        <div className=\"footer\">© Katie Duane, Greg Roques, Sean McQuaid</div>\n    )\n}\n\nexport default Footer;","const aux = (props) => (props.children);\n\nexport default aux;","import React from \"react\";\nimport \"./Layout.css\";\nimport Nav from \"../../containers/navBar/Nav\";\nimport Footer from \"../utility/footer/Footer\";\nimport Aux from \"../../hoc/Aux\";\n\nfunction Layout(props){\n    return(\n        <Aux>\n            <Nav/>\n            <div className=\"content-margin\">\n                {props.children}\n            </div>\n            <Footer/>\n        </Aux>\n    )\n}\n\nexport default Layout;","import React from 'react';\nimport './Splash.css'\nimport {Link} from 'react-router-dom';\n\nfunction Splash(props){\n\n    return(\n        <div>\n            <div>\n                <div className=\"carouselWrapper\">\n                    <div className=\"carouselText\">\n                        <img className=\"mainLogo\" src='../../../images/logo/logoOutline.png' alt=\"logo\" />\n                    </div>\n                <div className=\"splash-header\"/>\n                    <div className=\"splashHeaderImage\">\n                         <img className=\"splash-image\" src=\"/images/montage.jpg\" alt=\"carouselImage\"/>\n                    </div>\n                </div>\n            </div>\n        \n            <div className=\"splashTextContent\">\n                <h1>What Is Sift?</h1>\n                <p>Sift is an application that allows users to create lists \n                    of places they'd like to visit or activities they'd like to try.\n                    Our goal is to simplify and streamline all of the ways in which \n                    you can explore the world around you.\n                </p>\n                <h1>How Does It Work?</h1>\n                <div className=\"boxContainer\">\n                    <div className=\"singleBoxContainer\">\n                        <div className=\"box1\"></div>\n                        <p>Choose an activity</p>\n                    </div>\n                    <div className=\"singleBoxContainer\">\n                        <div className=\"box2\"></div>\n                        <p>Search nearby options</p>\n                    </div>\n                    <div className=\"singleBoxContainer\">\n                        <div className=\"box3\"></div>\n                        <p>Review your favorites</p>\n                    </div>\n                    \n                </div>\n                <h1>Intereste<span className=\"questionMark\">d?</span></h1>\n                <p><Link to=\"../../register\">Register</Link> today and start planning your next adventure.</p>\n            </div>\n        </div>\n    )\n}\nexport default Splash;","import axios from \"axios\";\n\nexport default (userData) =>{\n    const axiosPromise = axios({\n        url : `${window.apiHost}/users/login`,\n        method : \"POST\",\n        data : userData\n    })\n    return{\n        type: \"LOGIN_ACTION\",\n        payload : axiosPromise\n    }\n}","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport \"./Login.css\";\nimport loginAction from \"../../../actions/loginAction\"\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nclass Login extends Component {\n    constructor(){\n        super()\n        this.state = {\n            showAlert : false,\n            msg : \"\",\n            email : \"\",\n            password : \"\"\n        }\n    }\n\n    componentWillReceiveProps(newProps){\n        if(newProps.login.msg === \"badUser\"){\n            this.setState({\n                msg : \"Incorrect email, please try again!\",\n                showAlert: true\n            })\n        } else if(newProps.login.msg === \"badPassword\"){\n            this.setState({\n                msg : \"Incorrect password, please try again!\",\n                showAlert : true\n            })\n        } else if (newProps.login.msg === \"loginSuccess\"){\n            this.props.history.push('/userHome');\n        }\n    }\n\n    inputEmail = (event) =>{\n        this.setState({\n            email : event.target.value\n        })\n    }\n\n    inputPassword = (event) =>{\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    handleLogin = (event) =>{\n        const userEmail = this.state.email;\n        const userPassword= this.state.password;\n        event.preventDefault();\n        this.props.loginAction({\n            userEmail,\n            userPassword\n        })\n    }\n    \n    \n    render(){\n        return(\n            <div className=\"login\">\n                <div className=\"login-header-image\">\n                    <img className=\"header-image\" src=\"../../../../images/headerImages/8.jpeg\" alt=\"loginImage\"/>\n                </div>\n                <div className=\"login-title\">\n                    <h1 className=\"title\">Login</h1>\n                    <p className=\"instructions\">Please enter your email and password</p>\n                </div>\n                <SweetAlert\n                        show={this.state.showAlert}\n                        title=\"Whoopsie Daisies\"\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                />\n                <div className=\"login-box\">\n                    <form onSubmit={this.handleLogin} className=\"login-form\">\n                        <input onChange={this.inputEmail} id=\"email-input\" type=\"email\" placeholder=\"Email\"/>\n                        <input onChange={this.inputPassword} id=\"password-input\" type=\"password\" placeholder=\"Password\"/>\n                        <button id=\"login-button\" type=\"submit\">Login</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        login: state.login\n    }\n}\n\n\nfunction mapDispatchToProps(dispatcher){\n    return bindActionCreators({\n        loginAction : loginAction\n    }, dispatcher)\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","import axios from \"axios\";\n\nexport default (registerData) =>{\n    const axiosPromise = axios({\n        url : `${window.apiHost}/users/register`,\n        method : \"POST\",\n        data : registerData\n    })\n    return{\n        type: \"REG_ACTION\",\n        payload : axiosPromise\n    }\n}","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport \"./Register.css\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport regAction from \"../../../actions/regAction\"\n\nclass Register extends Component {\n    constructor(){\n        super()\n        this.state = {\n            showAlert : false,\n            msg : \"\",\n            email : \"\",\n            password : \"\",\n            testPassword : \"\"\n        }\n    }\n\n    componentWillReceiveProps(newProps){\n        if(newProps.login.msg === \"userAdded\"){\n            this.props.history.push('/userHome');\n        } else if(newProps.login.msg === \"userExists\"){\n            this.setState({\n                msg : \"This user already exists, please try again!\",\n                showAlert: true\n            })\n        }\n    }\n\n    inputEmail = (event) =>{\n        this.setState({\n            email : event.target.value\n        })\n    }\n\n    inputPassword = (event) =>{\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    inputTestPassword = (event) =>{\n        this.setState({\n            testPassword : event.target.value\n        })\n    }\n\n    handleRegister = (event)=>{\n        const userEmail = this.state.email;\n        const userPassword= this.state.password;\n        const testPassword = this.state.testPassword;\n        event.preventDefault();\n        if(userPassword !== testPassword){\n            this.setState({\n                msg : \"Your passwords don't match, please try again\",\n                showAlert: true\n            })\n        } else {\n            this.props.regAction({\n                userEmail,\n                userPassword\n            })\n        }\n    }\n\n\n    render(){\n        return(\n            <div className=\"register\">\n                <div className=\"register-header-image\">\n                    <img className=\"header-image\" src=\"../../../../images/headerImages/15.jpeg\" alt=\"registerImage\"/>\n                </div>\n                <div className=\"register-title\">\n                    <h1 className=\"title\">Register</h1>\n                    <p className=\"instructions\">Your password must be 6 characters with at least one number!</p>\n                </div>\n                <SweetAlert\n                    show={this.state.showAlert}\n                    title=\"Whoopsie Daisies\"\n                    text={this.state.msg}\n                    onConfirm={() => this.setState({ showAlert: false })}\n                />\n                <div className=\"register-box\">\n                    <form onSubmit={this.handleRegister} className=\"register-form\">\n                        <input onChange={this.inputEmail} id=\"email-input\" type=\"email\" placeholder=\"Email\"/>\n                        <input onChange={this.inputPassword} id=\"password-input\" type=\"password\" placeholder=\"Password\"/>\n                        <input onChange={this.inputTestPassword} id=\"password-input2\" type=\"password\" placeholder=\"Re-type password\"/>\n                        <button id=\"register-button\" type=\"submit\">Register</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        login : state.login\n    }\n}\n\nfunction mapDispatchToProps(dispatcher){\n    return bindActionCreators({\n        regAction : regAction\n    },dispatcher)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from 'axios';\nimport \"./Account.css\";\n\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\n\nclass Account extends Component {\n    constructor(){\n        super()\n        this.state = {\n            showAlert : false,\n            msg : \"\",\n            alertTitle: \"\",\n            email:'',\n            password : \"\",\n            testPassword : \"\"\n        }\n    }\n\n\n    inputPassword = (event) =>{\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    inputTestPassword = (event) =>{\n        this.setState({\n            testPassword : event.target.value\n        })\n    }\n\n    handleRegister = (event)=>{\n        const userPassword= this.state.password;\n        const testPassword = this.state.testPassword;\n        event.preventDefault();\n        if(userPassword !== testPassword){\n            this.setState({\n                alertTitle: \"Whoopsie Daisies\",\n                msg : \"Your passwords don't match, please try again\",\n                showAlert: true\n            })\n        } else {\n                event.preventDefault();\n                axios({\n                    method: 'POST',\n                    url: `${window.apiHost}/users/account`,\n                    data: {\n                        email: this.props.login.email,\n                        password:this.state.password\n                    }\n                }).then(() => {\n                    this.setState({\n                        msg : \"Password changed\",\n                        alertTitle: \"Hurray!\",\n                        showAlert: true\n                    })\n                })\n        }\n    }\n\n\n    render(){\n        return(\n            <div className=\"register\">\n                <div className=\"register-header-image\">\n                    <img className=\"header-image\" src=\"../../../../images/headerImages/1.jpeg\" alt=\"registerImage\"/>\n                </div>\n                <div className=\"register-title\">\n                    <h1 className=\"title\">Account</h1>\n                    <p className=\"instructions\">Reset password must be 6 characters with at least one number!</p>\n                </div>\n                <SweetAlert\n                    show={this.state.showAlert}\n                    title={this.state.alertTitle}\n                    text={this.state.msg}\n                    onConfirm={() => this.setState({ showAlert: false })}\n                />\n                <div className=\"register-box\">\n                    <form onSubmit={this.handleRegister} className=\"register-form\">\n                        <input onChange={this.inputPassword} id=\"password-input\" type=\"password\" placeholder=\"Password\"/>\n                        <input onChange={this.inputTestPassword} id=\"password-input2\" type=\"password\" placeholder=\"Re-type password\"/>\n                        <button id=\"register-button\" type=\"submit\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        login : state.login\n    }\n}\n\n\nexport default connect(mapStateToProps, null)(Account);","import React, {Component} from 'react';\nimport './Home.css'\nimport {Link, Redirect} from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport setCategory from '../../actions/setCategory'\n\n\nclass Home extends Component{\n\n\n    setCategory = (event, cat) => {\n        this.props.setCategory(cat)\n    }\n\n    render(){\n    \n        const number = (Math.floor(Math.random() * 5) + 1)\n        const chooseMessage = number\n        let welcomeMessage\n\n        if (chooseMessage === 1){\n            welcomeMessage = \"Let's Get It!\"\n        } else if (chooseMessage === 2){\n            welcomeMessage = \"Welcome Back!\"\n        } else if (chooseMessage === 3){\n            welcomeMessage = \"Carpé Diem!\"\n        } else if (chooseMessage === 4){\n            welcomeMessage = \"Hello hello!\"\n        } else {\n            welcomeMessage = \"Nice to See You!\"\n        } \n        \n        \n\n        if(this.props.login.length === 0){\n            return(\n            <Redirect to=\"/login\"/>\n            )\n        } else {\n            return(\n                <div>\n                    <div className=\"welcomeTextContent\">\n                        <h1 className=\"welcomeMessage\">{welcomeMessage}</h1>\n                    </div>\n                    <div className=\"categoryCircleContainer\">\n                            <div className=\"circleSpacing\">\n                            <Link style={{ textDecoration: 'none' }} onClick={(event)=>{this.setCategory(event,'food')}} to=\"/userHome/food\"><div className=\"food\"><p>Food</p></div></Link>\n                            <Link style={{ textDecoration: 'none' }} onClick={(event)=>{this.setCategory(event, 'active')}} to=\"/userHome/active\"><div className=\"active\"><p>Active</p></div></Link>\n                            </div>\n                            <div>\n                            <Link style={{ textDecoration: 'none' }} onClick={(event)=>{this.setCategory(event,'culture')}} to=\"/userHome/culture\"><div className=\"culture\"><p>Culture</p></div></Link>\n                            <Link style={{ textDecoration: 'none' }} onClick={(event)=>{this.setCategory(event,'event')}} to=\"/userHome/event\"><div className=\"events\"><p>Events</p></div></Link>\n                            </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n    }\n\nfunction mapDispatchToProps(dispatcher){\n    return bindActionCreators({\n        setCategory: setCategory\n    }, dispatcher)\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login,\n        category: state.category\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport './Button.css';\n\nconst Button = (props) => (\n    <button\n        className={props.className} id={props.id} type ={props.type} onClick={props.clicked}>{props.children}</button>\n)\n\nexport default Button;","import React, { Component } from 'react';\nimport Button from '../../components/utility/button/Button'\nimport './AddForm.css'\n\n\nclass AddForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            place: '',\n            type: '',\n            text: '',\n            filter: ''\n            // date: '', we may need another component just for events, \n            // unless we can figure out how to conditionally render a date field on only certain pages\n        }\n    }\n\n    addNew = (event) => {\n        event.preventDefault(event)\n        this.props.addNewPlace(this.state.place, this.state.type, this.state.text)\n        document.getElementById('Dropdown').value = this.props.defaultType;\n        this.setState({\n            place: '',\n            type: '',\n            text: '',\n        })\n    }\n\n    changePlace = (event) => {\n        this.setState({\n            place: event.target.value\n        })\n    }\n\n    changeType = (event) => {\n        this.setState({\n            type: event.target.value\n        })\n    }\n\n    changeDate = (event) => {\n        this.setState({\n            date: event.target.value\n        })\n    }\n\n    changeText = (event) => {\n        this.setState({\n            text: event.target.value\n        })\n    }\n\n    render() {\n\n        return (\n            <div className=\"addFormContainer\">\n                <form onSubmit={this.addNew} className=\"addForm\">\n                    <div className=\"addNameAndType\">\n                        <input onChange={this.changePlace} type=\"text\" id=\"NewPlace\" placeholder={this.props.placeholder} value={this.state.place} required />\n                        <select className=\"Dropdown Type\" id=\"Dropdown\" onChange={this.changeType} required>\n                            <option value=\"\">{this.props.defaultType}</option>\n                            {this.props.types}\n                        </select>\n                    </div>\n                    <div className=\"addNote\">\n                        <textarea onChange={this.changeText} id=\"NewText\" placeholder={this.props.textType} value={this.state.text}></textarea>\n                    </div>\n                    <Button type=\"submit\" className=\"submitButton\">Add</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddForm;\n\n","import React, { Component } from 'react'\n\nclass PlaceCards extends Component {\n\n    render(){\n        let styles;\n        if (this.props.cards){\n            if(this.props.cards.length === 0){\n                styles = {visibility : \"hidden\"}\n            } else {\n                styles = {visibility : \"visible\"}\n            }\n        }\n        return (\n            <div className=\"placeCards\" style={styles}>\n                {this.props.cards}\n            </div>\n        )\n    } \n}\n\nexport default PlaceCards;","import React, { Component } from 'react';\nimport Button from '../button/Button';\nimport './Filter.css'\n\nclass Filter extends Component{\n    constructor(){\n        super()\n        this.state = {\n            filter: ''\n        }\n    }\n\n    filter = (event) => {\n        event.preventDefault(event)\n        this.props.filterResults(this.state.filter)\n    }\n\n    viewAll = (event) => {\n        event.preventDefault(event)\n        this.props.clearFilter()\n        document.getElementById('filterDropDown').value = this.props.defaultValue\n        this.setState({\n            filter: this.props.defaultValue\n        })\n    }\n\n    changeFilter = (event) => {\n        this.setState({\n            filter: event.target.value\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"filterBox\">\n                <form onSubmit={this.filter} className=\"filterForm\">\n                    <select className=\"filterDropDown\" id=\"filterDropDown\" onChange={this.changeFilter}>\n                        <option value={this.props.defaultValue}>{this.props.defaultFilter}</option>\n                        {this.props.filters}\n                    </select>\n                    <Button type=\"submit\" className=\"filterButton\">Filter</Button>\n                </form>\n                <form onSubmit={this.viewAll} className=\"clearFilterForm\">\n                    <Button type=\"submit\" className=\"filterButton\">Clear</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from '../../../../components/utility/button/Button';\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../todo.css';\n\nclass FoodTodo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Restaurant', 'Cafe', 'Bar', 'Diner'],\n            msg: \"\",\n            showAlert: false,\n            swTitle: \"Added to Faves!\"\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/getFoodList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((foodListFromDB) => {\n            this.setState({\n                list: foodListFromDB\n            })\n        })\n    }\n\n    addNewPlace = (place, type, text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/addFood`,\n            data: {\n                placename: place,\n                type: type,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0){\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            }else{\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n    addToFavorites = (placename) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/food/addFave/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse,\n                msg: \"Added to favorites!\",\n                swTitle: \"Yum!\",\n                showAlert: true\n            })\n        })\n    }\n\n    removePlace = (placename) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/food/deletePlace/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/filter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/getFoodList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((foodListFromDB) => {\n            this.setState({\n                list: foodListFromDB\n            })\n        })\n    }\n\n    render() {\n        let category = \"food\";\n        let section = \"todo\";\n\n        if (this.state.list.data !== undefined) {\n            var foodToDo = this.state.list.data.map((food, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{food.placename} : {food.type}</h4>\n                            <div>\n                                <p>{food.note}</p>\n                            </div>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button clicked={() => this.addToFavorites(food.placename)} className=\"faveButton\">Fave</Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\"+ category + \"/edit/\" + section + \"/\" + food.placename} >Edit</Link></Button>\n                            <Button clicked={() => this.removePlace(food.placename)} className=\"deleteButton\">Remove</Button>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        })\n        const filterArray = this.state.types.map((filter, i)=>{\n            return(<option key={i} value={filter}>{filter}</option>)\n        })\n        \n        if(this.props.login.length === 0){\n            return (\n                <Redirect to=\"/login\"/>\n            )\n        } else {\n            return (\n                <div className=\"ToDo\">\n                    <h2>Yummy treats!</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"todoBody\">\n                        <div className=\"todoLeft\">\n                            <AddForm\n                                title=\"Add to your list!\"\n                                addNewPlace={this.addNewPlace}\n                                placeholder=\"Add new place...\"\n                                defaultType=\"Choose type!\"\n                                textType=\"Add note...\"\n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"todoRight\">\n                            <Filter \n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={foodToDo}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        }\n    }\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(FoodTodo);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport {Link, Redirect} from 'react-router-dom';\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards'\nimport Button from '../../../../components/utility/button/Button'\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../favorites.css'\n\nclass FoodFavorites extends Component {\n        constructor() {\n            super()\n            this.state = {\n                list: [],\n                types: ['Restaurant','Cafe', 'Bar', 'Diner'],\n                msg: \"\",\n                showAlert: false,\n                swTitle: \"\"\n            }\n        }\n    \n        componentDidMount() {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/food/getFoodFaveList`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((foodListFromDB) => {\n                    this.setState({\n                        list: foodListFromDB\n                    })\n                })\n        }\n    \n        addNewPlace = (place, type, text) => {\n            //api call will go here with autocomplete to add name, location to DB\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/food/addFaveInFavorites`,\n                data: {\n                    placename: place,\n                    type: type,\n                    note: text,\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                if (backEndResponse.data.length === 0) {\n                    this.setState({\n                        showAlert: true,\n                        swTitle: \"Whoops!\",\n                        msg: \"This is already in one of your lists!\"\n                    })\n                } else {\n                    this.setState({\n                        list: backEndResponse,\n                    })\n                }\n            })\n        }\n    \n        removePlace = (placename) => {\n            axios({\n                method: \"POST\",\n                url: `${window.apiHost}/food/deleteFavePlace/${placename}`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                this.setState({\n                    list: backEndResponse\n                })\n            })\n        }\n\n        filterResults = (filter) => {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/food/faveFilter/${filter}`,\n                data: {\n                    type: filter,\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                this.setState({\n                    list: backEndResponse\n                })\n            })\n        }\n\n        clearFilter = () => {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/food/getFoodFaveList`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((foodListFromDB) => {\n                this.setState({\n                    list: foodListFromDB\n                })\n            })\n        }\n       \n        render() {\n            let category = \"food\";\n            let section = \"favorites\";\n            if (this.state.list.data !== undefined) {\n                var favorites = this.state.list.data.map((food, i) => {\n                    return (\n                        <div key={i} className=\"placeCard\">\n                            <div className=\"cardLeft\">\n                                <h4>{food.placename} : {food.type} </h4>\n                                <p>{food.note}</p>\n                            </div>\n                            <div className=\"buttonContainer\">\n                                <Button className=\"reviewButton\"><Link to={\"/userHome/\"+ category + \"/reviews/\" + section + \"/\" + food.placename} >Review</Link></Button>\n                                <Button className=\"editButton\"><Link to={\"/userHome/\"+ category + \"/edit/\" + section + \"/\" + food.placename} >Edit</Link></Button>\n                                <Button clicked={() => this.removePlace(food.placename)} className=\"deleteButton\">Remove</Button>\n                            </div> \n                        </div>\n                    )\n                })\n            }\n\n            const typeArray = this.state.types.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n            const filterArray = this.state.types.map((filter, i)=>{\n                return(<option key={i} value={filter}>{filter}</option>)\n            })\n\n            if(this.props.login.length === 0){\n                return(\n                <Redirect to=\"/login\"/>\n                )\n            } else {\n                return (\n                    <div className=\"Favorites\">\n                        <h2>Favorite treats</h2>\n                        <SweetAlert\n                            show={this.state.showAlert}\n                            title={this.state.swTitle}\n                            text={this.state.msg}\n                            onConfirm={() => this.setState({ showAlert: false })}\n                        />\n                        <div className=\"faveBody\">\n                            <div className=\"faveLeft\">\n                                <AddForm\n                                    title=\"Add a favorite!\"\n                                    addNewPlace={this.addNewPlace}\n                                    placeholder=\"Add new...\"\n                                    textType=\"Add note...\"\n                                    defaultType=\"Choose type!\"\n                                    types={typeArray}\n                                />\n                            </div>\n                            <div className=\"faveRight\">\n                                <Filter \n                                    defaultFilter=\"Filter by type\"\n                                    defaultValue={this.state.types[0]}\n                                    filters={filterArray}\n                                    filterResults={this.filterResults}\n                                    clearFilter={this.clearFilter}\n                                />\n                                <PlaceCards cards={favorites}/>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        }\n    }\n    \n    function mapStateToProps(state) {\n        return {\n            login: state.login\n        }\n    }\n    \n    export default connect(mapStateToProps, null)(FoodFavorites);","import React, {Component} from \"react\";\nimport Button from \"../../components/utility/button/Button\";\nimport \"./AddReviewForm.css\"\n\nclass AddReviewForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            place: \"\",\n            review: \"\",\n            type: \"\",\n            stars: \"\"\n        }\n    }\n\n    addNewReview = (event)=>{\n        event.preventDefault();\n        this.props.addReview(this.state.place,this.state.review, this.state.type, this.state.stars);\n        document.getElementsByClassName('type').value = this.props.defaultType;\n        document.getElementsByClassName(\"starDropdown\").value = this.props.defaultStars;\n        this.setState({\n            place: \"\",\n            review: \"\",\n            type: \"\",\n            stars: \"\"\n        })\n    }\n\n    changePlace = (event)=>{\n        this.setState({\n            place : event.target.value\n        })\n    }\n\n    changeType = (event)=>{\n        this.setState({\n           type : event.target.value \n        })\n    }\n\n\n    changeStars = (event)=>{\n        this.setState({\n           stars : event.target.value \n        })\n    }\n\n    changeReview = (event)=>{\n        this.setState({\n            review : event.target.value\n        })\n    }\n    \n    render(){\n        return(\n            <div className=\"AddReviewForm\">\n                <form onSubmit={this.addNewReview} className=\"reviewForm\">\n                {/* <h3>Add your review!</h3> */}\n                <div className=\"placeInput\">\n                    <input type=\"text\" placeholder=\"Enter your place to review here!\" value={this.state.place} id=\"newPlace\" onChange={this.changePlace} required/>\n                </div>\n                <div className=\"typeStarInput\">\n                <select className=\"type\" id=\"reviewDropdown\" onChange={this.changeType} value={this.state.type} required>\n                        <option value=\"\">{this.props.defaultType}</option>\n                        {this.props.types}\n                    </select>\n                    <select className=\"starDropDown\" id=\"starDropdown\" value={this.state.stars} onChange={this.changeStars} required> \n                        <option value=\"\">{this.props.defaultStars}</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                    </select>\n                </div>\n                <div className=\"addReview\">\n                    <textarea onChange={this.changeReview} id=\"newReview\" placeholder={this.props.placeholder} value={this.state.review} required></textarea>\n                        <Button type=\"submit\" className=\"submitButton\">Add Review</Button>\n                </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddReviewForm;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { connect } from \"react-redux\";\nimport {Link, Redirect} from \"react-router-dom\";\n\nimport AddReviewForm from '../../../Forms/AddReviewForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from \"../../../../components/utility/button/Button\";\nimport '../../reviews.css'\n\nclass FoodReviews extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list : [],\n            msg : \"\",\n            types : ['Restaurant', 'Cafe', 'Bar', 'Diner'],\n            showAlert: false,\n        }\n    }\n\n    componentDidMount(){\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/food/getFoodReviews`,\n            data : {\n                email : this.props.login.email\n            }\n        }).then((reviewListFromDB)=>{\n            this.setState(({\n                list : reviewListFromDB\n            }))\n        })\n    }\n\n    addReview = (place, review, type, stars) =>{\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/food/addFoodReview/${place}`,\n            data : {\n                email : this.props.login.email,\n                place,\n                review,\n                type,\n                stars\n            }\n        }).then((responseFromDB)=>{\n            this.setState({\n                list : responseFromDB,\n                msg : `Congrats! You've added a review for ${place}!`,\n                showAlert: true,\n            })\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    removeReview = (place)=>{\n        axios({\n            method : \"POST\",\n            url: `${window.apiHost}/food/deleteFoodReview/${place}`,\n            data :{\n                email : this.props.login.email\n            }\n        }).then((backEndResponse)=>{\n            this.setState({\n                list : backEndResponse\n            })\n        })\n    }\n\n    render() {\n        let category = \"food\";\n        let section = \"reviews\";\n        if (this.state.list.data !== undefined) {\n            var foodReviews = this.state.list.data.map((review, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{review.placename} - {review.stars} Stars</h4>\n                            <p>{review.review}</p>\n                        </div>\n                        <div className=\"cardRight\">\n                            <div className=\"buttonContainer\">\n                                <Button className=\"editButton\"><Link to={\"/userHome/\"+ category + \"/edit/\" + section + \"/\" + review.placename} >Edit</Link></Button>\n                                <Button clicked={() => this.removeReview(review.placename)} className=\"deleteButton\">Remove</Button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        });\n\n        if(this.props.login.length === 0){\n            return (\n                <Redirect to=\"/login\"/>\n            )\n        } else {\n            return (\n                <div className=\"Reviews\">\n                    <h2>Reviews</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title=\"Review Added\"\n                        text={this.state.msg}\n                        confirmBtnBsStyle=\"danger\"\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"reviewBody\">\n                        <div className=\"reviewLeft\">\n                            <AddReviewForm\n                                placeholder=\"Add your food review here!\"\n                                defaultType= \"Choose type!\"\n                                defaultStars = \"Stars\"\n                                types={typeArray}\n                                addReview={this.addReview}\n                            />\n                        </div>\n                        <div className=\"reviewRight\">\n                            <PlaceCards cards={foodReviews}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps,null)(FoodReviews);","import React,{Component} from \"react\";\nimport Button from \"../../components/utility/button/Button\";\nimport './ExploreForm.css'\n\nclass ExploreForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            searchPlace : \"\",\n            searchLocation : \"\",\n        }\n    }\n\n    exploreSearch = (event) => {\n        event.preventDefault(event)\n        this.props.exploreRequest(this.state.searchPlace, this.state.searchLocation)\n    }\n\n    changeSearchPlace = (event) => {\n        this.setState({\n            searchPlace: event.target.value\n        })\n    }\n\n    changeSearchLocation = (event) => {\n        this.setState({\n            searchLocation: event.target.value\n        })\n    }\n\n    render() {\n\n        return (\n            <div className=\"ExploreFormContainer\">\n                <form onSubmit={this.exploreSearch} className=\"ExploreForm\">\n                    <h3>Search!</h3>\n                    <div className=\"addNameAndType\">\n                        <input onChange={this.changeSearchPlace} type=\"text\" id=\"NewSearchPlace\" placeholder={this.props.searchPlaceholder} value={this.state.searchPlace} required />\n                        <input onChange={this.changeSearchLocation} type=\"text\" id=\"NewSearchLocation\" placeholder={this.props.locationPlaceholder} value={this.state.searchLocation} required />\n                    </div>\n                    \n                    <Button type=\"submit\" className=\"submitButton\">Search</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ExploreForm;","const config = {\n    apiKey : \"AIzaSyAGsCU-IKRrCvUGgKjpze44IVAbGZT0X2A\"\n}\n\nexport default config;","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport ExploreForm from \"../../../Forms/ExploreForm\";\nimport axios from \"axios\";\nimport config from \"../../../../config\";\nimport {Redirect} from 'react-router-dom';\nimport '../../Explore.css'\nimport Button from \"../../../../components/utility/button/Button\";\nimport PlaceCards from \"../../../../components/Lists/PlaceCards/PlaceCards\";\n\nclass FoodExplore extends Component {\n    constructor(){\n        super()\n        this.state = {\n            exploreResults : [],\n            types: ['Restaurant','Cafe', 'Bar', 'Diner'],\n        }\n    }\n\n\n    exploreRequest = (name,city)=>{\n        let cityCoordinates, searchLat, searchLon;\n        const locationComma = city.replace(/,/g,\"\");\n        const locationFinalFormat = locationComma.replace(/ /g,\"+\");\n        const addressToCoordinatesUrl=`https://maps.googleapis.com/maps/api/geocode/json?address=${locationFinalFormat}&key=${config.apiKey}`;\n        axios({\n            method : \"GET\",\n            url : addressToCoordinatesUrl\n        }).then((response)=>{\n            searchLat =  response.data.results[0].geometry.location.lat\n            searchLon =  response.data.results[0].geometry.location.lng;\n            cityCoordinates = {\n                lat : searchLat,\n                lng : searchLon\n            }\n\n            let request = {\n              query: `${name}`,\n              rankby : \"distance\",\n              location : cityCoordinates,\n              radius: 10000\n            };\n    \n            // USE WINDOW TO ACCESS GOOGLE \n          \n            let service = new window.google.maps.places.PlacesService(document.createElement('div'));\n            let searchResults = [];\n            service.textSearch(request, (results, status)=> {\n                let loopLength;\n                if (15 < results.length){\n                    loopLength = 15\n                } else {\n                    loopLength = results.length\n                }\n\n                for(let i = 0; i < loopLength; i++) {\n                    searchResults.push(results[i])\n                }\n                \n                this.setState({\n                    exploreResults : searchResults\n                })\n            });\n        })\n    }\n\n    addExploreTodo = (place, type, text) => {\n        //api call will go here with autocomplete to add name, location to DB\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/addExploreTodo`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/food/todo\")\n            }\n        })\n    }\n\n    addExploreFavorite = (place, type, text)=>{\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/addExploreFavorite`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/food/favorites\")\n            }\n        })\n\n    }\n    render(){\n       \n        const exploreResults = this.state.exploreResults.map((place, i)=>{\n            const typeArray = this.state.types;\n            const exploreTypeArray = place.types;\n            let type;\n            for(let i =0; i < typeArray.length; i++){\n                for(let j = 0; j < exploreTypeArray.length; j++){\n                    if(typeArray[i].toLowerCase() === exploreTypeArray[j]){\n                        type = typeArray[i]\n                    }\n                }\n            }\n            \n            if(type === undefined){\n                type = \"Restaurant\"\n            }\n            \n            return (\n                <div key={i} className=\"placeCard\">\n                    <div className=\"cardLeft\">\n                        <h4>{place.name}</h4>\n                        <p>{type}</p>\n                    </div>\n                    <div className=\"buttonContainer\">\n                        <Button clicked={() => this.addExploreTodo(place.name, type, place.formatted_address)} className=\"todoButton\">Todo</Button>\n                        <Button clicked={() => this.addExploreFavorite(place.name, type, place.formatted_address)} className=\"faveButton\">Favorite</Button>\n                    </div> \n                </div>\n                )\n            })\n\n            if(this.props.login.length === 0){\n                return(\n                <Redirect to=\"/login\"/>\n                )\n            } else {\n                return (\n                    <div className=\"Explore\">\n                    {\n                        \n                    }\n                        <h2>Explore your palette...</h2>\n                        <div className=\"exploreBody\">\n                            <div className=\"exploreLeft\">\n                                <ExploreForm\n                                searchPlaceholder=\"What would you like to eat?\"\n                                locationPlaceholder=\"Enter city and state\"\n                                exploreRequest={this.exploreRequest}\n                                />\n                            </div>\n                            <div className=\"exploreRight\">\n                                <PlaceCards cards={exploreResults} />\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(FoodExplore);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport Button from '../../components/utility/button/Button'\nimport {Redirect} from \"react-router-dom\";\nimport './EditForm.css'\n\n\nclass EditForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            place: '',\n            category : \"\",\n            type: '',\n            text: '',\n            foodTypes: ['Restaurant', 'Cafe', 'Bar', 'Diner'],\n            activeTypes: ['Outdoors', 'Fitness', 'Sports', 'Trips'],\n            cultureTypes: ['Music', 'Art', 'Theater', 'Festival'],\n            eventTypes: ['Festival', 'Arts-Movies-Music', 'Sporting Events', 'Educational'],\n            redirect : false,\n            stars: \"\"\n            // date: '', we may need another component just for events, \n            // unless we can figure out how to conditionally render a date field on only certain pages\n        }\n    }\n\n    componentDidMount() {\n        const placename = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/${category}/${section}/getPlaceToEdit/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((responseFromDB) => {\n            let textFromDB = responseFromDB.data.note || responseFromDB.data.review\n            let placeFromDB = responseFromDB.data.placename || responseFromDB.data.eventname\n            let starsFromDB = responseFromDB.data.stars \n            this.setState({\n                place : placeFromDB,\n                category : category,\n                type : responseFromDB.data.type,\n                text : textFromDB,\n                stars: starsFromDB\n            })\n        })\n    }\n\n    editPlace = (event)=>{\n        event.preventDefault();\n        const placename = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n        const updatedPlacename = this.state.place;\n        const updatedType = this.state.type;\n        const updatedText = this.state.text;\n        const updatedStars = this.state.stars;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/${category}/${section}/editPlace/${placename}`,\n            data: {\n                email: this.props.login.email,\n                updatedPlacename,\n                updatedType,\n                updatedText,\n                updatedStars\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                place : \"\",\n                category : \"\",\n                type : \"\",\n                text : \"\",\n                redirect: true\n            })\n        })\n    }\n\n   \n\n    changePlace = (event) => {\n        this.setState({\n            place: event.target.value\n        })\n    }\n\n    changeType = (event) => {\n        this.setState({\n            type: event.target.value\n        })\n    }\n\n    changeDate = (event) => {\n        this.setState({\n            date: event.target.value\n        })\n    }\n\n    changeText = (event) => {\n        this.setState({\n            text: event.target.value\n        })\n    }\n\n    changeStars = (event) => {\n        this.setState({\n            stars : event.target.value\n        })\n    }\n\n\n    render() {\n        const category = this.props.match.params.category;\n        let typeArray;\n        if(category === \"food\"){\n            typeArray = this.state.foodTypes.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n        } else if(category === \"culture\"){\n            typeArray = this.state.cultureTypes.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n        } else if(category === \"active\"){\n            typeArray = this.state.activeTypes.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n        } else if (category === \"events\"){\n            typeArray = this.state.eventTypes.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n        }\n        let starDropdown;\n        if(this.props.match.params.section === \"reviews\"){\n            starDropdown = \n            <select id=\"EditReviewStars\" value={this.state.stars} onChange={this.changeStars} required > \n                <option value={this.state.stars}>{this.state.stars}</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n            </select>;\n        }\n\n        if(this.state.redirect === true){\n            const section = this.props.match.params.section;\n            if(category === \"events\"){\n                return <Redirect to={`/userHome/event/${section}`}/>\n            }else{\n               return  <Redirect to={`/userHome/${category}/${section}`}/>\n            }\n        } else {\n            return (\n                <div className=\"EditFormContainer\">\n                    <form onSubmit={this.editPlace} className=\"editForm\">\n                    <h2>Make your edits below!</h2>\n                        <div className=\"editNameAndType\">\n                            <input onChange={this.changePlace} type=\"text\" id=\"editPlace\" defaultValue={this.state.place} />\n                        </div>\n                        <div className=\"EditDropdowns\">\n                            <select className=\"DropDownEdit Type\" id=\"DropDownEdit\" onChange={this.changeType}>\n                                <option defaultValue={this.state.type}>{this.state.type}</option>\n                                {typeArray}\n                            </select>\n                            {starDropdown}\n                        </div>\n                        <div className=\"editNote\">\n                            <textarea onChange={this.changeText} value={this.state.text} id=\"editText\"></textarea>\n                        </div>\n                        <Button type=\"submit\" className=\"submitButton\">Update</Button>\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EditForm);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport Button from '../../components/utility/button/Button'\nimport {Redirect} from \"react-router-dom\";\nimport './FaveReviewForm.css'\n\n\nclass FaveReviewForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            place:'',\n            category:'',\n            review:'',\n            type: '',\n            stars: '',\n            redirect : false\n            // date: '', we may need another component just for events, \n            // unless we can figure out how to conditionally render a date field on only certain pages\n        }\n    }\n\n    componentDidMount() {\n        const placename = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n    \n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/${category}/${section}/getFaveToReview/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                place : responseFromDB.data.placename,\n                category : category,\n                type : responseFromDB.data.type,\n            })\n        })\n    }\n\n    editPlace = (event)=>{\n        event.preventDefault();\n        const placename = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n        const updatedReview = this.state.review;\n        const updatedStars = this.state.stars;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/${category}/${section}/reviewFave/${placename}`,\n            data: {\n                email: this.props.login.email,\n                updatedReview,\n                updatedStars\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                stars:'',\n                review: \"\",\n                redirect: true\n            })\n        })\n    }\n   \n    changePlace = (event) => {}\n\n    changeType = (event)=>{}\n\n    changeReview = (event) => {\n        this.setState({\n            review: event.target.value\n        })\n    }\n\n    changeStars = (event) => {\n        this.setState({\n            stars: event.target.value\n        })\n    }\n\n\n    render() {\n\n        if(this.state.redirect === true){\n            const section = this.props.match.params.section;\n            const category = this.props.match.params.category;\n            return(\n                <Redirect to={`/userHome/${category}/${section}`}/>\n            )\n        } else {\n            return (\n                <div className=\"FaveReviewFormContainer\">\n                    <form onSubmit={this.editPlace} className=\"FaveReviewForm\">\n                        <h3>Add your review!</h3>\n                        <div className=\"addFaveReviewInput\">\n                            <input onChange={this.changePlace} type=\"text\" id=\"NewFaveReview\" value={this.state.place} />\n                            <div className=\"typeAndStars\">\n                                <select className=\"DropdownFaveReviewType Type\" id=\"FaveDropDown\" onChange={this.changeType}>\n                                    <option defaultValue={this.state.type}>{this.state.type}</option>\n                                </select>\n                                <select className=\"faveReviewStarDropdown\" value={this.state.stars} onChange={this.changeStars} required> \n                                    <option value=\"\">Stars</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"addFaveReview\">\n                            <textarea onChange={this.changeReview} value={this.state.review} id=\"NewFaveReviewText\"></textarea>\n                        </div>\n                        <Button type=\"submit\" className=\"submitButton\">Add</Button>\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(FaveReviewForm);\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n// import { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport './SideNav.css';\n\nclass SideNav extends Component {\n\n    render() {\n        let catHome = `/userHome/${this.props.category}`\n        let todoLink = `/userHome/${this.props.category}/todo`\n        let faveLink = `/userHome/${this.props.category}/favorites`\n        let reviewsLink = `/userHome/${this.props.category}/reviews`\n        \n        return (\n            <div className=\"sideNav\">\n                <div className=\"circleContainer\">\n                    <div>\n                        <Link style={{ textDecoration: 'none' }} to={catHome}><div className=\"exploreCircle\"><p>Explore</p></div></Link>\n                    </div>\n                    <div>\n                        <Link style={{ textDecoration: 'none' }} to={todoLink}><div className=\"toDoCircle\"><p>To Do</p></div></Link>\n                    </div>\n                    <div>\n                        <Link style={{ textDecoration: 'none' }} to={faveLink}><div className=\"favoritesCircle\"><p>Favorite</p></div></Link>\n                    </div>\n                    <div>\n                        <Link style={{ textDecoration: 'none' }} to={reviewsLink}><div className=\"reviewsCircle\"><p>Reviews</p></div></Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        category: state.category\n    }\n}\n\nexport default connect(mapStateToProps, null)(SideNav);","import React from \"react\";\nimport SideNav from \"../navBar/SideNav\";\nimport './categoryHome.css';\n\nfunction CategoryHomeLayout(props) {\n    return (\n        <div className='categoryHomeContainer'>\n            <SideNav />\n            <div className=\"mainHome\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default CategoryHomeLayout;","import React, {Component} from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport FoodTodo from \"./todo/FoodTodo\";\nimport FoodFavorites from './favorites/FoodFavorites'\nimport FoodReviews from \"./reviews/FoodReviews\";\nimport FoodExplore from \"./explore/FoodExplore\";\nimport EditForm from '../../Forms/EditForm';\nimport FaveReviewForm from '../../Forms/FaveReviewForm'\n\nimport CategoryHomeLayout from '../CategoryHomeLayout'\nimport '../categoryHome.css';\n\nclass Food extends Component {\n\n    render(){\n        return(\n            <CategoryHomeLayout>\n                <Route exact path=\"/userHome/food/\" component={FoodExplore} />\n                <Route exact path=\"/userHome/food/todo\" component={FoodTodo} />\n                <Route exact path=\"/userHome/food/favorites\" component={FoodFavorites} />\n                <Route exact path=\"/userHome/food/reviews\" component={FoodReviews} />\n                <Route exact path=\"/userHome/:category/edit/:section/:place\" component={EditForm} />\n                <Route exact path=\"/userHome/:category/reviews/:section/:place\" component={FaveReviewForm} />\n            </CategoryHomeLayout>\n        )\n    }\n}\n\n\nexport default Food;\n\n\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from '../../../../components/utility/button/Button';\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../todo.css';\n\n\nclass CultureToDo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Music', 'Art', 'Theater', 'Learning'],\n            msg: \"\",\n            showAlert: false,\n            swTitle: \"Added to Faves!\"\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/getCultureList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((cultureListFromDB) => {\n            this.setState({\n                list: cultureListFromDB\n            })\n        })\n    }\n\n    addNewPlace = (place, type, text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/addCulture`,\n            data: {\n                placename: place,\n                type: type,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0) {\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            } else {\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n    addToFavorites = (placename) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/culture/addFave/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse,\n                msg: \"Success! Added to favorites\",\n                swTitle: \"Added to Faves!\",\n                showAlert: true\n            })\n        })\n    }\n\n    removePlace = (placename) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/culture/deletePlace/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/filter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/getCultureList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((cultureListFromDB) => {\n            this.setState({\n                list: cultureListFromDB\n            })\n        })\n    }\n\n    render() {\n        let category = \"culture\";\n        let section = \"todo\";\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var cultureToDo = this.state.list.data.map((culture, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{culture.placename}</h4>\n                            <div>\n                                <p>{culture.note}</p>\n                            </div>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button clicked={() => this.addToFavorites(culture.placename)} className=\"faveButton\">Fave</Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\"+ category + \"/edit/\" + section + \"/\" + culture.placename} >Edit</Link></Button>\n                            <Button clicked={() => this.removePlace(culture.placename)} className=\"deleteButton\">Remove</Button>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        })\n\n        const filterArray = this.state.types.map((filter, i)=>{\n            return(<option key={i} value={filter}>{filter}</option>)\n        })\n        \n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"ToDo\">\n                    <h2>Expanding horizons...</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"todoBody\">\n                        <div className=\"todoLeft\">\n                            <AddForm\n                                title=\"Add to your list!\"\n                                addNewPlace={this.addNewPlace}\n                                placeholder=\"Add new place to visit...\"\n                                textType=\"Add note...\"\n                                defaultType=\"Choose type!\" \n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"todoRight\">\n                            <Filter \n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={cultureToDo}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(CultureToDo);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from 'react-router-dom';\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards'\nimport Button from '../../../../components/utility/button/Button'\n\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../favorites.css';\n\nclass CultureFavorites extends Component {\n        constructor() {\n            super()\n            this.state = {\n                list: [],\n                msg: \"\",\n                types: ['Music', 'Art', 'Theater', 'Learning'],\n                showAlert: false,\n                swTitle: ''\n            }\n        }\n    \n        componentDidMount() {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/culture/getCultureFaveList`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((cultureListFromDB) => {\n                    this.setState({\n                        list: cultureListFromDB\n                    })\n                })\n        }\n    \n        addNewPlace = (place, type, text) => {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/culture/addFaveInFavorites`,\n                data: {\n                    placename: place,\n                    type: type,\n                    note: text,\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                if (backEndResponse.data.length === 0) {\n                    this.setState({\n                        showAlert: true,\n                        swTitle: \"Whoops!\",\n                        msg: \"This is already in one of your lists!\"\n                    })\n                } else {\n                    this.setState({\n                        list: backEndResponse,\n                    })\n                }\n            })\n        }\n    \n        removePlace = (placename) => {\n            axios({\n                method: \"POST\",\n                url: `${window.apiHost}/culture/deleteFavePlace/${placename}`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                this.setState({\n                    list: backEndResponse\n                })\n            })\n        }\n\n        filterResults = (filter) => {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/culture/faveFilter/${filter}`,\n                data: {\n                    type: filter,\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                this.setState({\n                    list: backEndResponse\n                })\n            })\n        }\n\n        clearFilter = () => {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/culture/getCultureFaveList`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((foodListFromDB) => {\n                this.setState({\n                    list: foodListFromDB\n                })\n            })\n        }\n       \n        render() {\n\n            let category = \"culture\";\n            let section = \"favorites\";\n\n            if (this.state.list.data !== undefined) {\n                document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n                var favorites = this.state.list.data.map((culture, i) => {\n                    return (\n                        <div key={i} className=\"placeCard\">\n                            <div className=\"cardLeft\">\n                                <h4>{culture.placename}</h4>\n                                <p>{culture.note}</p>\n                            </div>\n                            <div className=\"buttonContainer\">\n\n                                <Button className=\"reviewButton\"><Link to={\"/userHome/\"+ category + \"/reviews/\" + section + \"/\" + culture.placename} >Review</Link></Button>\n                                <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/edit/\" + section + \"/\" + culture.placename}>Edit</Link></Button>\n                                <Button clicked={() => this.removePlace(culture.placename)} className=\"deleteButton\">Remove</Button>\n\n                            </div> \n                        </div>\n                    )\n                })\n            }\n\n            const filterArray = this.state.types.map((filter, i)=>{\n                return(<option key={i} value={filter}>{filter}</option>)\n            })\n            \n            const typeArray = this.state.types.map((type, i)=>{\n                return (<option key={i} value={type}>{type}</option>)\n            })\n\n            if (this.props.login.length === 0) {\n                return (\n                    <Redirect to=\"/login\" />\n                )\n            } else {\n                return (\n                    <div className=\"Favorites\">\n                        <h2>Truly sublime</h2>\n                        <SweetAlert\n                            show={this.state.showAlert}\n                            title={this.state.swTitle}\n                            text={this.state.msg}\n                            onConfirm={() => this.setState({ showAlert: false })}\n                        />\n                        <div className=\"faveBody\">\n                            <div className=\"faveLeft\">\n                                <AddForm\n                                    title=\"Add a favorite!\"\n                                    addNewPlace={this.addNewPlace}\n                                    placeholder=\"Add a new experience...\"\n                                    textType=\"Add note...\"\n                                    defaultType=\"Choose type!\" \n                                    types={typeArray}\n                                />\n                            </div>\n                            <div className=\"faveRight\">\n                                <Filter \n                                    defaultFilter=\"Filter by type\"\n                                    defaultValue={this.state.types[0]}\n                                    filters={filterArray}\n                                    filterResults={this.filterResults}\n                                    clearFilter={this.clearFilter}\n                                />\n                                <PlaceCards cards={favorites}/>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        }\n    }\n    \n    function mapStateToProps(state) {\n        return {\n            login: state.login\n        }\n    }\n    \n    export default connect(mapStateToProps, null)(CultureFavorites);","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from 'react-router-dom';\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nimport AddReviewForm from '../../../Forms/AddReviewForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from \"../../../../components/utility/button/Button\";\nimport '../../reviews.css';\n\nclass CultureReviews extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list : [],\n            msg : \"\",\n            types: ['Music', 'Art', 'Theater', 'Learning'],\n            showAlert: false,\n        }\n    }\n\n    componentDidMount(){\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/culture/getCultureReviews`,\n            data : {\n                email : this.props.login.email\n            }\n        }).then((reviewListFromDB)=>{\n            this.setState(({\n                list : reviewListFromDB\n            }))\n        })\n    }\n\n    addReview = (place, review, type, stars) =>{\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/culture/addCultureReview/${place}`,\n            data : {\n                email : this.props.login.email,\n                place,\n                review,\n                type,\n                stars\n            }\n        }).then((responseFromDB)=>{\n            this.setState({\n                list : responseFromDB,\n                msg : `Congrats! You've added a review for ${place}!`,\n                showAlert: true,\n            })\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    removeReview = (place)=>{\n        axios({\n            method : \"POST\",\n            url: `${window.apiHost}/culture/deleteCultureReview/${place}`,\n            data :{\n                email : this.props.login.email\n            }\n        }).then((backEndResponse)=>{\n            this.setState({\n                list : backEndResponse\n            })\n        })\n    }\n\n    render() {\n        let category = \"culture\";\n        let section = \"reviews\";\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var cultureReviews = this.state.list.data.map((review, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{review.placename} - {review.stars} Stars</h4>\n                            <p>{review.review}</p>\n                        </div>\n                        <div className=\"cardRight\">\n                            <div className=\"buttonContainer\">\n                                <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/edit/\" + section + \"/\" + review.placename}>Edit</Link></Button>\n                                <Button clicked={() => this.removeReview(review.placename)} className=\"deleteButton\">Remove</Button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        });\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"Reviews\">\n                    <h2>Reviews</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title=\"Review added!\"\n                        text={this.state.msg}\n                        confirmBtnBsStyle=\"danger\"\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"reviewBody\">\n                        <div className=\"reviewLeft\">\n                            <AddReviewForm\n                                placeholder=\"Add your food review here!\"\n                                defaultType= \"Choose type!\"\n                                defaultStars = \"How many stars?\"\n                                types={typeArray}\n                                addReview={this.addReview}\n                            />\n                        </div>\n                        <div className=\"reviewRight\">\n                            <PlaceCards cards={cultureReviews}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps,null)(CultureReviews);","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport ExploreForm from \"../../../Forms/ExploreForm\";\nimport axios from \"axios\";\nimport config from \"../../../../config\";\nimport {Redirect} from 'react-router-dom';\nimport '../../Explore.css'\nimport Button from \"../../../../components/utility/button/Button\";\nimport PlaceCards from \"../../../../components/Lists/PlaceCards/PlaceCards\";\n\nclass CultureExplore extends Component {\n    constructor(){\n        super()\n        this.state = {\n            exploreResults : [],\n            types: ['Music', 'Art', 'Theater', 'Learning'],\n        }\n    }\n\n\n    exploreRequest = (name,city)=>{\n        let cityCoordinates, searchLat, searchLon;\n        const locationComma = city.replace(/,/g,\"\");\n        const locationFinalFormat = locationComma.replace(/ /g,\"+\");\n        const addressToCoordinatesUrl=`https://maps.googleapis.com/maps/api/geocode/json?address=${locationFinalFormat}&key=${config.apiKey}`;\n        axios({\n            method : \"GET\",\n            url : addressToCoordinatesUrl\n        }).then((response)=>{\n            searchLat =  response.data.results[0].geometry.location.lat\n            searchLon =  response.data.results[0].geometry.location.lng;\n            cityCoordinates = {\n                lat : searchLat,\n                lng : searchLon\n            }\n\n            let request = {\n              query: `${name}`,\n              rankby : \"distance\",\n              location : cityCoordinates,\n              radius: 10000\n            };\n    \n            // USE WINDOW TO ACCESS GOOGLE \n          \n            let service = new window.google.maps.places.PlacesService(document.createElement('div'));\n            let searchResults = [];\n            service.textSearch(request, (results, status)=> {\n                let loopLength;\n                if (15 < results.length){\n                    loopLength = 15\n                } else {\n                    loopLength = results.length\n                }\n\n                for(let i = 0; i < loopLength; i++) {\n                    searchResults.push(results[i])\n                }\n                \n                this.setState({\n                    exploreResults : searchResults\n                })\n            });\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    addExploreTodo = (place, type, text) => {\n        //api call will go here with autocomplete to add name, location to DB\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/addExploreTodo`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/culture/todo\")\n            }\n        })\n    }\n\n    addExploreFavorite = (place, type, text)=>{\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/addExploreFavorite`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/culture/favorites\")\n            }\n        })\n\n    }\n\n    render(){\n        const exploreResults = this.state.exploreResults.map((place, i)=>{\n            const typeArray = this.state.types;\n            const exploreTypeArray = place.types;\n            let type;\n            for(let i =0; i < typeArray.length; i++){\n                for(let j = 0; j < exploreTypeArray.length; j++){\n                    if(typeArray[i].toLowerCase() === exploreTypeArray[j]){\n                        type = typeArray[i]\n                    }\n                }\n            }\n            \n            if(type === undefined){\n                type = \"Learning\"\n            }\n            \n            return (\n                <div key={i} className=\"placeCard\">\n                    <div className=\"cardLeft\">\n                        <h4>{place.name}</h4>\n                        <p>{type}</p>\n                    </div>\n                    <div className=\"buttonContainer\">\n                        <Button clicked={() => this.addExploreTodo(place.name, type, place.formatted_address)} className=\"todoButton\">Todo</Button>\n                        <Button clicked={() => this.addExploreFavorite(place.name, type, place.formatted_address)} className=\"faveButton\">Favorite</Button>\n                    </div> \n                </div>\n                )\n            })\n\n        if(this.props.login.length === 0){\n            return(\n            <Redirect to=\"/login\"/>\n            )\n        } else {\n            return (\n                <div className=\"Explore\">\n                    <h2>Explore your options...</h2>\n                    <div className=\"exploreBody\">\n                        <div className=\"exploreLeft\">\n                            <ExploreForm\n                            searchPlaceholder=\"What would you like to do?\"\n                            locationPlaceholder=\"Enter city and state\"\n                            exploreRequest={this.exploreRequest}\n                            />\n                        </div>\n                        <div className=\"exploreRight\">\n                            <PlaceCards cards={exploreResults} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login,\n        category : state.category\n    }\n}\n\nexport default connect(mapStateToProps, null)(CultureExplore);","import React, {Component} from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport CategoryHomeLayout from '../CategoryHomeLayout';\nimport CultureTodo from './todo/CultureTodo';\nimport CultureFavorites from './favorites/CultureFavorites';\nimport CultureReviews from './reviews/CultureReviews';\nimport EditForm from '../../Forms/EditForm';\nimport FaveReviewForm from '../../Forms/FaveReviewForm'\n\nimport \"../categoryHome.css\";\nimport CultureExplore from './explore/CultureExplore';\n\nclass Culture extends Component {\n\n    render(){\n        return(\n            <CategoryHomeLayout>\n                <Route exact path=\"/userHome/culture\" component={CultureExplore} />\n                <Route exact path=\"/userHome/culture/todo\" component={CultureTodo} />\n                <Route exact path=\"/userHome/culture/favorites\" component={CultureFavorites} />\n                <Route exact path=\"/userHome/culture/reviews\" component={CultureReviews} />\n                <Route exact path=\"/userHome/:category/edit/:section/:place\" component={EditForm} />\n                <Route exact path=\"/userHome/:category/reviews/:section/:place\" component={FaveReviewForm} />\n            </CategoryHomeLayout>\n        )\n    }\n}\n\n\nexport default Culture;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards'\nimport Button from '../../../../components/utility/button/Button'\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../todo.css';\n\nclass ActiveTodo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Outdoors', 'Fitness', 'Sports', 'Trips'],\n            msg: \"\",\n            showAlert: false,\n            swTitle: \"Added to Faves!\"\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/getActiveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((activeListFromDB) => {\n            this.setState({\n                list: activeListFromDB\n            })\n        })\n    }\n\n    addNewActive = (activity, type, text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/addActive`,\n            data: {\n                placename: activity,\n                type: type,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0) {\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            } else {\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n    addToFavorites = (activity) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/active/addFave/${activity}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse,\n                msg: \"Success! Added to favorites\",\n                swTitle: \"Added to Faves!\",\n                showAlert: true\n            })\n        })\n    }\n\n    removeActive = (activity) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/active/deleteActive/${activity}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/filter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/getActiveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((activeListFromDB) => {\n            this.setState({\n                list: activeListFromDB\n            })\n        })\n    }\n\n    render() {\n        let category = \"active\";\n        let section = \"todo\";\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var activeTodo = this.state.list.data.map((activity, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{activity.placename}</h4>\n                            <div>\n                                <p>{activity.note}</p>\n                            </div>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button clicked={() => this.addToFavorites(activity.placename)} className=\"faveButton\">Fave</Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/edit/\" + section + \"/\" + activity.placename} >Edit</Link></Button>\n                            <Button clicked={() => this.removeActive(activity.placename)} className=\"deleteButton\">Remove</Button>\n                        </div>\n\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i) => {\n            return (<option key={i} value={type}>{type}</option>)\n        })\n\n        const filterArray = this.state.types.map((filter, i) => {\n            return (<option key={i} value={filter}>{filter}</option>)\n        })\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"ToDo\">\n                    <h2>Hike up a mountain!</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"todoBody\">\n                        <div className=\"todoLeft\">\n                            <AddForm\n                                addNewPlace={this.addNewActive}\n                                placeholder=\"Add new activity...\"\n                                textType=\"Add note...\"\n                                defaultType=\"Choose type!\"\n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"todoRight\">\n                            <Filter\n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={activeTodo} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(ActiveTodo);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards'\nimport Button from '../../../../components/utility/button/Button'\n\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../favorites.css';\n\nclass ActiveFavorites extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Outdoors', 'Fitness', 'Sports', 'Trips'],\n            msg: \"\",\n            swTitle: \"\",\n            showAlert: false,\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/getActiveFaveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((activeListFromDB) => {\n            this.setState({\n                list: activeListFromDB\n            })\n        })\n    }\n\n    addNewActive = (activity, type, text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/addFaveInFavorites`,\n            data: {\n                placename: activity,\n                type: type,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0) {\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            } else {\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n\n    removePlace = (activity) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/active/deleteFavePlace/${activity}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/faveFilter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/getActiveFaveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((activeListFromDB) => {\n            this.setState({\n                list: activeListFromDB\n            })\n        })\n    }\n\n    render() {\n\n\n        const typeArray = this.state.types.map((type, i) => {\n            return (<option key={i} value={type}>{type}</option>)\n        })\n\n        const filterArray = this.state.types.map((filter, i) => {\n            return (<option key={i} value={filter}>{filter}</option>)\n        })\n\n        let category = \"active\";\n        let section = \"favorites\";\n\n\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var favorites = this.state.list.data.map((activity, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{activity.placename}</h4>\n                            <p>{activity.note}</p>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button className=\"reviewButton\"><Link to={\"/userHome/\"+ category + \"/reviews/\" + section + \"/\" + activity.placename} >Review</Link></Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/edit/\" + section + \"/\" + activity.placename} >Edit</Link></Button>\n                            <Button clicked={() => this.removePlace(activity.placename)} className=\"deleteButton\">Remove</Button>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"Favorites\">\n                    <h2>Favorite adventures!</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"faveBody\">\n                        <div className=\"faveLeft\">\n                            <AddForm\n                                title=\"Add a favorite thing to do!\"\n                                addNewPlace={this.addNewActive}\n                                placeholder=\"Add new favorite activity...\"\n                                textType=\"Add note...\"\n                                defaultType=\"Choose type!\"\n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"faveRight\">\n                            <Filter\n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={favorites} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(ActiveFavorites);\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport AddReviewForm from '../../../Forms/AddReviewForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from \"../../../../components/utility/button/Button\";\nimport '../../reviews.css';\n\nclass ActiveReviews extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Outdoors', 'Fitness', 'Sports', 'Trips'],\n            msg: \"\",\n            showAlert: false,\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/active/getActiveReviews`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((reviewListFromDB) => {\n            this.setState(({\n                list: reviewListFromDB\n            }))\n        })\n    }\n\n    addReview = (activity, review, type, stars) =>{\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/active/addActiveReview/${activity}`,\n            data : {\n                email : this.props.login.email,\n                activity,\n                review,\n                type,\n                stars\n            }\n        }).then((responseFromDB)=>{\n            this.setState({\n                list : responseFromDB,\n                msg : `Congrats! You've added a review for ${activity}!`,\n                showAlert: true,\n            })\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    removeReview = (activity)=>{\n        axios({\n            method : \"POST\",\n            url: `${window.apiHost}/active/deleteActiveReview/${activity}`,\n            data :{\n                email : this.props.login.email\n            }\n        }).then((backEndResponse)=>{\n            this.setState({\n                list : backEndResponse\n            })\n        })\n    }\n\n    render() {\n        let category = \"active\";\n        let section = \"reviews\";\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var activeReviews = this.state.list.data.map((review, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{review.placename} – {review.stars} Stars</h4>\n                            <p>{review.review}</p>\n                        </div>\n                        <div className=\"cardRight\">\n                            <div className=\"buttonContainer\">\n                                <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/edit/\" + section + \"/\" + review.placename} >Edit</Link></Button>\n                                <Button clicked={() => this.removeReview(review.placename)} className=\"deleteButton\">Remove</Button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i) => {\n            return (<option key={i} value={type}>{type}</option>)\n        })\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"Reviews\">\n                    <h2>Reviews</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title=\"Review Added!\"\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"reviewBody\">\n                        <div className=\"reviewLeft\">\n                            <AddReviewForm\n                                placeholder=\"Add your active review here!\"\n                                defaultType=\"Choose type!\"\n                                defaultStars=\"How many stars?\"\n                                types={typeArray}\n                                addReview={this.addReview}\n                            />\n                        </div>\n                        <div className=\"reviewRight\">\n                            <PlaceCards cards={activeReviews} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(ActiveReviews);","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport ExploreForm from \"../../../Forms/ExploreForm\";\nimport axios from \"axios\";\nimport config from \"../../../../config\";\n// import {Redirect} from 'react-router-dom';\nimport '../../Explore.css'\nimport Button from \"../../../../components/utility/button/Button\";\nimport PlaceCards from \"../../../../components/Lists/PlaceCards/PlaceCards\";\n\nclass ActiveExplore extends Component {\n    constructor(){\n        super()\n        this.state = {\n            exploreResults : [],\n            types: ['Outdoors', 'Fitness', 'Sports', 'Trips'],\n            showAlert: false,\n\n        }\n    }\n\n\n    exploreRequest = (name,city)=>{\n        let cityCoordinates, searchLat, searchLon;\n        const locationComma = city.replace(/,/g,\"\");\n        const locationFinalFormat = locationComma.replace(/ /g,\"+\");\n        const addressToCoordinatesUrl=`https://maps.googleapis.com/maps/api/geocode/json?address=${locationFinalFormat}&key=${config.apiKey}`;\n        axios({\n            method : \"GET\",\n            url : addressToCoordinatesUrl\n        }).then((response)=>{\n            searchLat =  response.data.results[0].geometry.location.lat\n            searchLon =  response.data.results[0].geometry.location.lng;\n            cityCoordinates = {\n                lat : searchLat,\n                lng : searchLon\n            }\n\n            let request = {\n              query: `${name}`,\n              rankby : \"distance\",\n              location : cityCoordinates,\n              radius: 10000\n            };\n    \n            // USE WINDOW TO ACCESS GOOGLE \n          \n            let service = new window.google.maps.places.PlacesService(document.createElement('div'));\n            let searchResults = [];\n            service.textSearch(request, (results, status)=> {\n                let loopLength;\n                if (15 < results.length){\n                    loopLength = 15\n                } else {\n                    loopLength = results.length\n                }\n\n                for(let i = 0; i < loopLength; i++) {\n                    searchResults.push(results[i])\n                }\n                \n                this.setState({\n                    exploreResults : searchResults\n                })\n            });\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    addExploreTodo = (place, type, text) => {\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/addExploreTodo`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/active/todo\")\n            }\n        })\n    }\n\n    addExploreFavorite = (place, type, text)=>{\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/addExploreFavorite`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/active/favorites\")\n            }\n        })\n\n    }\n\n    render(){\n        const exploreResults = this.state.exploreResults.map((place, i)=>{\n            const typeArray = this.state.types;\n            const exploreTypeArray = place.types;\n            let type;\n            for(let i =0; i < typeArray.length; i++){\n                for(let j = 0; j < exploreTypeArray.length; j++){\n                    if(typeArray[i].toLowerCase() === exploreTypeArray[j]){\n                        type = typeArray[i]\n                    }\n                }\n            }\n            \n            if(type === undefined){\n                type = \"Outdoors\"\n            }\n            \n            \n            return (\n                <div key={i} className=\"placeCard\">\n                    <div className=\"cardLeft\">\n                        <h4>{place.name}</h4>\n                        <p>{type}</p>\n                    </div>\n                    <div className=\"buttonContainer\">\n                        <Button clicked={() => this.addExploreTodo(place.name, type, place.formatted_address)} className=\"todoButton\">Todo</Button>\n                        <Button clicked={() => this.addExploreFavorite(place.name, type, place.formatted_address)} className=\"faveButton\">Favorite</Button>\n                    </div> \n                </div>\n                )\n            })\n        return (\n            <div className=\"Explore\">\n                <h2>Explore the world around you!</h2>\n                <div className=\"exploreBody\">\n                    <div className=\"exploreLeft\">\n                        <ExploreForm\n                        searchPlaceholder=\"What would you like to do?\"\n                        locationPlaceholder=\"Enter city and state\"\n                        exploreRequest={this.exploreRequest}\n                        />\n                    </div>\n                    <div className=\"exploreRight\">\n                        <PlaceCards cards={exploreResults} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(ActiveExplore);","import React, { Component } from 'react';\nimport {Route } from \"react-router-dom\";\n\nimport CategoryHomeLayout from '../CategoryHomeLayout';\nimport ActiveTodo from './todo/ActiveTodo';\nimport ActiveFavorites from './favorites/ActiveFavorites';\nimport ActiveReviews from './reviews/ActiveReviews';\nimport EditForm from '../../Forms/EditForm';\nimport FaveReviewForm from '../../Forms/FaveReviewForm'\n\nimport \"../categoryHome.css\";\nimport ActiveExplore from './explore/ActiveExplore';\n\n\nclass Active extends Component {\n\n    render() {\n        return (\n            <CategoryHomeLayout>\n                <Route exact path=\"/userHome/active\" component={ActiveExplore} />\n                <Route exact path=\"/userHome/active/todo\" component={ActiveTodo} />\n                <Route exact path=\"/userHome/active/favorites\" component={ActiveFavorites} />\n                <Route exact path=\"/userHome/active/reviews\" component={ActiveReviews} />\n                <Route exact path=\"/userHome/:category/edit/:section/:place\" component={EditForm} />\n                <Route exact path=\"/userHome/:category/reviews/:section/:place\" component={FaveReviewForm} />\n            </CategoryHomeLayout>\n        )\n    }\n}\n\n\nexport default Active;\n\n","import React, { Component } from 'react';\nimport Button from '../../components/utility/button/Button'\nimport './AddEventForm.css'\n\n\nclass AddEventForm extends Component {\n    constructor(){\n        super()\n        this.state = {\n            events: '',\n            type: '',\n            date:'',\n            readabledate:'',\n            text: '',\n            filter: '',\n           \n        }\n    }\n\n    addNewEvent = (event) => {\n        event.preventDefault(event)\n        this.props.addNewEvent(this.state.events, this.state.type, this.state.date, this.state.readabledate, this.state.text)\n        document.getElementById('NewEventTypeDropdown').value = this.props.defaultType;\n        this.setState({\n            events: '',\n            type: '',\n            date:'',\n            readabledate:'',\n            text: '',\n           \n        })\n    }\n\n    changeEvent = (event) => {\n        this.setState({\n            events: event.target.value\n        })\n    }\n\n    changeType = (event) => {\n        this.setState({\n            type: event.target.value\n        })\n    }\n\n    changeDate = (event) => {\n        var date= event.target.value\n        \n        var currDate = (date).toString().slice(0,10)\n        var currYear = currDate.slice(0,4)\n        var currMonDay = (currDate.slice(6,10)).replace(/-0+/g, '-');\n        var publishDate = `${currMonDay}-${currYear}`\n\n        this.setState({\n            readabledate: publishDate,\n            date: date\n        })\n    }\n\n    changeText = (event) => {\n        this.setState({\n            text: event.target.value\n        })\n    }\n    \n    render(){\n        let minDate = new Date().toISOString().slice(0,10);\n        let maxDate = '2030-03-10'\n        return(\n            <div className=\"AddEventFormContainer\">\n                <form onSubmit={this.addNewEvent} className=\"AddEventForm\">\n                    <div className=\"addEventName\">\n                        <input onChange={this.changeEvent} type=\"text\" id=\"NewAddEvent\" placeholder={this.props.placeholder} value={this.state.events} required />\n                    </div>\n                    <div className=\"addEventTypeAndDate\">\n                        <select className=\"Dropdown Type\" id=\"NewEventTypeDropdown\" onChange={this.changeType} required>\n                            <option value=\"\">{this.props.defaultType}</option>\n                            {this.props.types}\n                        </select>\n                        <input onChange={this.changeDate} id=\"NewEventDateDropdown\" type=\"date\" min={minDate} max={maxDate} value={this.state.date} required />\n                    </div>\n                    <div className=\"AddNewEventNote\">\n                        <textarea onChange={this.changeText} id=\"AddNewEventText\" placeholder={this.props.textType} value={this.state.text}></textarea>\n                    </div>\n                    <Button type=\"submit\" className=\"submitButton\">Add</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddEventForm; \n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport AddEventForm from '../../../Forms/AddEventForm'\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards'\nimport Button from '../../../../components/utility/button/Button'\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../todo.css';\n\nclass EventTodo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Festival','Arts-Movies-Music', 'Sporting Events', 'Educational'],\n            readabledate:'',\n            date:'',\n            msg: \"\",\n            showAlert: false,\n            swTitle: \"Added to Faves!\"\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/getEventList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((eventListFromDB) => {\n            this.setState({\n                list: eventListFromDB\n            })\n        })\n    }\n\n    addNewEvent = (event, type, date, readabledate,  text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/addEvent`,\n            data: {\n                eventname: event,\n                type: type,\n                readabledate: readabledate,\n                date: date,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0) {\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            } else {\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n    addToFavorites = (eventname) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/events/addFave/${eventname}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse,\n                msg: \"Success! Added to favorites\",\n                swTitle: \"Added to Faves!\",\n                showAlert: true\n            })\n        })\n    }\n\n    removeEvent = (eventname) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/events/deleteEvent/${eventname}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/filter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/getEventList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((eventListFromDB) => {\n            this.setState({\n                list: eventListFromDB\n            })\n        })\n    }\n\n    render() {\n        let category = \"event\";\n        let section = \"todo\";\n\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var eventToDo = this.state.list.data.map((events, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                         <div className=\"cardLeft\">\n                            <h4>{events.eventname}</h4>\n                            <p>{events.readabledate}</p>\n                            <p>{events.note}</p>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button clicked={() => this.addToFavorites(events.eventname)} className=\"faveButton\">Fave</Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/editEvent/\" + section + \"/\" + events.eventname} >Edit</Link></Button>\n                            <Button clicked={() => this.removeEvent(events.eventname)} className=\"deleteButton\">Remove</Button>\n                        </div>\n                        \n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        })\n\n        const filterArray = this.state.types.map((filter, i)=>{\n            return(<option key={i} value={filter}>{filter}</option>)\n        })\n        \n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"ToDo\">\n                    <h2>Happenings around town...</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"todoBody\">\n                        <div className=\"todoLeft\">\n                            <AddEventForm\n                                addNewEvent={this.addNewEvent}\n                                placeholder=\"Add new event...\"\n                                textType=\"Add note...\"\n                                defaultType=\"Choose type!\" \n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"todoRight\">\n                            <Filter \n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={eventToDo} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EventTodo);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from 'react-router-dom';\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nimport AddEventForm from '../../../Forms/AddEventForm'\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from '../../../../components/utility/button/Button'\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../favorites.css';\n\nclass EventFavorites extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Festival','Arts-Movies-Music', 'Sporting Events', 'Educational'],\n            readabledate:'',\n            date:'',\n            msg: \"\",\n            showAlert: false,\n            swTitle: ''\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/getEventFaveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((eventListFromDB) => {\n                this.setState({\n                    list: eventListFromDB\n                })\n            })\n    }\n\n    addNewEvent = (event, type, date, readabledate, text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/addFaveInFavorites`,\n            data: {\n                eventname: event,\n                type: type,\n                readabledate:readabledate,\n                date: date,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0) {\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            } else {\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n\n    removeEvent = (eventname) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/events/deleteFaveEvent/${eventname}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/faveFilter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/getEventFaveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((eventListFromDB) => {\n            this.setState({\n                list: eventListFromDB\n            })\n        })\n    }\n  \n       \n    render() {\n        let category = \"event\";\n        let section = \"favorites\";\n        if (this.state.list.data !== undefined) {\n            \n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var favorites = this.state.list.data.map((event, i) => {               \n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{event.eventname}</h4>\n                            <p>{event.readabledate}</p>\n                            <p>{event.note}</p>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button className=\"reviewButton\"><Link to={\"/userHome/\"+ category + \"/eventReviews/\" + section + \"/\" + event.eventname} >Review</Link></Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/editEvent/\" + section + \"/\" + event.eventname} >Edit</Link></Button>\n                            <Button clicked={() => this.removeEvent(event.eventname)} className=\"deleteButton\">Remove</Button>\n                        </div>   \n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i) => {\n            return (<option key={i} value={type}>{type}</option>)\n        })\n        const filterArray = this.state.types.map((filter, i)=>{\n            return(<option key={i} value={filter}>{filter}</option>)\n        })\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"Favorites\">\n                    <h2>Favorite events!</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"faveBody\">\n                        <div className=\"faveLeft\">\n                            <AddEventForm\n                                addNewEvent={this.addNewEvent}\n                                placeholder=\"Add new...\"\n                                textType=\"Add note...\"\n                                defaultType=\"Choose type!\"\n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"faveRight\">\n                            <Filter \n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={favorites}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EventFavorites);\n","import React, {Component} from \"react\";\nimport Button from \"../../components/utility/button/Button\";\nimport \"./AddEventReviewForm.css\"\n\nclass AddEventReviewForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            events: \"\",\n            type:'',\n            review: \"\",\n            date:'',\n            readabledate:'',\n            stars: \"\"\n        }\n    }\n\n    addNewReview = (event)=>{\n        event.preventDefault();\n        this.props.addReview(this.state.events, this.state.type, this.state.review, this.state.date, this.state.readabledate, this.state.stars);\n        document.getElementsByClassName('type').value = this.props.defaultType;\n        document.getElementsByClassName(\"starDropdown\").value = this.props.defaultStars;\n        this.setState({\n            events: \"\",\n            type:'',\n            review: \"\",\n            date:'',\n            readabledate:'',\n            stars: \"\"\n        })\n    }\n\n    changePlace = (event)=>{\n        this.setState({\n            events : event.target.value\n        })\n    }\n\n    changeType = (event)=>{\n        this.setState({\n           type : event.target.value \n        })\n    }\n\n    changeDate = (event) => {\n        var date= event.target.value\n        var currDate = (date).toString().slice(0,10)\n        var currYear = currDate.slice(0,4)\n        var currMonDay = (currDate.slice(6,10)).replace(/-0+/g, '-');\n        var publishDate = `${currMonDay}-${currYear}`\n\n        this.setState({\n            readabledate: publishDate,\n            date: date\n        })\n        \n    }\n\n    changeStars = (event)=>{\n        this.setState({\n           stars : event.target.value \n        })\n    }\n\n    changeReview = (event)=>{\n        this.setState({\n            review : event.target.value\n        })\n    }\n    \n    render(){\n        let minDate = new Date().toISOString().slice(0,10);\n        let maxDate = '2030-03-10'\n        return(\n            <div className=\"AddEventReviewForm\">\n                <form onSubmit={this.addNewReview} className=\"eventReviewForm\">\n                <div className=\"eventInput\">\n                    <input type=\"text\" placeholder=\"Enter your place to review here!\" value={this.state.place} id=\"newEvent\" onChange={this.changePlace} required/>\n                </div>\n                <div className=\"typeStarDateInput\">\n                    <div className=\"eventStarTypeDropdowns\">\n                        <select className=\"type\" id=\"eventTypeDropdown\" onChange={this.changeType} value={this.state.type} required>\n                            <option value=\"\">{this.props.defaultType}</option>\n                            {this.props.types}\n                        </select>\n                        <select id=\"eventStarDropdown\" value={this.state.stars} onChange={this.changeStars} required> \n                            <option value=\"\">{this.props.defaultStars}</option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                        </select>\n                    </div>\n                    <input onChange={this.changeDate} id=\"eventDateDropdown\" type=\"date\" min={minDate} max={maxDate} value={this.state.date} required/>\n                </div>\n                <div className=\"addEventReview\">\n                    <textarea onChange={this.changeReview} id=\"newEventReview\" placeholder={this.props.placeholder} value={this.state.review} required></textarea>\n                        <Button type=\"submit\" className=\"submitButton\">Add Review</Button>\n                </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddEventReviewForm;","import React, { Component } from 'react';\nimport axios from \"axios\";\n\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport AddEventReviewForm from '../../../Forms/AddEventReviewForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from \"../../../../components/utility/button/Button\";\nimport '../../reviews.css';\n\nclass EventReviews extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list : [],\n            types: ['Festival','Arts-Movies-Music', 'Sporting Events', 'Educational'],\n            date:\"\",\n            readabledate:'',\n            stars:'',\n            msg : \"\",\n            showAlert: false,\n        }\n    }\n\n    componentDidMount(){\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/events/getEventReviews`,\n            data : {\n                email : this.props.login.email\n            }\n        }).then((reviewListFromDB)=>{\n            this.setState(({\n                list : reviewListFromDB\n            }))\n        })\n    }\n\n\n    addReview = (event, type, review, date, readabledate, stars) =>{\n\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/events/addEventReview/${event}`,\n            data : {\n                email : this.props.login.email,\n                event,\n                type,\n                review,\n                date,\n                readabledate,\n                stars\n            }\n        }).then((responseFromDB)=>{\n            this.setState({\n                list : responseFromDB,\n                msg : `Congrats! You've added a review for ${event}!`,\n                showAlert: true,\n            })\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    removeReview = (event)=>{\n        axios({\n            method : \"POST\",\n            url: `${window.apiHost}/events/deleteEventReview/${event}`,\n            data :{\n                email : this.props.login.email\n            }\n        }).then((backEndResponse)=>{\n            this.setState({\n                list : backEndResponse\n            })\n        })\n    }\n\n    changeDate = (event) => {\n        var date= event.target.value\n        var currDate = (date).toString().slice(0,10)\n        var currYear = currDate.slice(0,4)\n        var currMonDay = (currDate.slice(6,10)).replace(/-0+/g, '-');\n        var publishDate = `${currMonDay}-${currYear}`\n\n        this.setState({\n            readabledate: publishDate,\n            date: date\n        })\n    }\n\n\n    render() {\n        let category = \"event\";\n        let section = \"reviews\";\n        if (this.state.list.data !== undefined) {\n            var EventReviews = this.state.list.data.map((review, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{review.eventname} - {review.stars} Stars </h4>\n                            <p>{review.readabledate}</p>\n                            <p>{review.review}</p>\n                        </div>\n\n                        <div className=\"cardRight\">\n                            <div className=\"buttonContainer\">\n                                <Button className=\"editButton\"><Link to={\"/userHome/\"+ category + \"/edit/\" + section + \"/\" + review.eventname} >Edit</Link></Button>\n                                <Button clicked={() => this.removeReview(review.eventname)} className=\"deleteButton\">Remove</Button>\n                            </div>\n                        </div>  \n\n                    </div>\n                )\n            })\n        } \n        \n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        });\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"Reviews\">\n                    <h2>Reviews</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title=\"Review Added\"\n                        text={this.state.msg}\n                        confirmBtnBsStyle=\"danger\"\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"reviewBody\">\n                        <div className=\"reviewLeft\">\n                            <AddEventReviewForm\n                                placeholder=\"Add your event review here!\"\n                                defaultType= \"Choose type!\"\n                                defaultStars=\"How many stars?\"\n                                types={typeArray}\n                                addReview={this.addReview}\n                            />\n                        </div>\n                        <div className=\"reviewRight\">\n                            <PlaceCards cards={EventReviews}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps,null)(EventReviews);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport Button from '../../components/utility/button/Button'\nimport {Redirect} from \"react-router-dom\";\nimport './EventFaveReviewForm.css'\n\n\nclass EventFaveReviewForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            place:'',\n            category:'',\n            review:'',\n            type: '',\n            stars: '',\n            readabledate:'',\n            redirect : false\n            // date: '', we may need another component just for events, \n            // unless we can figure out how to conditionally render a date field on only certain pages\n        }\n    }\n\n    componentDidMount() {\n        const placename = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n    \n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/${section}/getFaveToReview/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                place : responseFromDB.data.eventname,\n                type : responseFromDB.data.type,\n                readabledate: responseFromDB.data.readabledate,\n                category : category\n            })\n            \n        })\n    }\n\n    editPlace = (event)=>{\n        event.preventDefault();\n        const placename = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n        const updatedReview = this.state.review;\n        const updatedStars = this.state.stars;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/${section}/reviewFave/${placename}`,\n            data: {\n                email: this.props.login.email,\n                updatedReview,\n                updatedStars\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                stars:'',\n                review: \"\",\n                redirect: true,\n                category : category\n            })\n        })\n    }\n\n   \n    changePlace = (event) => {}\n\n    changeType = (event)=>{}\n\n    changeDate = (event)=>{}\n\n    changeReview = (event) => {\n        this.setState({\n            review: event.target.value\n        })\n    }\n\n    changeStars = (event) => {\n        this.setState({\n            stars: event.target.value\n        })\n    }\n\n\n    render() {\n        if(this.state.redirect === true){\n            const section = this.props.match.params.section;\n            // const category = this.props.match.params.category;\n            return(\n                <Redirect to={`/userHome/event/${section}`}/>\n            )\n        } else {\n            return (\n                <div className=\"EventFaveReviewFormContainer\">\n                    <form onSubmit={this.editPlace} className=\"EventFaveReviewForm\">\n                        <div className=\"addEventReviewNameTypeDate\">\n                            <input onChange={this.changePlace} type=\"text\" id=\"NewFaveReviewEvent\" value={this.state.place} required />\n                            <div className=\"NewFaveReviewEventTypeStars\">\n                                <select id=\"NewFaveReviewEventType\" onChange={this.changeType}>\n                                    <option defaultValue={this.state.type}>{this.state.type}</option>\n                                </select>\n                                <select id=\"NewFaveReviewEventStars\" value={this.state.stars} onChange={this.changeStars} required > \n                                    <option value=\"\">{this.props.defaultStars}</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                </select>\n                            </div>\n                    <input onChange={this.changeDate} type=\"text\" id=\"NewFaveReviewEventDate\" value={this.state.readabledate} required />\n                        </div>\n                        <div className=\"addNewEventReview\">\n                            <textarea onChange={this.changeReview} value={this.state.review} id=\"NewFaveReviewEventReview\"></textarea>\n                        </div>\n                        <Button type=\"submit\" className=\"submitButton\">Add</Button>\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EventFaveReviewForm);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport Button from '../../components/utility/button/Button'\nimport {Redirect} from \"react-router-dom\";\nimport './EditForm.css'\n\n\nclass EditForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            event: '',\n            category : \"\",\n            type: '',\n            text: '',\n            date:'',\n            readabledate:'',\n            eventTypes: ['Festival', 'Arts-Movies-Music', 'Sporting Events', 'Educational'],\n            redirect : false,\n            stars: \"\"\n            // date: '', we may need another component just for events, \n            // unless we can figure out how to conditionally render a date field on only certain pages\n        }\n    }\n\n    componentDidMount() {\n        const eventname = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n        // const eventname = this.props.match.params.\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/${section}/getEventToEdit/${eventname}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((responseFromDB) => {\n            let textFromDB = responseFromDB.data.note || responseFromDB.data.review\n            let eventFromDB = responseFromDB.data.eventname || responseFromDB.data.eventname\n            let convertedDate = responseFromDB.data.date.toString().slice(0,10)\n            let starsFromDB = responseFromDB.data.stars \n            this.setState({\n                event : eventFromDB,\n                category : category,\n                type : responseFromDB.data.type,\n                date: convertedDate,\n                text : textFromDB,\n                stars : starsFromDB\n            })\n        })\n    \n    }\n\n    editevent = (event)=>{\n        event.preventDefault();\n        const eventname = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const updatedEventName = this.state.event;\n        const updatedType = this.state.type;\n        const updatedDate = this.state.date;\n        const updatedReadableDate = this.state.readabledate\n        const updatedText = this.state.text;\n        const updatedStars = this.state.stars\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/${section}/editevent/${eventname}`,\n            data: {\n                email: this.props.login.email,\n                updatedEventName,\n                updatedType,\n                updatedDate,\n                updatedReadableDate,\n                updatedText,\n                updatedStars\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                event : \"\",\n                type : \"\",\n                date: '',\n                readabledate:'',\n                text : \"\",\n                redirect: true,\n                stars : \"\"\n            })\n        })\n    }\n\n   \n\n    changeevent = (event) => {\n        this.setState({\n            event: event.target.value\n        })\n    }\n\n    changeType = (event) => {\n        this.setState({\n            type: event.target.value\n        })\n    }\n\n    changeDate = (event) => {\n        var date= event.target.value\n        \n        var currDate = (date).toString().slice(0,10)\n        var currYear = currDate.slice(0,4)\n        var currMonDay = (currDate.slice(6,10)).replace(/-0+/g, '-');\n        var publishDate = `${currMonDay}-${currYear}`\n\n        this.setState({\n            readabledate: publishDate,\n            date: date\n        })\n    }\n\n    changeText = (event) => {\n        this.setState({\n            text: event.target.value\n        })\n    }\n\n    changeStars = (event) =>{\n        this.setState({\n            stars : event.target.value\n        })\n    }\n\n\n    render() {\n        let typeArray;\n  \n            typeArray = this.state.eventTypes.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n\n        let starDropdown;\n        if(this.props.match.params.section === \"reviews\"){\n            starDropdown = \n            <select id=\"EditReviewStars\" value={this.state.stars} onChange={this.changeStars} required > \n                <option value=\"\">{this.state.stars}</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n            </select>;\n        }\n        \n\n        if(this.state.redirect === true){\n            const section = this.props.match.params.section;\n                return <Redirect to={`/userHome/event/${section}`}/>\n        } else {\n            let minDate = new Date().toISOString().slice(0,10);\n            let maxDate = '2030-03-10'\n            return (\n                <div className=\"EditFormContainer\">\n                    <form onSubmit={this.editevent} className=\"editForm\">\n                    <h2>Make your edits below!</h2>\n                    <input onChange={this.changeevent} type=\"text\" id=\"editPlace\" defaultValue={this.state.event} />\n                        <div className=\"editNameAndType\">\n                            \n                            <select className=\"DropDownEdit Type\" id=\"DropDownEdit\" onChange={this.changeType}>\n                                <option defaultValue={this.state.type}>{this.state.type}</option>\n                                {typeArray}\n                            </select>\n                            <input onChange={this.changeDate} id=\"NewEventDateDropdown\" type=\"date\" min={minDate} max={maxDate} value={this.state.date}/>\n                        </div>\n                        {starDropdown}\n                        <div className=\"editNote\">\n                            <textarea onChange={this.changeText} value={this.state.text} id=\"editText\"></textarea>\n                        </div>\n                        <Button type=\"submit\" className=\"submitButton\">Update</Button>\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EditForm);\n","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport ExploreForm from \"../../../Forms/ExploreForm\";\nimport axios from \"axios\";\nimport config from \"../../../../config\";\nimport {Redirect} from 'react-router-dom';\nimport '../../Explore.css'\nimport Button from \"../../../../components/utility/button/Button\";\nimport PlaceCards from \"../../../../components/Lists/PlaceCards/PlaceCards\";\n\nclass EventExplore extends Component {\n    constructor(){\n        super()\n        this.state = {\n            exploreResults : [],\n            types: ['Festival','Arts-Movies-Music', 'Sporting Events', 'Educational'],\n        }\n    }\n\n\n    exploreRequest = (name,city)=>{\n        let cityCoordinates, searchLat, searchLon;\n        const locationComma = city.replace(/,/g,\"\");\n        const locationFinalFormat = locationComma.replace(/ /g,\"+\");\n        const addressToCoordinatesUrl=`https://maps.googleapis.com/maps/api/geocode/json?address=${locationFinalFormat}&key=${config.apiKey}`;\n        axios({\n            method : \"GET\",\n            url : addressToCoordinatesUrl\n        }).then((response)=>{\n            searchLat =  response.data.results[0].geometry.location.lat\n            searchLon =  response.data.results[0].geometry.location.lng;\n            cityCoordinates = {\n                lat : searchLat,\n                lng : searchLon\n            }\n\n            let request = {\n              query: `${name}`,\n              rankby : \"distance\",\n              location : cityCoordinates,\n              radius: 10000\n            };\n    \n            // USE WINDOW TO ACCESS GOOGLE \n          \n            let service = new window.google.maps.places.PlacesService(document.createElement('div'));\n            let searchResults = [];\n            service.textSearch(request, (results, status)=> {\n                let loopLength;\n                if (10 < results.length){\n                    loopLength = 10\n                } else {\n                    loopLength = results.length\n                }\n\n                for(let i = 0; i < loopLength; i++) {\n                    searchResults.push(results[i])\n                }\n                \n                this.setState({\n                    exploreResults : searchResults\n                })\n            });\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    addExploreTodo = (place, type, text) => {\n        //api call will go here with autocomplete to add name, location to DB\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/addExploreTodo`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/event/todo\")\n            }\n        })\n    }\n\n    addExploreFavorite = (place, type, text)=>{\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/addExploreFavorite`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/event/favorites\")\n            }\n        })\n\n    }\n\n    render(){\n        const exploreResults = this.state.exploreResults.map((place, i)=>{\n            const typeArray = this.state.types;\n            const exploreTypeArray = place.types;\n            let type;\n            for(let i =0; i < typeArray.length; i++){\n                for(let j = 0; j < exploreTypeArray.length; j++){\n                    if(typeArray[i].toLowerCase() === exploreTypeArray[j]){\n                        type = typeArray[i]\n                    }\n                }\n            }\n            \n            if(type === undefined){\n                type = \"Educational\"\n            }\n            \n            return (\n                <div key={i} className=\"placeCard\">\n                    <div className=\"cardLeft\">\n                        <h4>{place.name}</h4>\n                        <p>{type}</p>\n                    </div>\n                    <div className=\"buttonContainer\">\n                        <Button clicked={() => this.addExploreTodo(place.name, type, place.formatted_address)} className=\"todoButton\">Todo</Button>\n                        <Button clicked={() => this.addExploreFavorite(place.name, type, place.formatted_address)} className=\"faveButton\">Favorite</Button>\n                    </div> \n                </div>\n                )\n            })\n        if(this.props.login.length === 0){\n            return(\n            <Redirect to=\"/login\"/>\n            )\n        } else {\n            return (\n                <div className=\"Explore\">\n                    <h2>Explore local events</h2>\n                    <div className=\"exploreBody\">\n                        <div className=\"exploreLeft\">\n                            <ExploreForm\n                            searchPlaceholder=\"What events are you looking for?\"\n                            locationPlaceholder=\"Enter city and state\"\n                            exploreRequest={this.exploreRequest}\n                            />\n                        </div>\n                        <div className=\"exploreRight\">\n                            <PlaceCards cards={exploreResults} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EventExplore);","import React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\nimport CategoryHomeLayout from '../CategoryHomeLayout';\nimport EventTodo from './todo/EventTodo';\nimport EventFavorites from './favorites/EventFavorites';\nimport EventReviews from './reviews/EventReviews';\nimport FaveReviewForm from '../../Forms/FaveReviewForm';\nimport EventFaveReviewForm from '../../Forms/EventFaveReviewForm';\nimport EventEditForm from '../../Forms/EventEditForm'\nimport \"../categoryHome.css\";\nimport EventExplore from './explore/EventExplore';\n\n\nclass Event extends Component {\n\n    render() {\n        return (\n            <CategoryHomeLayout>\n                <Route exact path=\"/userHome/event\" component={EventExplore} />\n                <Route exact path=\"/userHome/event/todo\" component={EventTodo} />\n                <Route exact path=\"/userHome/event/favorites\" component={EventFavorites} />\n                <Route exact path=\"/userHome/event/reviews\" component={EventReviews} />\n                <Route exact path=\"/userHome/:category/reviews/:section/:place\" component={FaveReviewForm} />\n                <Route exact path=\"/userHome/:category/eventReviews/:section/:place\" component={EventFaveReviewForm} />\n                <Route exact path=\"/userHome/:category/edit/:section/:place\" component={EventEditForm}/>\n            </CategoryHomeLayout>\n        )\n    }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nimport Splash from \"../../components/splash/Splash\";\nimport Login from \"../users/login/Login\";\nimport Register from \"../users/register/Register\";\n\nimport Account from \"../users/account/Account\";\nimport Home from \"../home/Home\";\nimport Food from \"../pages/food/Food\";\nimport Culture from \"../pages/culture/Culture\";\nimport Active from \"../pages/active/Active\";\nimport Event from \"../pages/event/Event\";\n\n\n\nclass Protected extends Component {\n    render(){\n        const routeSplit = this.props.location.search.split(\"=\");\n        const route = routeSplit[1];\n        if(route){\n            return <Redirect to={route}/>\n        }\n        let pathArray = [\"/login\", \"/register\", \"/\"];\n        let currentPath = this.props.location.pathname;\n        let pathMatch = false;\n        for(let i =0; i < pathArray.length; i++){\n            if(pathArray[i] === currentPath){\n                pathMatch = true\n            }\n        }\n        if(pathMatch){\n            return(\n                <div>\n                    <Route exact path=\"/\" component={Splash}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                    <Route exact path=\"/register\" component={Register}/>\n                </div>\n            )\n        } else {\n            if(this.props.login.length !== 0){   \n                return(\n                    <div>\n                        <Route exact path=\"/account\" component={Account} />\n                        <Route exact path=\"/userHome\" component={Home}/>\n                        <Route path=\"/userHome/food\" component={Food} />\n                        <Route path=\"/userHome/culture\" component={Culture} />\n                        <Route path=\"/userHome/event\" component={Event} />\n                        <Route path=\"/userHome/active\" component={Active}/>\n                    </div>\n                )\n            } else {\n                return(\n                    <Redirect to=\"/\"/>\n                )\n            }\n        }\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        login : state.login,\n    }\n}\n\nexport default connect(mapStateToProps, null)(Protected);","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport './App.css';\nimport Layout from \"./components/layout/Layout\";\nimport Protected from './containers/Protected/Protected';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n         <Layout>\n           <Route path=\"/\" component={Protected}/>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","export default (state = [], action)=>{\n    if(action.type === \"LOGIN_ACTION\" || action.type === \"REG_ACTION\"){\n        return action.payload.data\n    } else if (action.type === \"LOGOUT_ACTION\"){\n        return []\n    } else {\n        return state\n    }\n}","import {combineReducers} from \"redux\";\nimport loginReducer from \"./loginReducer\";\nimport categoryReducer from \"./categoryReducer\";\n\n// import smaller reducers here\n\nconst rootReducer = combineReducers({\n    reg : loginReducer,\n    login : loginReducer,\n    category: categoryReducer,\n})\n\nexport default rootReducer;","export default (state = [], action) => {\n    if (action.type === \"CHANGE_CATEGORY\") {\n        return action.payload\n    } else {\n        return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Redux set up\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware} from \"redux\";\nimport reducers from \"./reducers/rootReducer.js\";\nimport reduxPromise from \"redux-promise\";\n\nconst middleware = applyMiddleware(reduxPromise);\nconst theStore = middleware(createStore);\nconst theStoreWithMiddlewareAndReducers = theStore(reducers)\n\n\nReactDOM.render(\n    <Provider store={theStoreWithMiddlewareAndReducers}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);"],"sourceRoot":""}