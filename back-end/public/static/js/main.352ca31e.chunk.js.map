{"version":3,"sources":["actions/logoutAction.js","actions/setCategory.js","containers/navBar/Nav.js","components/utility/footer/Footer.js","hoc/Aux.js","components/layout/Layout.js","components/splash/Carousel.js","components/splash/Splash.js","actions/loginAction.js","containers/users/login/Login.js","actions/regAction.js","containers/users/register/Register.js","containers/users/account/Account.js","containers/home/Home.js","components/utility/button/Button.js","containers/Forms/AddForm.js","components/Lists/PlaceCards/PlaceCards.js","components/utility/filterDropDown/Filter.js","containers/pages/food/todo/FoodTodo.js","containers/pages/food/favorites/FoodFavorites.js","containers/Forms/AddReviewForm.js","containers/pages/food/reviews/FoodReviews.js","containers/Forms/ExploreForm.js","config.js","containers/pages/food/explore/FoodExplore.js","containers/Forms/EditForm.js","containers/Forms/FaveReviewForm.js","containers/navBar/SideNav.js","containers/pages/CategoryHomeLayout.js","containers/pages/food/Food.js","containers/pages/culture/todo/CultureTodo.js","containers/pages/culture/favorites/CultureFavorites.js","containers/pages/culture/reviews/CultureReviews.js","containers/pages/culture/explore/CultureExplore.js","containers/pages/culture/Culture.js","containers/pages/active/todo/ActiveTodo.js","containers/pages/active/favorites/ActiveFavorites.js","containers/pages/active/reviews/ActiveReviews.js","containers/pages/active/explore/ActiveExplore.js","containers/pages/active/Active.js","containers/Forms/AddEventForm.js","containers/pages/event/todo/EventTodo.js","containers/pages/event/favorites/EventFavorites.js","containers/Forms/AddEventReviewForm.js","containers/pages/event/reviews/EventReviews.js","containers/Forms/EventFaveReviewForm.js","containers/Forms/EventEditForm.js","containers/pages/event/explore/EventExplore.js","containers/pages/event/Event.js","containers/Protected/Protected.js","App.js","reducers/loginReducer.js","reducers/rootReducer.js","reducers/categoryReducer.js","index.js"],"names":["logoutAction","type","setCategory","category","payload","Nav","navRightLoginToggle","event","cat","preventDefault","_this","props","document","querySelector","style","display","navRightLoggedInToggle","handleLogout","react_default","a","createElement","Redirect","to","navLeft","navRight","_this2","this","login","length","className","Link","src","alt","onClick","Component","connect","state","dispatcher","bindActionCreators","Footer","aux","children","Layout","Aux","containers_navBar_Nav","footer_Footer","Carousel","lib_default","Object","assign","accessibility","arrows","infinite","speed","slidesToShow","slidesToScroll","autoplay","Splash","splash_Carousel","loginAction","userData","axios","url","concat","window","apiHost","method","data","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inputEmail","setState","email","target","value","inputPassword","password","handleLogin","userEmail","userPassword","showAlert","msg","newProps","history","push","sweetalert_react_lib_default","show","title","text","onConfirm","onSubmit","onChange","id","placeholder","regAction","registerData","Register","inputTestPassword","testPassword","handleRegister","Account","alertTitle","then","Home","welcomeMessage","number","Math","floor","random","textDecoration","Button","clicked","AddForm","addNew","addNewPlace","place","getElementById","defaultType","changePlace","changeType","changeDate","date","changeText","filter","required","types","textType","utility_button_Button","PlaceCards","styles","console","log","cards","visibility","Filter","filterResults","viewAll","clearFilter","defaultValue","changeFilter","defaultFilter","filters","FoodTodo","placename","note","backEndResponse","swTitle","list","addToFavorites","removePlace","foodListFromDB","_this3","undefined","foodToDo","map","food","i","key","typeArray","filterArray","containers_Forms_AddForm","utility_filterDropDown_Filter","Lists_PlaceCards_PlaceCards","FoodFavorites","favorites","AddReviewForm","addNewReview","addReview","review","stars","getElementsByClassName","defaultStars","changeStars","changeReview","FoodReviews","responseFromDB","removeReview","reviewListFromDB","foodReviews","confirmBtnBsStyle","containers_Forms_AddReviewForm","ExploreForm","exploreSearch","exploreRequest","searchPlace","searchLocation","changeSearchPlace","changeSearchLocation","searchPlaceholder","locationPlaceholder","config","apiKey","FoodExplore","name","city","cityCoordinates","searchLat","searchLon","locationFinalFormat","replace","addressToCoordinatesUrl","response","results","geometry","location","lat","lng","request","query","rankby","radius","service","google","maps","places","PlacesService","searchResults","textSearch","status","loopLength","exploreResults","addExploreTodo","addExploreFavorite","exploreTypeArray","j","toLowerCase","formatted_address","containers_Forms_ExploreForm","EditForm","editPlace","match","params","section","updatedPlacename","updatedType","updatedText","updatedStars","redirect","foodTypes","activeTypes","cultureTypes","eventTypes","textFromDB","placeFromDB","eventname","starsFromDB","starDropdown","FaveReviewForm","updatedReview","SideNav","catHome","todoLink","faveLink","reviewsLink","CategoryHomeLayout","containers_navBar_SideNav","Food","pages_CategoryHomeLayout","Route","exact","path","component","CultureToDo","cultureListFromDB","backgroundColor","cultureToDo","culture","CultureFavorites","CultureReviews","cultureReviews","CultureExplore","Culture","CultureTodo","ActiveTodo","addNewActive","activity","removeActive","activeListFromDB","activeTodo","ActiveFavorites","ActiveReviews","activeReviews","ActiveExplore","Active","AddEventForm","addNewEvent","events","readabledate","changeEvent","currDate","toString","slice","currYear","currMonDay","publishDate","minDate","Date","toISOString","min","max","EventTodo","removeEvent","eventListFromDB","eventToDo","containers_Forms_AddEventForm","EventFavorites","AddEventReviewForm","EventReviews","containers_Forms_AddEventReviewForm","EventFaveReviewForm","editevent","updatedEventName","updatedDate","updatedReadableDate","changeevent","eventFromDB","convertedDate","EventExplore","Event","EventEditForm","Protected","pathArray","currentPath","pathname","pathMatch","App","BrowserRouter","layout_Layout","loginReducer","arguments","action","rootReducer","combineReducers","reg","theStoreWithMiddlewareAndReducers","applyMiddleware","reduxPromise","middleware","createStore","theStore","reducers","ReactDOM","render","es","store","src_App_0"],"mappings":"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","file":"static/js/main.352ca31e.chunk.js","sourcesContent":["export default () =>{\n    return{\n        type: \"LOGOUT_ACTION\"\n    }\n}","export default (category) => {\n    return {\n        type: \"CHANGE_CATEGORY\",\n        payload: category\n    }\n}","import React, {Component} from \"react\";\nimport \"./Nav.css\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport logoutAction from \"../../actions/logoutAction\"\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport setCategory from '../../actions/setCategory';\n\nclass Nav extends Component{\n    // need logic to see if logged in, change route on left to user home\n    // and on right, display categories and hamburger with profile/logout\n\n    navRightLoginToggle = (event, cat)=>{\n        event.preventDefault();\n        this.props.setCategory(cat)\n        if(document.querySelector(\".nav-right-dropdown\").style.display === \"none\"){\n            document.querySelector(\".nav-right-dropdown\").style.display = \"inline\";\n        } else {\n            document.querySelector(\".nav-right-dropdown\").style.display = \"none\";\n        }\n    }\n\n    navRightLoggedInToggle = (event, cat)=>{\n        event.preventDefault();\n        this.props.setCategory(cat)\n        if(document.querySelector(\".nav-right-dropdown-logged-in\").style.display === \"none\"){\n            document.querySelector(\".nav-right-dropdown-logged-in\").style.display = \"inline\";\n        } else {\n            document.querySelector(\".nav-right-dropdown-logged-in\").style.display = \"none\";\n        }\n    }\n\n    handleLogout = (event)=>{\n        event.preventDefault();\n        this.props.logoutAction();\n        if(document.querySelector(\".nav-right-dropdown-logged-in\").style.display === \"none\"){\n            document.querySelector(\".nav-right-dropdown-logged-in\").style.display = \"inline\";\n        } else {\n            document.querySelector(\".nav-right-dropdown-logged-in\").style.display = \"none\";\n        }\n        return(\n            <Redirect to=\"/\"/>\n        )\n    }\n    \n    render(){\n        let navLeft;\n        let navRight;\n        if(this.props.login.length === 0){\n            navLeft = <div className=\"logo\"><Link to=\"/\"><img className=\"logoImg\" src='../../../../images/logo/logoDarkGray.png' alt='logo'/></Link></div>;\n            navRight = <div className=\"nav-right-login\">\n                            <div className=\"nav-right-login-links\">\n                                <div className=\"login-link\"><Link to=\"/login\">Login</Link></div>\n                                <div className=\"register-link\"><Link to=\"/register\">Register</Link></div>\n                            </div>\n                            <div className=\"nav-toggle-icon-login\" onClick={(event)=>{this.navRightLoginToggle(event, 'none')}}>\n                                <i className=\"fas fa-bars\"></i>\n                            </div>\n                            <div className=\"nav-right-dropdown\">\n                                <div className=\"nav-right-dropdown-link\" onClick={(event)=>{this.navRightLoginToggle(event, 'none')}}><Link to=\"/login\">Login</Link></div>\n                                <div className=\"nav-right-dropdown-link\" onClick={(event)=>{this.navRightLoginToggle(event, 'none')}}><Link to=\"/register\">Register</Link></div>\n                            </div>\n                        </div>;\n            \n        } else {\n            navLeft = <div className=\"logo\"><Link to=\"/userHome\"><img className=\"logoImg\" src='../../../../images/logo/logoDarkGray.png' alt='logo'/></Link></div>;\n            navRight = <div className=\"nav-right\">\n                            <div className=\"nav-right-links\">\n                                <div className=\"category-link\"><Link onClick={()=>{this.props.setCategory('food')}} to=\"/userHome/food\">Food</Link></div>\n                                <div className=\"category-link\"><Link onClick={()=>{this.props.setCategory('active')}}  to=\"/userHome/active\">Active</Link></div>\n                                <div className=\"category-link\"><Link onClick={()=>{this.props.setCategory('culture')}}  to=\"/userHome/culture\">Culture</Link></div>\n                                <div className=\"category-link\"><Link onClick={()=>{this.props.setCategory('event')}}  to=\"/userHome/event\">Events</Link></div>\n                            </div>\n                            <div className=\"nav-toggle-icon\" onClick={(event)=>{this.navRightLoggedInToggle(event, 'none')}}>\n                                <i className=\"fas fa-bars\"></i>\n                            </div>\n                            <div className=\"nav-right-dropdown-logged-in\">\n                                <div className=\"nav-right-dropdown-link\" onClick={(event) => {this.navRightLoggedInToggle(event, 'none')}}><Link to=\"/account\">Account</Link></div>\n                                <div className=\"nav-right-dropdown-link nav-logout\" onClick={this.handleLogout}>Log Out</div>\n                                <div className=\"nav-right-dropdown-link nav-category\" onClick={(event)=>{this.navRightLoggedInToggle(event, 'food')}}><Link to=\"/userHome/food\">Food</Link></div>\n                                <div className=\"nav-right-dropdown-link nav-category\" onClick={(event)=>{this.navRightLoggedInToggle(event, 'active')}}><Link to=\"/userHome/active\">Active</Link></div>\n                                <div className=\"nav-right-dropdown-link nav-category\" onClick={(event)=>{this.navRightLoggedInToggle(event, 'culture')}}><Link to=\"/userHome/culture\">Culture</Link></div>\n                                <div className=\"nav-right-dropdown-link nav-category\" onClick={(event)=>{this.navRightLoggedInToggle(event, 'event')}}><Link to=\"/userHome/event\">Events</Link></div>\n                            </div>\n                        </div>;\n        }\n        return(\n            <div className=\"nav\">\n                {navLeft}\n                {navRight}\n            </div>\n        )\n    }\n}\n\n// mapstate to props to find out login status\n\nfunction mapStateToProps(state){\n    return{\n        login : state.login,\n    }\n}\n\nfunction mapDispatchToProps(dispatcher){\n    return bindActionCreators({\n        logoutAction : logoutAction,\n        setCategory : setCategory\n    }, dispatcher)\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Nav);","import React from \"react\";\nimport \"./Footer.css\"\n\nfunction Footer(props){\n    return(\n        <div className=\"footer\">© Katie Duane, Greg Roques, Sean McQuaid</div>\n    )\n}\n\nexport default Footer;","const aux = (props) => (props.children);\n\nexport default aux;","import React from \"react\";\nimport \"./Layout.css\";\nimport Nav from \"../../containers/navBar/Nav\";\nimport Footer from \"../utility/footer/Footer\";\nimport Aux from \"../../hoc/Aux\";\n\nfunction Layout(props){\n    return(\n        <Aux>\n            <Nav/>\n            <div className=\"content-margin\">\n                {props.children}\n            </div>\n            <Footer/>\n        </Aux>\n    )\n}\n\nexport default Layout;","import React from 'react'\nimport './Splash.css'\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction Carousel(props){\n    const settings = {\n        accessibility: false,\n        arrows:false,\n        infinite: true,\n        speed: 400,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: true,\n    }\n\n    return(\n        <div className=\"carouselWrapper\">\n            <div className=\"carouselText\">\n                <img className=\"mainLogo\" src='../../../images/logo/logoOutline.png' alt=\"logo\" />\n                {/* <h1>sift</h1> */}\n            </div>\n            <Slider {...settings} className=\"carouselImageRow\" >\n                    <div className=\"slick-image\">\n                        <img src=\"/images/carousel/1.jpg\" alt=\"carouselImage\"/>\n                    </div>\n                    <div className=\"slick-image\">\n                        <img src=\"/images/carousel/2.jpg\" alt=\"carouselImage\"/>\n                    </div>\n                    <div className=\"slick-image\">\n                        <img src=\"/images/carousel/3.jpg\" alt=\"carouselImage\"/>\n                    </div>\n                    <div className=\"slick-image\">\n                        <img src=\"/images/carousel/4.jpg\" alt=\"carouselImage\"/>\n                    </div>\n                    <div className=\"slick-image\">\n                        <img src=\"/images/carousel/5.jpg\" alt=\"carouselImage\"/>\n                    </div>\n                    <div className=\"slick-image\">\n                        <img src=\"/images/carousel/6.jpg\" alt=\"carouselImage\"/>\n                    </div>\n            </Slider>\n        </div>\n      \n    )\n}\n\nexport default Carousel;","import React from 'react';\nimport './Splash.css'\nimport Carousel from './Carousel';\nimport {Link} from 'react-router-dom';\n\nfunction Splash(props){\n\n    return(\n        <div>\n            <div>\n                <Carousel/>\n            </div>\n            <div className=\"splashTextContent\">\n                <h1>What Is Sift?</h1>\n                <p>Sift is an application that allows users to create lists \n                    of places they'd like to visit or activities they'd like to try.\n                    Our goal is to simplify and streamline all of the ways in which \n                    you can explore the world around you.\n                </p>\n                <h1>How Does It Work?</h1>\n                <div className=\"boxContainer\">\n                    <div className=\"singleBoxContainer\">\n                        <div className=\"box1\"></div>\n                        <p>Choose an activity</p>\n                    </div>\n                    <div className=\"singleBoxContainer\">\n                        <div className=\"box2\"></div>\n                        <p>Search nearby options</p>\n                    </div>\n                    <div className=\"singleBoxContainer\">\n                        <div className=\"box3\"></div>\n                        <p>Review your favorites</p>\n                    </div>\n                    \n                </div>\n                <h1>Intereste<span className=\"questionMark\">d?</span></h1>\n                <p><Link to=\"../../register\">Register</Link> today and start planning your next adventure.</p>\n            </div>\n        </div>\n    )\n}\nexport default Splash;","import axios from \"axios\";\n\nexport default (userData) =>{\n    const axiosPromise = axios({\n        url : `${window.apiHost}/users/login`,\n        method : \"POST\",\n        data : userData\n    })\n    return{\n        type: \"LOGIN_ACTION\",\n        payload : axiosPromise\n    }\n}","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport \"./Login.css\";\nimport loginAction from \"../../../actions/loginAction\"\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nclass Login extends Component {\n    constructor(){\n        super()\n        this.state = {\n            showAlert : false,\n            msg : \"\",\n            email : \"\",\n            password : \"\"\n        }\n    }\n\n    componentWillReceiveProps(newProps){\n        if(newProps.login.msg === \"badUser\"){\n            this.setState({\n                msg : \"Incorrect email, please try again!\",\n                showAlert: true\n            })\n        } else if(newProps.login.msg === \"badPassword\"){\n            this.setState({\n                msg : \"Incorrect password, please try again!\",\n                showAlert : true\n            })\n        } else if (newProps.login.msg === \"loginSuccess\"){\n            this.props.history.push('/userHome');\n        }\n    }\n\n    inputEmail = (event) =>{\n        this.setState({\n            email : event.target.value\n        })\n    }\n\n    inputPassword = (event) =>{\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    handleLogin = (event) =>{\n        const userEmail = this.state.email;\n        const userPassword= this.state.password;\n        event.preventDefault();\n        this.props.loginAction({\n            userEmail,\n            userPassword\n        })\n    }\n    \n    \n    render(){\n        return(\n            <div className=\"login\">\n                <div className=\"login-header-image\">\n                    <img className=\"header-image\" src=\"../../../../images/headerImages/8.jpeg\" alt=\"loginImage\"/>\n                </div>\n                <div className=\"login-title\">\n                    <h1 className=\"title\">Login</h1>\n                    <p className=\"instructions\">Please enter your email and password</p>\n                </div>\n                <SweetAlert\n                        show={this.state.showAlert}\n                        title=\"Whoopsie Daisies\"\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                />\n                <div className=\"login-box\">\n                    <form onSubmit={this.handleLogin} className=\"login-form\">\n                        <input onChange={this.inputEmail} id=\"email-input\" type=\"email\" placeholder=\"Email\"/>\n                        <input onChange={this.inputPassword} id=\"password-input\" type=\"password\" placeholder=\"Password\"/>\n                        <button id=\"login-button\" type=\"submit\">Login</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        login: state.login\n    }\n}\n\n\nfunction mapDispatchToProps(dispatcher){\n    return bindActionCreators({\n        loginAction : loginAction\n    }, dispatcher)\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","import axios from \"axios\";\n\nexport default (registerData) =>{\n    const axiosPromise = axios({\n        url : `${window.apiHost}/users/register`,\n        method : \"POST\",\n        data : registerData\n    })\n    return{\n        type: \"REG_ACTION\",\n        payload : axiosPromise\n    }\n}","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport \"./Register.css\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport regAction from \"../../../actions/regAction\"\n\nclass Register extends Component {\n    constructor(){\n        super()\n        this.state = {\n            showAlert : false,\n            msg : \"\",\n            email : \"\",\n            password : \"\",\n            testPassword : \"\"\n        }\n    }\n\n    componentWillReceiveProps(newProps){\n        if(newProps.login.msg === \"userAdded\"){\n            this.props.history.push('/userHome');\n        } else if(newProps.login.msg === \"userExists\"){\n            this.setState({\n                msg : \"This user already exists, please try again!\",\n                showAlert: true\n            })\n        }\n    }\n\n    inputEmail = (event) =>{\n        this.setState({\n            email : event.target.value\n        })\n    }\n\n    inputPassword = (event) =>{\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    inputTestPassword = (event) =>{\n        this.setState({\n            testPassword : event.target.value\n        })\n    }\n\n    handleRegister = (event)=>{\n        const userEmail = this.state.email;\n        const userPassword= this.state.password;\n        const testPassword = this.state.testPassword;\n        event.preventDefault();\n        if(userPassword !== testPassword){\n            this.setState({\n                msg : \"Your passwords don't match, please try again\",\n                showAlert: true\n            })\n        } else {\n            this.props.regAction({\n                userEmail,\n                userPassword\n            })\n        }\n    }\n\n\n    render(){\n        return(\n            <div className=\"register\">\n                <div className=\"register-header-image\">\n                    <img className=\"header-image\" src=\"../../../../images/headerImages/15.jpeg\" alt=\"registerImage\"/>\n                </div>\n                <div className=\"register-title\">\n                    <h1 className=\"title\">Register</h1>\n                    <p className=\"instructions\">Your password must be 6 characters with at least one number!</p>\n                </div>\n                <SweetAlert\n                    show={this.state.showAlert}\n                    title=\"Whoopsie Daisies\"\n                    text={this.state.msg}\n                    onConfirm={() => this.setState({ showAlert: false })}\n                />\n                <div className=\"register-box\">\n                    <form onSubmit={this.handleRegister} className=\"register-form\">\n                        <input onChange={this.inputEmail} id=\"email-input\" type=\"email\" placeholder=\"Email\"/>\n                        <input onChange={this.inputPassword} id=\"password-input\" type=\"password\" placeholder=\"Password\"/>\n                        <input onChange={this.inputTestPassword} id=\"password-input2\" type=\"password\" placeholder=\"Re-type password\"/>\n                        <button id=\"register-button\" type=\"submit\">Register</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        login : state.login\n    }\n}\n\nfunction mapDispatchToProps(dispatcher){\n    return bindActionCreators({\n        regAction : regAction\n    },dispatcher)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from 'axios';\nimport \"./Account.css\";\n\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\n\nclass Account extends Component {\n    constructor(){\n        super()\n        this.state = {\n            showAlert : false,\n            msg : \"\",\n            alertTitle: \"\",\n            email:'',\n            password : \"\",\n            testPassword : \"\"\n        }\n    }\n\n\n    inputPassword = (event) =>{\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    inputTestPassword = (event) =>{\n        this.setState({\n            testPassword : event.target.value\n        })\n    }\n\n    handleRegister = (event)=>{\n        const userPassword= this.state.password;\n        const testPassword = this.state.testPassword;\n        event.preventDefault();\n        if(userPassword !== testPassword){\n            this.setState({\n                alertTitle: \"Whoopsie Daisies\",\n                msg : \"Your passwords don't match, please try again\",\n                showAlert: true\n            })\n        } else {\n                event.preventDefault();\n                axios({\n                    method: 'POST',\n                    url: `${window.apiHost}/users/account`,\n                    data: {\n                        email: this.props.login.email,\n                        password:this.state.password\n                    }\n                }).then(() => {\n                    this.setState({\n                        msg : \"Password changed\",\n                        alertTitle: \"Hurray!\",\n                        showAlert: true\n                    })\n                })\n        }\n    }\n\n\n    render(){\n        return(\n            <div className=\"register\">\n                <div className=\"register-header-image\">\n                    <img className=\"header-image\" src=\"../../../../images/headerImages/1.jpeg\" alt=\"registerImage\"/>\n                </div>\n                <div className=\"register-title\">\n                    <h1 className=\"title\">Account</h1>\n                    <p className=\"instructions\">Reset password must be 6 characters with at least one number!</p>\n                </div>\n                <SweetAlert\n                    show={this.state.showAlert}\n                    title={this.state.alertTitle}\n                    text={this.state.msg}\n                    onConfirm={() => this.setState({ showAlert: false })}\n                />\n                <div className=\"register-box\">\n                    <form onSubmit={this.handleRegister} className=\"register-form\">\n                        <input onChange={this.inputPassword} id=\"password-input\" type=\"password\" placeholder=\"Password\"/>\n                        <input onChange={this.inputTestPassword} id=\"password-input2\" type=\"password\" placeholder=\"Re-type password\"/>\n                        <button id=\"register-button\" type=\"submit\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        login : state.login\n    }\n}\n\n\nexport default connect(mapStateToProps, null)(Account);","import React, {Component} from 'react';\nimport './Home.css'\nimport {Link, Redirect} from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport setCategory from '../../actions/setCategory'\n\n\nclass Home extends Component{\n\n\n    setCategory = (event, cat) => {\n        this.props.setCategory(cat)\n    }\n\n    render(){\n    \n        const number = (Math.floor(Math.random() * 5) + 1)\n        const chooseMessage = number\n        let welcomeMessage\n\n        if (chooseMessage === 1){\n            welcomeMessage = \"Let's Get It!\"\n        } else if (chooseMessage === 2){\n            welcomeMessage = \"Welcome Back!\"\n        } else if (chooseMessage === 3){\n            welcomeMessage = \"Carpé Diem!\"\n        } else if (chooseMessage === 4){\n            welcomeMessage = \"Hello hello!\"\n        } else {\n            welcomeMessage = \"Nice to See You!\"\n        } \n        \n        \n\n        if(this.props.login.length === 0){\n            return(\n            <Redirect to=\"/login\"/>\n            )\n        } else {\n            return(\n                <div>\n                    <div className=\"welcomeTextContent\">\n                        <h1 className=\"welcomeMessage\">{welcomeMessage}</h1>\n                    </div>\n                    <div className=\"categoryCircleContainer\">\n                            <div className=\"circleSpacing\">\n                            <Link style={{ textDecoration: 'none' }} onClick={(event)=>{this.setCategory(event,'food')}} to=\"/userHome/food\"><div className=\"food\"><p>Food</p></div></Link>\n                            <Link style={{ textDecoration: 'none' }} onClick={(event)=>{this.setCategory(event, 'active')}} to=\"/userHome/active\"><div className=\"active\"><p>Active</p></div></Link>\n                            </div>\n                            <div>\n                            <Link style={{ textDecoration: 'none' }} onClick={(event)=>{this.setCategory(event,'culture')}} to=\"/userHome/culture\"><div className=\"culture\"><p>Culture</p></div></Link>\n                            <Link style={{ textDecoration: 'none' }} onClick={(event)=>{this.setCategory(event,'event')}} to=\"/userHome/event\"><div className=\"events\"><p>Events</p></div></Link>\n                            </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n    }\n\nfunction mapDispatchToProps(dispatcher){\n    return bindActionCreators({\n        setCategory: setCategory\n    }, dispatcher)\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login,\n        category: state.category\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport './Button.css';\n\nconst Button = (props) => (\n    <button\n        className={props.className} id={props.id} type ={props.type} onClick={props.clicked}>{props.children}</button>\n)\n\nexport default Button;","import React, { Component } from 'react';\nimport Button from '../../components/utility/button/Button'\nimport './AddForm.css'\n\n\nclass AddForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            place: '',\n            type: '',\n            text: '',\n            filter: ''\n            // date: '', we may need another component just for events, \n            // unless we can figure out how to conditionally render a date field on only certain pages\n        }\n    }\n\n    addNew = (event) => {\n        event.preventDefault(event)\n        this.props.addNewPlace(this.state.place, this.state.type, this.state.text)\n        document.getElementById('Dropdown').value = this.props.defaultType;\n        this.setState({\n            place: '',\n            type: '',\n            text: '',\n        })\n    }\n\n    changePlace = (event) => {\n        this.setState({\n            place: event.target.value\n        })\n    }\n\n    changeType = (event) => {\n        this.setState({\n            type: event.target.value\n        })\n    }\n\n    changeDate = (event) => {\n        this.setState({\n            date: event.target.value\n        })\n    }\n\n    changeText = (event) => {\n        this.setState({\n            text: event.target.value\n        })\n    }\n\n    render() {\n\n        return (\n            <div className=\"addFormContainer\">\n                <form onSubmit={this.addNew} className=\"addForm\">\n                    <div className=\"addNameAndType\">\n                        <input onChange={this.changePlace} type=\"text\" id=\"NewPlace\" placeholder={this.props.placeholder} value={this.state.place} required />\n                        <select className=\"Dropdown Type\" id=\"Dropdown\" onChange={this.changeType} required>\n                            <option value=\"\">{this.props.defaultType}</option>\n                            {this.props.types}\n                        </select>\n                    </div>\n                    <div className=\"addNote\">\n                        <textarea onChange={this.changeText} id=\"NewText\" placeholder={this.props.textType} value={this.state.text}></textarea>\n                    </div>\n                    <Button type=\"submit\" className=\"submitButton\">Add</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddForm;\n\n","import React, { Component } from 'react'\n\nclass PlaceCards extends Component {\n\n    render(){\n        let styles;\n        console.log(this.props.cards)\n        if (this.props.cards){\n            if(this.props.cards.length === 0){\n                styles = {visibility : \"hidden\"}\n            } else {\n                styles = {visibility : \"visible\"}\n            }\n        }\n        return (\n            <div className=\"placeCards\" style={styles}>\n                {this.props.cards}\n            </div>\n        )\n    } \n}\n\nexport default PlaceCards;","import React, { Component } from 'react';\nimport Button from '../button/Button';\nimport './Filter.css'\n\nclass Filter extends Component{\n    constructor(){\n        super()\n        this.state = {\n            filter: ''\n        }\n    }\n\n    filter = (event) => {\n        event.preventDefault(event)\n        this.props.filterResults(this.state.filter)\n    }\n\n    viewAll = (event) => {\n        event.preventDefault(event)\n        this.props.clearFilter()\n        document.getElementById('filterDropDown').value = this.props.defaultValue\n        this.setState({\n            filter: this.props.defaultValue\n        })\n    }\n\n    changeFilter = (event) => {\n        this.setState({\n            filter: event.target.value\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"filterBox\">\n                <form onSubmit={this.filter} className=\"filterForm\">\n                    <select className=\"filterDropDown\" id=\"filterDropDown\" onChange={this.changeFilter}>\n                        <option value={this.props.defaultValue}>{this.props.defaultFilter}</option>\n                        {this.props.filters}\n                    </select>\n                    <Button type=\"submit\" className=\"filterButton\">Filter</Button>\n                </form>\n                <form onSubmit={this.viewAll} className=\"clearFilterForm\">\n                    <Button type=\"submit\" className=\"filterButton\">Clear</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from '../../../../components/utility/button/Button';\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../todo.css';\n\nclass FoodTodo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Restaurant', 'Cafe', 'Bar', 'Diner'],\n            msg: \"\",\n            showAlert: false,\n            swTitle: \"Added to Faves!\"\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/getFoodList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((foodListFromDB) => {\n            this.setState({\n                list: foodListFromDB\n            })\n        })\n    }\n\n    addNewPlace = (place, type, text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/addFood`,\n            data: {\n                placename: place,\n                type: type,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0){\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            }else{\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n    addToFavorites = (placename) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/food/addFave/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse,\n                msg: \"Added to favorites!\",\n                swTitle: \"Yum!\",\n                showAlert: true\n            })\n        })\n    }\n\n    removePlace = (placename) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/food/deletePlace/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/filter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/getFoodList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((foodListFromDB) => {\n            this.setState({\n                list: foodListFromDB\n            })\n        })\n    }\n\n    render() {\n        let category = \"food\";\n        let section = \"todo\";\n\n        if (this.state.list.data !== undefined) {\n            var foodToDo = this.state.list.data.map((food, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{food.placename} : {food.type}</h4>\n                            <div>\n                                <p>{food.note}</p>\n                            </div>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button clicked={() => this.addToFavorites(food.placename)} className=\"faveButton\">Fave</Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\"+ category + \"/edit/\" + section + \"/\" + food.placename} >Edit</Link></Button>\n                            <Button clicked={() => this.removePlace(food.placename)} className=\"deleteButton\">Remove</Button>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        })\n        const filterArray = this.state.types.map((filter, i)=>{\n            return(<option key={i} value={filter}>{filter}</option>)\n        })\n        \n        if(this.props.login.length === 0){\n            return (\n                <Redirect to=\"/login\"/>\n            )\n        } else {\n            return (\n                <div className=\"ToDo\">\n                    <h2>Yummy treats!</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"todoBody\">\n                        <div className=\"todoLeft\">\n                            <AddForm\n                                title=\"Add to your list!\"\n                                addNewPlace={this.addNewPlace}\n                                placeholder=\"Add new place...\"\n                                defaultType=\"Choose type!\"\n                                textType=\"Add note...\"\n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"todoRight\">\n                            <Filter \n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={foodToDo}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        }\n    }\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(FoodTodo);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport {Link, Redirect} from 'react-router-dom';\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards'\nimport Button from '../../../../components/utility/button/Button'\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../favorites.css'\n\nclass FoodFavorites extends Component {\n        constructor() {\n            super()\n            this.state = {\n                list: [],\n                types: ['Restaurant','Cafe', 'Bar', 'Diner'],\n                msg: \"\",\n                showAlert: false,\n                swTitle: \"\"\n            }\n        }\n    \n        componentDidMount() {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/food/getFoodFaveList`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((foodListFromDB) => {\n                    this.setState({\n                        list: foodListFromDB\n                    })\n                })\n        }\n    \n        addNewPlace = (place, type, text) => {\n            //api call will go here with autocomplete to add name, location to DB\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/food/addFaveInFavorites`,\n                data: {\n                    placename: place,\n                    type: type,\n                    note: text,\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                if (backEndResponse.data.length === 0) {\n                    this.setState({\n                        showAlert: true,\n                        swTitle: \"Whoops!\",\n                        msg: \"This is already in one of your lists!\"\n                    })\n                } else {\n                    this.setState({\n                        list: backEndResponse,\n                    })\n                }\n            })\n        }\n    \n        removePlace = (placename) => {\n            axios({\n                method: \"POST\",\n                url: `${window.apiHost}/food/deleteFavePlace/${placename}`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                this.setState({\n                    list: backEndResponse\n                })\n            })\n        }\n\n        filterResults = (filter) => {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/food/faveFilter/${filter}`,\n                data: {\n                    type: filter,\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                this.setState({\n                    list: backEndResponse\n                })\n            })\n        }\n\n        clearFilter = () => {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/food/getFoodFaveList`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((foodListFromDB) => {\n                this.setState({\n                    list: foodListFromDB\n                })\n            })\n        }\n       \n        render() {\n            let category = \"food\";\n            let section = \"favorites\";\n            if (this.state.list.data !== undefined) {\n                var favorites = this.state.list.data.map((food, i) => {\n                    return (\n                        <div key={i} className=\"placeCard\">\n                            <div className=\"cardLeft\">\n                                <h4>{food.placename} : {food.type} </h4>\n                                <p>{food.note}</p>\n                            </div>\n                            <div className=\"buttonContainer\">\n                                <Button className=\"reviewButton\"><Link to={\"/userHome/\"+ category + \"/reviews/\" + section + \"/\" + food.placename} >Review</Link></Button>\n                                <Button className=\"editButton\"><Link to={\"/userHome/\"+ category + \"/edit/\" + section + \"/\" + food.placename} >Edit</Link></Button>\n                                <Button clicked={() => this.removePlace(food.placename)} className=\"deleteButton\">Remove</Button>\n                            </div> \n                        </div>\n                    )\n                })\n            }\n\n            const typeArray = this.state.types.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n            const filterArray = this.state.types.map((filter, i)=>{\n                return(<option key={i} value={filter}>{filter}</option>)\n            })\n\n            if(this.props.login.length === 0){\n                return(\n                <Redirect to=\"/login\"/>\n                )\n            } else {\n                return (\n                    <div className=\"Favorites\">\n                        <h2>Favorite treats</h2>\n                        <SweetAlert\n                            show={this.state.showAlert}\n                            title={this.state.swTitle}\n                            text={this.state.msg}\n                            onConfirm={() => this.setState({ showAlert: false })}\n                        />\n                        <div className=\"faveBody\">\n                            <div className=\"faveLeft\">\n                                <AddForm\n                                    title=\"Add a favorite!\"\n                                    addNewPlace={this.addNewPlace}\n                                    placeholder=\"Add new...\"\n                                    textType=\"Add note...\"\n                                    defaultType=\"Choose type!\"\n                                    types={typeArray}\n                                />\n                            </div>\n                            <div className=\"faveRight\">\n                                <Filter \n                                    defaultFilter=\"Filter by type\"\n                                    defaultValue={this.state.types[0]}\n                                    filters={filterArray}\n                                    filterResults={this.filterResults}\n                                    clearFilter={this.clearFilter}\n                                />\n                                <PlaceCards cards={favorites}/>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        }\n    }\n    \n    function mapStateToProps(state) {\n        return {\n            login: state.login\n        }\n    }\n    \n    export default connect(mapStateToProps, null)(FoodFavorites);","import React, {Component} from \"react\";\nimport Button from \"../../components/utility/button/Button\";\nimport \"./AddReviewForm.css\"\n\nclass AddReviewForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            place: \"\",\n            review: \"\",\n            type: \"\",\n            stars: \"\"\n        }\n    }\n\n    addNewReview = (event)=>{\n        event.preventDefault();\n        this.props.addReview(this.state.place,this.state.review, this.state.type, this.state.stars);\n        document.getElementsByClassName('type').value = this.props.defaultType;\n        document.getElementsByClassName(\"starDropdown\").value = this.props.defaultStars;\n        this.setState({\n            place: \"\",\n            review: \"\",\n            type: \"\",\n            stars: \"\"\n        })\n    }\n\n    changePlace = (event)=>{\n        this.setState({\n            place : event.target.value\n        })\n    }\n\n    changeType = (event)=>{\n        this.setState({\n           type : event.target.value \n        })\n    }\n\n\n    changeStars = (event)=>{\n        this.setState({\n           stars : event.target.value \n        })\n    }\n\n    changeReview = (event)=>{\n        this.setState({\n            review : event.target.value\n        })\n    }\n    \n    render(){\n        return(\n            <div className=\"AddReviewForm\">\n                <form onSubmit={this.addNewReview} className=\"reviewForm\">\n                {/* <h3>Add your review!</h3> */}\n                <div className=\"placeInput\">\n                    <input type=\"text\" placeholder=\"Enter your place to review here!\" value={this.state.place} id=\"newPlace\" onChange={this.changePlace} required/>\n                </div>\n                <div className=\"typeStarInput\">\n                <select className=\"type\" id=\"reviewDropdown\" onChange={this.changeType} value={this.state.type} required>\n                        <option value=\"\">{this.props.defaultType}</option>\n                        {this.props.types}\n                    </select>\n                    <select className=\"starDropDown\" id=\"starDropdown\" value={this.state.stars} onChange={this.changeStars} required> \n                        <option value=\"\">{this.props.defaultStars}</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                    </select>\n                </div>\n                <div className=\"addReview\">\n                    <textarea onChange={this.changeReview} id=\"newReview\" placeholder={this.props.placeholder} value={this.state.review} required></textarea>\n                        <Button type=\"submit\" className=\"submitButton\">Add Review</Button>\n                </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddReviewForm;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { connect } from \"react-redux\";\nimport {Link, Redirect} from \"react-router-dom\";\n\nimport AddReviewForm from '../../../Forms/AddReviewForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from \"../../../../components/utility/button/Button\";\nimport '../../reviews.css'\n\nclass FoodReviews extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list : [],\n            msg : \"\",\n            types : ['Restaurant', 'Cafe', 'Bar', 'Diner'],\n            showAlert: false,\n        }\n    }\n\n    componentDidMount(){\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/food/getFoodReviews`,\n            data : {\n                email : this.props.login.email\n            }\n        }).then((reviewListFromDB)=>{\n            this.setState(({\n                list : reviewListFromDB\n            }))\n        })\n    }\n\n    addReview = (place, review, type, stars) =>{\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/food/addFoodReview/${place}`,\n            data : {\n                email : this.props.login.email,\n                place,\n                review,\n                type,\n                stars\n            }\n        }).then((responseFromDB)=>{\n            this.setState({\n                list : responseFromDB,\n                msg : `Congrats! You've added a review for ${place}!`,\n                showAlert: true,\n            })\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    removeReview = (place)=>{\n        axios({\n            method : \"POST\",\n            url: `${window.apiHost}/food/deleteFoodReview/${place}`,\n            data :{\n                email : this.props.login.email\n            }\n        }).then((backEndResponse)=>{\n            this.setState({\n                list : backEndResponse\n            })\n        })\n    }\n\n    render() {\n        let category = \"food\";\n        let section = \"reviews\";\n        if (this.state.list.data !== undefined) {\n            var foodReviews = this.state.list.data.map((review, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{review.placename} - {review.stars} Stars</h4>\n                            <p>{review.review}</p>\n                        </div>\n                        <div className=\"cardRight\">\n                            <div className=\"buttonContainer\">\n                                <Button className=\"editButton\"><Link to={\"/userHome/\"+ category + \"/edit/\" + section + \"/\" + review.placename} >Edit</Link></Button>\n                                <Button clicked={() => this.removeReview(review.placename)} className=\"deleteButton\">Remove</Button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        });\n\n        if(this.props.login.length === 0){\n            return (\n                <Redirect to=\"/login\"/>\n            )\n        } else {\n            return (\n                <div className=\"Reviews\">\n                    <h2>Reviews</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title=\"Review Added\"\n                        text={this.state.msg}\n                        confirmBtnBsStyle=\"danger\"\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"reviewBody\">\n                        <div className=\"reviewLeft\">\n                            <AddReviewForm\n                                placeholder=\"Add your food review here!\"\n                                defaultType= \"Choose type!\"\n                                defaultStars = \"Stars\"\n                                types={typeArray}\n                                addReview={this.addReview}\n                            />\n                        </div>\n                        <div className=\"reviewRight\">\n                            <PlaceCards cards={foodReviews}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps,null)(FoodReviews);","import React,{Component} from \"react\";\nimport Button from \"../../components/utility/button/Button\";\nimport './ExploreForm.css'\n\nclass ExploreForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            searchPlace : \"\",\n            searchLocation : \"\",\n        }\n    }\n\n    exploreSearch = (event) => {\n        event.preventDefault(event)\n        this.props.exploreRequest(this.state.searchPlace, this.state.searchLocation)\n    }\n\n    changeSearchPlace = (event) => {\n        this.setState({\n            searchPlace: event.target.value\n        })\n    }\n\n    changeSearchLocation = (event) => {\n        this.setState({\n            searchLocation: event.target.value\n        })\n    }\n\n    render() {\n\n        return (\n            <div className=\"ExploreFormContainer\">\n                <form onSubmit={this.exploreSearch} className=\"ExploreForm\">\n                    <h3>Search!</h3>\n                    <div className=\"addNameAndType\">\n                        <input onChange={this.changeSearchPlace} type=\"text\" id=\"NewSearchPlace\" placeholder={this.props.searchPlaceholder} value={this.state.searchPlace} required />\n                        <input onChange={this.changeSearchLocation} type=\"text\" id=\"NewSearchLocation\" placeholder={this.props.locationPlaceholder} value={this.state.searchLocation} required />\n                    </div>\n                    \n                    <Button type=\"submit\" className=\"submitButton\">Search</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ExploreForm;","const config = {\n    apiKey : \"AIzaSyAGsCU-IKRrCvUGgKjpze44IVAbGZT0X2A\"\n}\n\nexport default config;","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport ExploreForm from \"../../../Forms/ExploreForm\";\nimport axios from \"axios\";\nimport config from \"../../../../config\";\nimport {Redirect} from 'react-router-dom';\nimport '../../Explore.css'\nimport Button from \"../../../../components/utility/button/Button\";\nimport PlaceCards from \"../../../../components/Lists/PlaceCards/PlaceCards\";\n\nclass FoodExplore extends Component {\n    constructor(){\n        super()\n        this.state = {\n            exploreResults : [],\n            types: ['Restaurant','Cafe', 'Bar', 'Diner'],\n        }\n    }\n\n\n    exploreRequest = (name,city)=>{\n        let cityCoordinates, searchLat, searchLon;\n        const locationComma = city.replace(/,/g,\"\");\n        const locationFinalFormat = locationComma.replace(/ /g,\"+\");\n        const addressToCoordinatesUrl=`https://maps.googleapis.com/maps/api/geocode/json?address=${locationFinalFormat}&key=${config.apiKey}`;\n        axios({\n            method : \"GET\",\n            url : addressToCoordinatesUrl\n        }).then((response)=>{\n            searchLat =  response.data.results[0].geometry.location.lat\n            searchLon =  response.data.results[0].geometry.location.lng;\n            cityCoordinates = {\n                lat : searchLat,\n                lng : searchLon\n            }\n\n            let request = {\n              query: `${name}`,\n              rankby : \"distance\",\n              location : cityCoordinates,\n              radius: 10000\n            };\n    \n            // USE WINDOW TO ACCESS GOOGLE \n          \n            let service = new window.google.maps.places.PlacesService(document.createElement('div'));\n            let searchResults = [];\n            service.textSearch(request, (results, status)=> {\n                let loopLength;\n                if (15 < results.length){\n                    loopLength = 15\n                } else {\n                    loopLength = results.length\n                }\n\n                for(let i = 0; i < loopLength; i++) {\n                    searchResults.push(results[i])\n                }\n                \n                this.setState({\n                    exploreResults : searchResults\n                })\n            });\n        })\n    }\n\n    addExploreTodo = (place, type, text) => {\n        //api call will go here with autocomplete to add name, location to DB\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/addExploreTodo`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/food/todo\")\n            }\n        })\n    }\n\n    addExploreFavorite = (place, type, text)=>{\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/food/addExploreFavorite`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/food/favorites\")\n            }\n        })\n\n    }\n    render(){\n       \n        const exploreResults = this.state.exploreResults.map((place, i)=>{\n            const typeArray = this.state.types;\n            const exploreTypeArray = place.types;\n            let type;\n            for(let i =0; i < typeArray.length; i++){\n                for(let j = 0; j < exploreTypeArray.length; j++){\n                    if(typeArray[i].toLowerCase() === exploreTypeArray[j]){\n                        type = typeArray[i]\n                    }\n                }\n            }\n            \n            if(type === undefined){\n                type = \"Restaurant\"\n            }\n            \n            return (\n                <div key={i} className=\"placeCard\">\n                    <div className=\"cardLeft\">\n                        <h4>{place.name}</h4>\n                        <p>{type}</p>\n                    </div>\n                    <div className=\"buttonContainer\">\n                        <Button clicked={() => this.addExploreTodo(place.name, type, place.formatted_address)} className=\"todoButton\">Todo</Button>\n                        <Button clicked={() => this.addExploreFavorite(place.name, type, place.formatted_address)} className=\"faveButton\">Favorite</Button>\n                    </div> \n                </div>\n                )\n            })\n\n            if(this.props.login.length === 0){\n                return(\n                <Redirect to=\"/login\"/>\n                )\n            } else {\n                return (\n                    <div className=\"Explore\">\n                    {\n                        \n                    }\n                        <h2>Explore your palette...</h2>\n                        <div className=\"exploreBody\">\n                            <div className=\"exploreLeft\">\n                                <ExploreForm\n                                searchPlaceholder=\"What would you like to eat?\"\n                                locationPlaceholder=\"Enter city and state\"\n                                exploreRequest={this.exploreRequest}\n                                />\n                            </div>\n                            <div className=\"exploreRight\">\n                                <PlaceCards cards={exploreResults} />\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(FoodExplore);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport Button from '../../components/utility/button/Button'\nimport {Redirect} from \"react-router-dom\";\nimport './EditForm.css'\n\n\nclass EditForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            place: '',\n            category : \"\",\n            type: '',\n            text: '',\n            foodTypes: ['Restaurant', 'Cafe', 'Bar', 'Diner'],\n            activeTypes: ['Outdoors', 'Fitness', 'Sports', 'Trips'],\n            cultureTypes: ['Music', 'Art', 'Theater', 'Festival'],\n            eventTypes: ['Festival', 'Arts-Movies-Music', 'Sporting Events', 'Educational'],\n            redirect : false,\n            stars: \"\"\n            // date: '', we may need another component just for events, \n            // unless we can figure out how to conditionally render a date field on only certain pages\n        }\n    }\n\n    componentDidMount() {\n        const placename = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n        console.log(category)\n        console.log(section)\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/${category}/${section}/getPlaceToEdit/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((responseFromDB) => {\n            let textFromDB = responseFromDB.data.note || responseFromDB.data.review\n            let placeFromDB = responseFromDB.data.placename || responseFromDB.data.eventname\n            let starsFromDB = responseFromDB.data.stars \n            this.setState({\n                place : placeFromDB,\n                category : category,\n                type : responseFromDB.data.type,\n                text : textFromDB,\n                stars: starsFromDB\n            })\n        })\n        console.log(this.state.stars)\n    }\n\n    editPlace = (event)=>{\n        event.preventDefault();\n        const placename = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n        const updatedPlacename = this.state.place;\n        const updatedType = this.state.type;\n        const updatedText = this.state.text;\n        const updatedStars = this.state.stars;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/${category}/${section}/editPlace/${placename}`,\n            data: {\n                email: this.props.login.email,\n                updatedPlacename,\n                updatedType,\n                updatedText,\n                updatedStars\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                place : \"\",\n                category : \"\",\n                type : \"\",\n                text : \"\",\n                redirect: true\n            })\n        })\n    }\n\n   \n\n    changePlace = (event) => {\n        this.setState({\n            place: event.target.value\n        })\n    }\n\n    changeType = (event) => {\n        this.setState({\n            type: event.target.value\n        })\n    }\n\n    changeDate = (event) => {\n        this.setState({\n            date: event.target.value\n        })\n    }\n\n    changeText = (event) => {\n        this.setState({\n            text: event.target.value\n        })\n    }\n\n    changeStars = (event) => {\n        this.setState({\n            stars : event.target.value\n        })\n    }\n\n\n    render() {\n        console.log(this.state.stars)\n        const category = this.props.match.params.category;\n        let typeArray;\n        if(category === \"food\"){\n            typeArray = this.state.foodTypes.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n        } else if(category === \"culture\"){\n            typeArray = this.state.cultureTypes.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n        } else if(category === \"active\"){\n            typeArray = this.state.activeTypes.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n        } else if (category === \"events\"){\n            typeArray = this.state.eventTypes.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n        }\n        let starDropdown;\n        if(this.props.match.params.section === \"reviews\"){\n            starDropdown = \n            <select id=\"EditReviewStars\" value={this.state.stars} onChange={this.changeStars} required > \n                <option value={this.state.stars}>{this.state.stars}</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n            </select>;\n        }\n\n        if(this.state.redirect === true){\n            const section = this.props.match.params.section;\n            if(category === \"events\"){\n                return <Redirect to={`/userHome/event/${section}`}/>\n            }else{\n               return  <Redirect to={`/userHome/${category}/${section}`}/>\n            }\n        } else {\n            return (\n                <div className=\"EditFormContainer\">\n                    <form onSubmit={this.editPlace} className=\"editForm\">\n                    <h2>Make your edits below!</h2>\n                        <div className=\"editNameAndType\">\n                            <input onChange={this.changePlace} type=\"text\" id=\"editPlace\" defaultValue={this.state.place} />\n                        </div>\n                        <div className=\"EditDropdowns\">\n                            <select className=\"DropDownEdit Type\" id=\"DropDownEdit\" onChange={this.changeType}>\n                                <option defaultValue={this.state.type}>{this.state.type}</option>\n                                {typeArray}\n                            </select>\n                            {starDropdown}\n                        </div>\n                        <div className=\"editNote\">\n                            <textarea onChange={this.changeText} value={this.state.text} id=\"editText\"></textarea>\n                        </div>\n                        <Button type=\"submit\" className=\"submitButton\">Update</Button>\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EditForm);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport Button from '../../components/utility/button/Button'\nimport {Redirect} from \"react-router-dom\";\nimport './FaveReviewForm.css'\n\n\nclass FaveReviewForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            place:'',\n            category:'',\n            review:'',\n            type: '',\n            stars: '',\n            redirect : false\n            // date: '', we may need another component just for events, \n            // unless we can figure out how to conditionally render a date field on only certain pages\n        }\n    }\n\n    componentDidMount() {\n        const placename = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n    \n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/${category}/${section}/getFaveToReview/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                place : responseFromDB.data.placename,\n                category : category,\n                type : responseFromDB.data.type,\n            })\n        })\n    }\n\n    editPlace = (event)=>{\n        event.preventDefault();\n        const placename = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n        const updatedReview = this.state.review;\n        const updatedStars = this.state.stars;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/${category}/${section}/reviewFave/${placename}`,\n            data: {\n                email: this.props.login.email,\n                updatedReview,\n                updatedStars\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                stars:'',\n                review: \"\",\n                redirect: true\n            })\n        })\n    }\n   \n    changePlace = (event) => {}\n\n    changeType = (event)=>{}\n\n    changeReview = (event) => {\n        this.setState({\n            review: event.target.value\n        })\n    }\n\n    changeStars = (event) => {\n        this.setState({\n            stars: event.target.value\n        })\n    }\n\n\n    render() {\n\n        if(this.state.redirect === true){\n            const section = this.props.match.params.section;\n            const category = this.props.match.params.category;\n            return(\n                <Redirect to={`/userHome/${category}/${section}`}/>\n            )\n        } else {\n            return (\n                <div className=\"FaveReviewFormContainer\">\n                    <form onSubmit={this.editPlace} className=\"FaveReviewForm\">\n                        <h3>Add your review!</h3>\n                        <div className=\"addFaveReviewInput\">\n                            <input onChange={this.changePlace} type=\"text\" id=\"NewFaveReview\" value={this.state.place} />\n                            <div className=\"typeAndStars\">\n                                <select className=\"DropdownFaveReviewType Type\" id=\"FaveDropDown\" onChange={this.changeType}>\n                                    <option defaultValue={this.state.type}>{this.state.type}</option>\n                                </select>\n                                <select className=\"faveReviewStarDropdown\" value={this.state.stars} onChange={this.changeStars} required> \n                                    <option value=\"\">Stars</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"addFaveReview\">\n                            <textarea onChange={this.changeReview} value={this.state.review} id=\"NewFaveReviewText\"></textarea>\n                        </div>\n                        <Button type=\"submit\" className=\"submitButton\">Add</Button>\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(FaveReviewForm);\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n// import { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport './SideNav.css';\n\nclass SideNav extends Component {\n\n    render() {\n        let catHome = `/userHome/${this.props.category}`\n        let todoLink = `/userHome/${this.props.category}/todo`\n        let faveLink = `/userHome/${this.props.category}/favorites`\n        let reviewsLink = `/userHome/${this.props.category}/reviews`\n        \n        return (\n            <div className=\"sideNav\">\n                <div className=\"circleContainer\">\n                    <div>\n                        <Link style={{ textDecoration: 'none' }} to={catHome}><div className=\"exploreCircle\"><p>Explore</p></div></Link>\n                    </div>\n                    <div>\n                        <Link style={{ textDecoration: 'none' }} to={todoLink}><div className=\"toDoCircle\"><p>To Do</p></div></Link>\n                    </div>\n                    <div>\n                        <Link style={{ textDecoration: 'none' }} to={faveLink}><div className=\"favoritesCircle\"><p>Favorite</p></div></Link>\n                    </div>\n                    <div>\n                        <Link style={{ textDecoration: 'none' }} to={reviewsLink}><div className=\"reviewsCircle\"><p>Reviews</p></div></Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        category: state.category\n    }\n}\n\nexport default connect(mapStateToProps, null)(SideNav);","import React from \"react\";\nimport SideNav from \"../navBar/SideNav\";\nimport './categoryHome.css';\n\nfunction CategoryHomeLayout(props) {\n    return (\n        <div className='categoryHomeContainer'>\n            <SideNav />\n            <div className=\"mainHome\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default CategoryHomeLayout;","import React, {Component} from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport FoodTodo from \"./todo/FoodTodo\";\nimport FoodFavorites from './favorites/FoodFavorites'\nimport FoodReviews from \"./reviews/FoodReviews\";\nimport FoodExplore from \"./explore/FoodExplore\";\nimport EditForm from '../../Forms/EditForm';\nimport FaveReviewForm from '../../Forms/FaveReviewForm'\n\nimport CategoryHomeLayout from '../CategoryHomeLayout'\nimport '../categoryHome.css';\n\nclass Food extends Component {\n\n    render(){\n        return(\n            <CategoryHomeLayout>\n                <Route exact path=\"/userHome/food/\" component={FoodExplore} />\n                <Route exact path=\"/userHome/food/todo\" component={FoodTodo} />\n                <Route exact path=\"/userHome/food/favorites\" component={FoodFavorites} />\n                <Route exact path=\"/userHome/food/reviews\" component={FoodReviews} />\n                <Route exact path=\"/userHome/:category/edit/:section/:place\" component={EditForm} />\n                <Route exact path=\"/userHome/:category/reviews/:section/:place\" component={FaveReviewForm} />\n            </CategoryHomeLayout>\n        )\n    }\n}\n\n\nexport default Food;\n\n\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from '../../../../components/utility/button/Button';\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../todo.css';\n\n\nclass CultureToDo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Music', 'Art', 'Theater', 'Learning'],\n            msg: \"\",\n            showAlert: false,\n            swTitle: \"Added to Faves!\"\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/getCultureList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((cultureListFromDB) => {\n            this.setState({\n                list: cultureListFromDB\n            })\n        })\n    }\n\n    addNewPlace = (place, type, text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/addCulture`,\n            data: {\n                placename: place,\n                type: type,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0) {\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            } else {\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n    addToFavorites = (placename) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/culture/addFave/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse,\n                msg: \"Success! Added to favorites\",\n                swTitle: \"Added to Faves!\",\n                showAlert: true\n            })\n        })\n    }\n\n    removePlace = (placename) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/culture/deletePlace/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/filter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/getCultureList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((cultureListFromDB) => {\n            this.setState({\n                list: cultureListFromDB\n            })\n        })\n    }\n\n    render() {\n        let category = \"culture\";\n        let section = \"todo\";\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var cultureToDo = this.state.list.data.map((culture, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{culture.placename}</h4>\n                            <div>\n                                <p>{culture.note}</p>\n                            </div>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button clicked={() => this.addToFavorites(culture.placename)} className=\"faveButton\">Fave</Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\"+ category + \"/edit/\" + section + \"/\" + culture.placename} >Edit</Link></Button>\n                            <Button clicked={() => this.removePlace(culture.placename)} className=\"deleteButton\">Remove</Button>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        })\n\n        const filterArray = this.state.types.map((filter, i)=>{\n            return(<option key={i} value={filter}>{filter}</option>)\n        })\n        \n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"ToDo\">\n                    <h2>Expanding horizons...</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"todoBody\">\n                        <div className=\"todoLeft\">\n                            <AddForm\n                                title=\"Add to your list!\"\n                                addNewPlace={this.addNewPlace}\n                                placeholder=\"Add new place to visit...\"\n                                textType=\"Add note...\"\n                                defaultType=\"Choose type!\" \n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"todoRight\">\n                            <Filter \n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={cultureToDo}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(CultureToDo);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from 'react-router-dom';\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards'\nimport Button from '../../../../components/utility/button/Button'\n\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../favorites.css';\n\nclass CultureFavorites extends Component {\n        constructor() {\n            super()\n            this.state = {\n                list: [],\n                msg: \"\",\n                types: ['Music', 'Art', 'Theater', 'Learning'],\n                showAlert: false,\n                swTitle: ''\n            }\n        }\n    \n        componentDidMount() {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/culture/getCultureFaveList`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((cultureListFromDB) => {\n                    this.setState({\n                        list: cultureListFromDB\n                    })\n                })\n        }\n    \n        addNewPlace = (place, type, text) => {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/culture/addFaveInFavorites`,\n                data: {\n                    placename: place,\n                    type: type,\n                    note: text,\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                if (backEndResponse.data.length === 0) {\n                    this.setState({\n                        showAlert: true,\n                        swTitle: \"Whoops!\",\n                        msg: \"This is already in one of your lists!\"\n                    })\n                } else {\n                    this.setState({\n                        list: backEndResponse,\n                    })\n                }\n            })\n        }\n    \n        removePlace = (placename) => {\n            axios({\n                method: \"POST\",\n                url: `${window.apiHost}/culture/deleteFavePlace/${placename}`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                this.setState({\n                    list: backEndResponse\n                })\n            })\n        }\n\n        filterResults = (filter) => {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/culture/faveFilter/${filter}`,\n                data: {\n                    type: filter,\n                    email: this.props.login.email\n                }\n            }).then((backEndResponse) => {\n                this.setState({\n                    list: backEndResponse\n                })\n            })\n        }\n\n        clearFilter = () => {\n            axios({\n                method: 'POST',\n                url: `${window.apiHost}/culture/getCultureFaveList`,\n                data: {\n                    email: this.props.login.email\n                }\n            }).then((foodListFromDB) => {\n                this.setState({\n                    list: foodListFromDB\n                })\n            })\n        }\n       \n        render() {\n\n            let category = \"culture\";\n            let section = \"favorites\";\n\n            if (this.state.list.data !== undefined) {\n                document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n                var favorites = this.state.list.data.map((culture, i) => {\n                    return (\n                        <div key={i} className=\"placeCard\">\n                            <div className=\"cardLeft\">\n                                <h4>{culture.placename}</h4>\n                                <p>{culture.note}</p>\n                            </div>\n                            <div className=\"buttonContainer\">\n\n                                <Button className=\"reviewButton\"><Link to={\"/userHome/\"+ category + \"/reviews/\" + section + \"/\" + culture.placename} >Review</Link></Button>\n                                <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/edit/\" + section + \"/\" + culture.placename}>Edit</Link></Button>\n                                <Button clicked={() => this.removePlace(culture.placename)} className=\"deleteButton\">Remove</Button>\n\n                            </div> \n                        </div>\n                    )\n                })\n            }\n\n            const filterArray = this.state.types.map((filter, i)=>{\n                return(<option key={i} value={filter}>{filter}</option>)\n            })\n            \n            const typeArray = this.state.types.map((type, i)=>{\n                return (<option key={i} value={type}>{type}</option>)\n            })\n\n            if (this.props.login.length === 0) {\n                return (\n                    <Redirect to=\"/login\" />\n                )\n            } else {\n                return (\n                    <div className=\"Favorites\">\n                        <h2>Truly sublime</h2>\n                        <SweetAlert\n                            show={this.state.showAlert}\n                            title={this.state.swTitle}\n                            text={this.state.msg}\n                            onConfirm={() => this.setState({ showAlert: false })}\n                        />\n                        <div className=\"faveBody\">\n                            <div className=\"faveLeft\">\n                                <AddForm\n                                    title=\"Add a favorite!\"\n                                    addNewPlace={this.addNewPlace}\n                                    placeholder=\"Add a new experience...\"\n                                    textType=\"Add note...\"\n                                    defaultType=\"Choose type!\" \n                                    types={typeArray}\n                                />\n                            </div>\n                            <div className=\"faveRight\">\n                                <Filter \n                                    defaultFilter=\"Filter by type\"\n                                    defaultValue={this.state.types[0]}\n                                    filters={filterArray}\n                                    filterResults={this.filterResults}\n                                    clearFilter={this.clearFilter}\n                                />\n                                <PlaceCards cards={favorites}/>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        }\n    }\n    \n    function mapStateToProps(state) {\n        return {\n            login: state.login\n        }\n    }\n    \n    export default connect(mapStateToProps, null)(CultureFavorites);","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from 'react-router-dom';\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nimport AddReviewForm from '../../../Forms/AddReviewForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from \"../../../../components/utility/button/Button\";\nimport '../../reviews.css';\n\nclass CultureReviews extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list : [],\n            msg : \"\",\n            types: ['Music', 'Art', 'Theater', 'Learning'],\n            showAlert: false,\n        }\n    }\n\n    componentDidMount(){\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/culture/getCultureReviews`,\n            data : {\n                email : this.props.login.email\n            }\n        }).then((reviewListFromDB)=>{\n            this.setState(({\n                list : reviewListFromDB\n            }))\n        })\n    }\n\n    addReview = (place, review, type, stars) =>{\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/culture/addCultureReview/${place}`,\n            data : {\n                email : this.props.login.email,\n                place,\n                review,\n                type,\n                stars\n            }\n        }).then((responseFromDB)=>{\n            this.setState({\n                list : responseFromDB,\n                msg : `Congrats! You've added a review for ${place}!`,\n                showAlert: true,\n            })\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    removeReview = (place)=>{\n        axios({\n            method : \"POST\",\n            url: `${window.apiHost}/culture/deleteCultureReview/${place}`,\n            data :{\n                email : this.props.login.email\n            }\n        }).then((backEndResponse)=>{\n            this.setState({\n                list : backEndResponse\n            })\n        })\n    }\n\n    render() {\n        let category = \"culture\";\n        let section = \"reviews\";\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var cultureReviews = this.state.list.data.map((review, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{review.placename} - {review.stars} Stars</h4>\n                            <p>{review.review}</p>\n                        </div>\n                        <div className=\"cardRight\">\n                            <div className=\"buttonContainer\">\n                                <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/edit/\" + section + \"/\" + review.placename}>Edit</Link></Button>\n                                <Button clicked={() => this.removeReview(review.placename)} className=\"deleteButton\">Remove</Button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        });\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"Reviews\">\n                    <h2>Reviews</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title=\"Review added!\"\n                        text={this.state.msg}\n                        confirmBtnBsStyle=\"danger\"\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"reviewBody\">\n                        <div className=\"reviewLeft\">\n                            <AddReviewForm\n                                placeholder=\"Add your food review here!\"\n                                defaultType= \"Choose type!\"\n                                defaultStars = \"How many stars?\"\n                                types={typeArray}\n                                addReview={this.addReview}\n                            />\n                        </div>\n                        <div className=\"reviewRight\">\n                            <PlaceCards cards={cultureReviews}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps,null)(CultureReviews);","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport ExploreForm from \"../../../Forms/ExploreForm\";\nimport axios from \"axios\";\nimport config from \"../../../../config\";\nimport {Redirect} from 'react-router-dom';\nimport '../../Explore.css'\nimport Button from \"../../../../components/utility/button/Button\";\nimport PlaceCards from \"../../../../components/Lists/PlaceCards/PlaceCards\";\n\nclass CultureExplore extends Component {\n    constructor(){\n        super()\n        this.state = {\n            exploreResults : [],\n            types: ['Music', 'Art', 'Theater', 'Learning'],\n        }\n    }\n\n\n    exploreRequest = (name,city)=>{\n        let cityCoordinates, searchLat, searchLon;\n        const locationComma = city.replace(/,/g,\"\");\n        const locationFinalFormat = locationComma.replace(/ /g,\"+\");\n        const addressToCoordinatesUrl=`https://maps.googleapis.com/maps/api/geocode/json?address=${locationFinalFormat}&key=${config.apiKey}`;\n        axios({\n            method : \"GET\",\n            url : addressToCoordinatesUrl\n        }).then((response)=>{\n            searchLat =  response.data.results[0].geometry.location.lat\n            searchLon =  response.data.results[0].geometry.location.lng;\n            cityCoordinates = {\n                lat : searchLat,\n                lng : searchLon\n            }\n\n            let request = {\n              query: `${name}`,\n              rankby : \"distance\",\n              location : cityCoordinates,\n              radius: 10000\n            };\n    \n            // USE WINDOW TO ACCESS GOOGLE \n          \n            let service = new window.google.maps.places.PlacesService(document.createElement('div'));\n            let searchResults = [];\n            service.textSearch(request, (results, status)=> {\n                let loopLength;\n                if (15 < results.length){\n                    loopLength = 15\n                } else {\n                    loopLength = results.length\n                }\n\n                for(let i = 0; i < loopLength; i++) {\n                    searchResults.push(results[i])\n                }\n                \n                this.setState({\n                    exploreResults : searchResults\n                })\n            });\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    addExploreTodo = (place, type, text) => {\n        //api call will go here with autocomplete to add name, location to DB\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/addExploreTodo`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/culture/todo\")\n            }\n        })\n    }\n\n    addExploreFavorite = (place, type, text)=>{\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/culture/addExploreFavorite`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/culture/favorites\")\n            }\n        })\n\n    }\n\n    render(){\n        const exploreResults = this.state.exploreResults.map((place, i)=>{\n            const typeArray = this.state.types;\n            const exploreTypeArray = place.types;\n            let type;\n            for(let i =0; i < typeArray.length; i++){\n                for(let j = 0; j < exploreTypeArray.length; j++){\n                    if(typeArray[i].toLowerCase() === exploreTypeArray[j]){\n                        type = typeArray[i]\n                    }\n                }\n            }\n            \n            if(type === undefined){\n                type = \"Learning\"\n            }\n            \n            return (\n                <div key={i} className=\"placeCard\">\n                    <div className=\"cardLeft\">\n                        <h4>{place.name}</h4>\n                        <p>{type}</p>\n                    </div>\n                    <div className=\"buttonContainer\">\n                        <Button clicked={() => this.addExploreTodo(place.name, type, place.formatted_address)} className=\"todoButton\">Todo</Button>\n                        <Button clicked={() => this.addExploreFavorite(place.name, type, place.formatted_address)} className=\"faveButton\">Favorite</Button>\n                    </div> \n                </div>\n                )\n            })\n\n        if(this.props.login.length === 0){\n            return(\n            <Redirect to=\"/login\"/>\n            )\n        } else {\n            return (\n                <div className=\"Explore\">\n                    <h2>Explore your options...</h2>\n                    <div className=\"exploreBody\">\n                        <div className=\"exploreLeft\">\n                            <ExploreForm\n                            searchPlaceholder=\"What would you like to do?\"\n                            locationPlaceholder=\"Enter city and state\"\n                            exploreRequest={this.exploreRequest}\n                            />\n                        </div>\n                        <div className=\"exploreRight\">\n                            <PlaceCards cards={exploreResults} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login,\n        category : state.category\n    }\n}\n\nexport default connect(mapStateToProps, null)(CultureExplore);","import React, {Component} from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport CategoryHomeLayout from '../CategoryHomeLayout';\nimport CultureTodo from './todo/CultureTodo';\nimport CultureFavorites from './favorites/CultureFavorites';\nimport CultureReviews from './reviews/CultureReviews';\nimport EditForm from '../../Forms/EditForm';\nimport FaveReviewForm from '../../Forms/FaveReviewForm'\n\nimport \"../categoryHome.css\";\nimport CultureExplore from './explore/CultureExplore';\n\nclass Culture extends Component {\n\n    render(){\n        return(\n            <CategoryHomeLayout>\n                <Route exact path=\"/userHome/culture\" component={CultureExplore} />\n                <Route exact path=\"/userHome/culture/todo\" component={CultureTodo} />\n                <Route exact path=\"/userHome/culture/favorites\" component={CultureFavorites} />\n                <Route exact path=\"/userHome/culture/reviews\" component={CultureReviews} />\n                <Route exact path=\"/userHome/:category/edit/:section/:place\" component={EditForm} />\n                <Route exact path=\"/userHome/:category/reviews/:section/:place\" component={FaveReviewForm} />\n            </CategoryHomeLayout>\n        )\n    }\n}\n\n\nexport default Culture;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards'\nimport Button from '../../../../components/utility/button/Button'\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../todo.css';\n\nclass ActiveTodo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Outdoors', 'Fitness', 'Sports', 'Trips'],\n            msg: \"\",\n            showAlert: false,\n            swTitle: \"Added to Faves!\"\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/getActiveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((activeListFromDB) => {\n            this.setState({\n                list: activeListFromDB\n            })\n        })\n    }\n\n    addNewActive = (activity, type, text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/addActive`,\n            data: {\n                placename: activity,\n                type: type,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0) {\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            } else {\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n    addToFavorites = (activity) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/active/addFave/${activity}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse,\n                msg: \"Success! Added to favorites\",\n                swTitle: \"Added to Faves!\",\n                showAlert: true\n            })\n        })\n    }\n\n    removeActive = (activity) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/active/deleteActive/${activity}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/filter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/getActiveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((activeListFromDB) => {\n            this.setState({\n                list: activeListFromDB\n            })\n        })\n    }\n\n    render() {\n        let category = \"active\";\n        let section = \"todo\";\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var activeTodo = this.state.list.data.map((activity, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{activity.placename}</h4>\n                            <div>\n                                <p>{activity.note}</p>\n                            </div>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button clicked={() => this.addToFavorites(activity.placename)} className=\"faveButton\">Fave</Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/edit/\" + section + \"/\" + activity.placename} >Edit</Link></Button>\n                            <Button clicked={() => this.removeActive(activity.placename)} className=\"deleteButton\">Remove</Button>\n                        </div>\n\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i) => {\n            return (<option key={i} value={type}>{type}</option>)\n        })\n\n        const filterArray = this.state.types.map((filter, i) => {\n            return (<option key={i} value={filter}>{filter}</option>)\n        })\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"ToDo\">\n                    <h2>Hike up a mountain!</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"todoBody\">\n                        <div className=\"todoLeft\">\n                            <AddForm\n                                addNewPlace={this.addNewActive}\n                                placeholder=\"Add new activity...\"\n                                textType=\"Add note...\"\n                                defaultType=\"Choose type!\"\n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"todoRight\">\n                            <Filter\n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={activeTodo} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(ActiveTodo);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport AddForm from '../../../Forms/AddForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards'\nimport Button from '../../../../components/utility/button/Button'\n\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../favorites.css';\n\nclass ActiveFavorites extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Outdoors', 'Fitness', 'Sports', 'Trips'],\n            msg: \"\",\n            swTitle: \"\",\n            showAlert: false,\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/getActiveFaveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((activeListFromDB) => {\n            this.setState({\n                list: activeListFromDB\n            })\n        })\n    }\n\n    addNewActive = (activity, type, text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/addFaveInFavorites`,\n            data: {\n                placename: activity,\n                type: type,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0) {\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            } else {\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n\n    removePlace = (activity) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/active/deleteFavePlace/${activity}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/faveFilter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/getActiveFaveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((activeListFromDB) => {\n            this.setState({\n                list: activeListFromDB\n            })\n        })\n    }\n\n    render() {\n\n\n        const typeArray = this.state.types.map((type, i) => {\n            return (<option key={i} value={type}>{type}</option>)\n        })\n\n        const filterArray = this.state.types.map((filter, i) => {\n            return (<option key={i} value={filter}>{filter}</option>)\n        })\n\n        let category = \"active\";\n        let section = \"favorites\";\n\n\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var favorites = this.state.list.data.map((activity, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{activity.placename}</h4>\n                            <p>{activity.note}</p>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button className=\"reviewButton\"><Link to={\"/userHome/\"+ category + \"/reviews/\" + section + \"/\" + activity.placename} >Review</Link></Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/edit/\" + section + \"/\" + activity.placename} >Edit</Link></Button>\n                            <Button clicked={() => this.removePlace(activity.placename)} className=\"deleteButton\">Remove</Button>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"Favorites\">\n                    <h2>Favorite adventures!</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"faveBody\">\n                        <div className=\"faveLeft\">\n                            <AddForm\n                                title=\"Add a favorite thing to do!\"\n                                addNewPlace={this.addNewActive}\n                                placeholder=\"Add new favorite activity...\"\n                                textType=\"Add note...\"\n                                defaultType=\"Choose type!\"\n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"faveRight\">\n                            <Filter\n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={favorites} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(ActiveFavorites);\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport AddReviewForm from '../../../Forms/AddReviewForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from \"../../../../components/utility/button/Button\";\nimport '../../reviews.css';\n\nclass ActiveReviews extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Outdoors', 'Fitness', 'Sports', 'Trips'],\n            msg: \"\",\n            showAlert: false,\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/active/getActiveReviews`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((reviewListFromDB) => {\n            this.setState(({\n                list: reviewListFromDB\n            }))\n        })\n    }\n\n    addReview = (activity, review, type, stars) =>{\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/active/addActiveReview/${activity}`,\n            data : {\n                email : this.props.login.email,\n                activity,\n                review,\n                type,\n                stars\n            }\n        }).then((responseFromDB)=>{\n            this.setState({\n                list : responseFromDB,\n                msg : `Congrats! You've added a review for ${activity}!`,\n                showAlert: true,\n            })\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    removeReview = (activity)=>{\n        axios({\n            method : \"POST\",\n            url: `${window.apiHost}/active/deleteActiveReview/${activity}`,\n            data :{\n                email : this.props.login.email\n            }\n        }).then((backEndResponse)=>{\n            this.setState({\n                list : backEndResponse\n            })\n        })\n    }\n\n    render() {\n        let category = \"active\";\n        let section = \"reviews\";\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var activeReviews = this.state.list.data.map((review, i) => {\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{review.placename} – {review.stars} Stars</h4>\n                            <p>{review.review}</p>\n                        </div>\n                        <div className=\"cardRight\">\n                            <div className=\"buttonContainer\">\n                                <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/edit/\" + section + \"/\" + review.placename} >Edit</Link></Button>\n                                <Button clicked={() => this.removeReview(review.placename)} className=\"deleteButton\">Remove</Button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i) => {\n            return (<option key={i} value={type}>{type}</option>)\n        })\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"Reviews\">\n                    <h2>Reviews</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title=\"Review Added!\"\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"reviewBody\">\n                        <div className=\"reviewLeft\">\n                            <AddReviewForm\n                                placeholder=\"Add your active review here!\"\n                                defaultType=\"Choose type!\"\n                                defaultStars=\"How many stars?\"\n                                types={typeArray}\n                                addReview={this.addReview}\n                            />\n                        </div>\n                        <div className=\"reviewRight\">\n                            <PlaceCards cards={activeReviews} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(ActiveReviews);","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport ExploreForm from \"../../../Forms/ExploreForm\";\nimport axios from \"axios\";\nimport config from \"../../../../config\";\n// import {Redirect} from 'react-router-dom';\nimport '../../Explore.css'\nimport Button from \"../../../../components/utility/button/Button\";\nimport PlaceCards from \"../../../../components/Lists/PlaceCards/PlaceCards\";\n\nclass ActiveExplore extends Component {\n    constructor(){\n        super()\n        this.state = {\n            exploreResults : [],\n            types: ['Outdoors', 'Fitness', 'Sports', 'Trips'],\n            showAlert: false,\n\n        }\n    }\n\n\n    exploreRequest = (name,city)=>{\n        let cityCoordinates, searchLat, searchLon;\n        const locationComma = city.replace(/,/g,\"\");\n        const locationFinalFormat = locationComma.replace(/ /g,\"+\");\n        const addressToCoordinatesUrl=`https://maps.googleapis.com/maps/api/geocode/json?address=${locationFinalFormat}&key=${config.apiKey}`;\n        axios({\n            method : \"GET\",\n            url : addressToCoordinatesUrl\n        }).then((response)=>{\n            searchLat =  response.data.results[0].geometry.location.lat\n            searchLon =  response.data.results[0].geometry.location.lng;\n            cityCoordinates = {\n                lat : searchLat,\n                lng : searchLon\n            }\n\n            let request = {\n              query: `${name}`,\n              rankby : \"distance\",\n              location : cityCoordinates,\n              radius: 10000\n            };\n    \n            // USE WINDOW TO ACCESS GOOGLE \n          \n            let service = new window.google.maps.places.PlacesService(document.createElement('div'));\n            let searchResults = [];\n            service.textSearch(request, (results, status)=> {\n                let loopLength;\n                if (15 < results.length){\n                    loopLength = 15\n                } else {\n                    loopLength = results.length\n                }\n\n                for(let i = 0; i < loopLength; i++) {\n                    searchResults.push(results[i])\n                }\n                \n                this.setState({\n                    exploreResults : searchResults\n                })\n            });\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    addExploreTodo = (place, type, text) => {\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/addExploreTodo`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/active/todo\")\n            }\n        })\n    }\n\n    addExploreFavorite = (place, type, text)=>{\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/active/addExploreFavorite`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/active/favorites\")\n            }\n        })\n\n    }\n\n    render(){\n        const exploreResults = this.state.exploreResults.map((place, i)=>{\n            const typeArray = this.state.types;\n            const exploreTypeArray = place.types;\n            let type;\n            for(let i =0; i < typeArray.length; i++){\n                for(let j = 0; j < exploreTypeArray.length; j++){\n                    if(typeArray[i].toLowerCase() === exploreTypeArray[j]){\n                        type = typeArray[i]\n                    }\n                }\n            }\n            \n            if(type === undefined){\n                type = \"Outdoors\"\n            }\n            \n            \n            return (\n                <div key={i} className=\"placeCard\">\n                    <div className=\"cardLeft\">\n                        <h4>{place.name}</h4>\n                        <p>{type}</p>\n                    </div>\n                    <div className=\"buttonContainer\">\n                        <Button clicked={() => this.addExploreTodo(place.name, type, place.formatted_address)} className=\"todoButton\">Todo</Button>\n                        <Button clicked={() => this.addExploreFavorite(place.name, type, place.formatted_address)} className=\"faveButton\">Favorite</Button>\n                    </div> \n                </div>\n                )\n            })\n        return (\n            <div className=\"Explore\">\n                <h2>Explore the world around you!</h2>\n                <div className=\"exploreBody\">\n                    <div className=\"exploreLeft\">\n                        <ExploreForm\n                        searchPlaceholder=\"What would you like to do?\"\n                        locationPlaceholder=\"Enter city and state\"\n                        exploreRequest={this.exploreRequest}\n                        />\n                    </div>\n                    <div className=\"exploreRight\">\n                        <PlaceCards cards={exploreResults} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(ActiveExplore);","import React, { Component } from 'react';\nimport {Route } from \"react-router-dom\";\n\nimport CategoryHomeLayout from '../CategoryHomeLayout';\nimport ActiveTodo from './todo/ActiveTodo';\nimport ActiveFavorites from './favorites/ActiveFavorites';\nimport ActiveReviews from './reviews/ActiveReviews';\nimport EditForm from '../../Forms/EditForm';\nimport FaveReviewForm from '../../Forms/FaveReviewForm'\n\nimport \"../categoryHome.css\";\nimport ActiveExplore from './explore/ActiveExplore';\n\n\nclass Active extends Component {\n\n    render() {\n        return (\n            <CategoryHomeLayout>\n                <Route exact path=\"/userHome/active\" component={ActiveExplore} />\n                <Route exact path=\"/userHome/active/todo\" component={ActiveTodo} />\n                <Route exact path=\"/userHome/active/favorites\" component={ActiveFavorites} />\n                <Route exact path=\"/userHome/active/reviews\" component={ActiveReviews} />\n                <Route exact path=\"/userHome/:category/edit/:section/:place\" component={EditForm} />\n                <Route exact path=\"/userHome/:category/reviews/:section/:place\" component={FaveReviewForm} />\n            </CategoryHomeLayout>\n        )\n    }\n}\n\n\nexport default Active;\n\n","import React, { Component } from 'react';\nimport Button from '../../components/utility/button/Button'\nimport './AddEventForm.css'\n\n\nclass AddEventForm extends Component {\n    constructor(){\n        super()\n        this.state = {\n            events: '',\n            type: '',\n            date:'',\n            readabledate:'',\n            text: '',\n            filter: '',\n           \n        }\n    }\n\n    addNewEvent = (event) => {\n        event.preventDefault(event)\n        this.props.addNewEvent(this.state.events, this.state.type, this.state.date, this.state.readabledate, this.state.text)\n        document.getElementById('NewEventTypeDropdown').value = this.props.defaultType;\n        this.setState({\n            events: '',\n            type: '',\n            date:'',\n            readabledate:'',\n            text: '',\n           \n        })\n    }\n\n    changeEvent = (event) => {\n        this.setState({\n            events: event.target.value\n        })\n    }\n\n    changeType = (event) => {\n        this.setState({\n            type: event.target.value\n        })\n    }\n\n    changeDate = (event) => {\n        var date= event.target.value\n        \n        var currDate = (date).toString().slice(0,10)\n        var currYear = currDate.slice(0,4)\n        var currMonDay = (currDate.slice(6,10)).replace(/-0+/g, '-');\n        var publishDate = `${currMonDay}-${currYear}`\n\n        this.setState({\n            readabledate: publishDate,\n            date: date\n        })\n        // console.log(new Date())\n    }\n\n    changeText = (event) => {\n        this.setState({\n            text: event.target.value\n        })\n    }\n    \n    render(){\n        let minDate = new Date().toISOString().slice(0,10);\n        let maxDate = '2030-03-10'\n        return(\n            <div className=\"AddEventFormContainer\">\n                <form onSubmit={this.addNewEvent} className=\"AddEventForm\">\n                    <div className=\"addEventName\">\n                        <input onChange={this.changeEvent} type=\"text\" id=\"NewAddEvent\" placeholder={this.props.placeholder} value={this.state.events} required />\n                    </div>\n                    <div className=\"addEventTypeAndDate\">\n                        <select className=\"Dropdown Type\" id=\"NewEventTypeDropdown\" onChange={this.changeType} required>\n                            <option value=\"\">{this.props.defaultType}</option>\n                            {this.props.types}\n                        </select>\n                        <input onChange={this.changeDate} id=\"NewEventDateDropdown\" type=\"date\" min={minDate} max={maxDate} value={this.state.date} required />\n                    </div>\n                    <div className=\"AddNewEventNote\">\n                        <textarea onChange={this.changeText} id=\"AddNewEventText\" placeholder={this.props.textType} value={this.state.text}></textarea>\n                    </div>\n                    <Button type=\"submit\" className=\"submitButton\">Add</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddEventForm; \n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport AddEventForm from '../../../Forms/AddEventForm'\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards'\nimport Button from '../../../../components/utility/button/Button'\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../todo.css';\n\nclass EventTodo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Festival','Arts-Movies-Music', 'Sporting Events', 'Educational'],\n            readabledate:'',\n            date:'',\n            msg: \"\",\n            showAlert: false,\n            swTitle: \"Added to Faves!\"\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/getEventList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((eventListFromDB) => {\n            this.setState({\n                list: eventListFromDB\n            })\n        })\n    }\n\n    addNewEvent = (event, type, date, readabledate,  text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/addEvent`,\n            data: {\n                eventname: event,\n                type: type,\n                readabledate: readabledate,\n                date: date,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0) {\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            } else {\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n    addToFavorites = (eventname) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/events/addFave/${eventname}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse,\n                msg: \"Success! Added to favorites\",\n                swTitle: \"Added to Faves!\",\n                showAlert: true\n            })\n        })\n    }\n\n    removeEvent = (eventname) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/events/deleteEvent/${eventname}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/filter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/getEventList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((eventListFromDB) => {\n            this.setState({\n                list: eventListFromDB\n            })\n        })\n    }\n\n    render() {\n        let category = \"event\";\n        let section = \"todo\";\n\n        if (this.state.list.data !== undefined) {\n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var eventToDo = this.state.list.data.map((events, i) => {\n                console.log(events.eventname)\n                return (\n                    <div key={i} className=\"placeCard\">\n                         <div className=\"cardLeft\">\n                            <h4>{events.eventname}</h4>\n                            <p>{events.readabledate}</p>\n                            <p>{events.note}</p>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button clicked={() => this.addToFavorites(events.eventname)} className=\"faveButton\">Fave</Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/editEvent/\" + section + \"/\" + events.eventname} >Edit</Link></Button>\n                            <Button clicked={() => this.removeEvent(events.eventname)} className=\"deleteButton\">Remove</Button>\n                        </div>\n                        \n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        })\n\n        const filterArray = this.state.types.map((filter, i)=>{\n            return(<option key={i} value={filter}>{filter}</option>)\n        })\n        \n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"ToDo\">\n                    <h2>Happenings around town...</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"todoBody\">\n                        <div className=\"todoLeft\">\n                            <AddEventForm\n                                addNewEvent={this.addNewEvent}\n                                placeholder=\"Add new event...\"\n                                textType=\"Add note...\"\n                                defaultType=\"Choose type!\" \n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"todoRight\">\n                            <Filter \n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={eventToDo} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EventTodo);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from 'react-router-dom';\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nimport AddEventForm from '../../../Forms/AddEventForm'\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from '../../../../components/utility/button/Button'\nimport Filter from '../../../../components/utility/filterDropDown/Filter';\nimport '../../favorites.css';\n\nclass EventFavorites extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            types: ['Festival','Arts-Movies-Music', 'Sporting Events', 'Educational'],\n            readabledate:'',\n            date:'',\n            msg: \"\",\n            showAlert: false,\n            swTitle: ''\n        }\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/getEventFaveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((eventListFromDB) => {\n                this.setState({\n                    list: eventListFromDB\n                })\n            })\n    }\n\n    addNewEvent = (event, type, date, readabledate, text) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/addFaveInFavorites`,\n            data: {\n                eventname: event,\n                type: type,\n                readabledate:readabledate,\n                date: date,\n                note: text,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            if (backEndResponse.data.length === 0) {\n                this.setState({\n                    showAlert: true,\n                    swTitle: \"Whoops!\",\n                    msg: \"This is already in one of your lists!\"\n                })\n            } else {\n                this.setState({\n                    list: backEndResponse,\n                })\n            }\n        })\n    }\n\n\n    removeEvent = (eventname) => {\n        axios({\n            method: \"POST\",\n            url: `${window.apiHost}/events/deleteFaveEvent/${eventname}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    filterResults = (filter) => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/faveFilter/${filter}`,\n            data: {\n                type: filter,\n                email: this.props.login.email\n            }\n        }).then((backEndResponse) => {\n            this.setState({\n                list: backEndResponse\n            })\n        })\n    }\n\n    clearFilter = () => {\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/getEventFaveList`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((eventListFromDB) => {\n            this.setState({\n                list: eventListFromDB\n            })\n        })\n    }\n  \n       \n    render() {\n        let category = \"event\";\n        let section = \"favorites\";\n        if (this.state.list.data !== undefined) {\n            \n            document.querySelector(\".placeCards\").style.backgroundColor = \"#ffa094\";\n            var favorites = this.state.list.data.map((event, i) => {     \n                console.log(event)            \n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{event.eventname}</h4>\n                            <p>{event.readabledate}</p>\n                            <p>{event.note}</p>\n                        </div>\n                        <div className=\"buttonContainer\">\n                            <Button className=\"reviewButton\"><Link to={\"/userHome/\"+ category + \"/eventReviews/\" + section + \"/\" + event.eventname} >Review</Link></Button>\n                            <Button className=\"editButton\"><Link to={\"/userHome/\" + category + \"/editEvent/\" + section + \"/\" + event.eventname} >Edit</Link></Button>\n                            <Button clicked={() => this.removeEvent(event.eventname)} className=\"deleteButton\">Remove</Button>\n                        </div>   \n                    </div>\n                )\n            })\n        }\n\n        const typeArray = this.state.types.map((type, i) => {\n            return (<option key={i} value={type}>{type}</option>)\n        })\n        const filterArray = this.state.types.map((filter, i)=>{\n            return(<option key={i} value={filter}>{filter}</option>)\n        })\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"Favorites\">\n                    <h2>Favorite events!</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title={this.state.swTitle}\n                        text={this.state.msg}\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"faveBody\">\n                        <div className=\"faveLeft\">\n                            <AddEventForm\n                                addNewEvent={this.addNewEvent}\n                                placeholder=\"Add new...\"\n                                textType=\"Add note...\"\n                                defaultType=\"Choose type!\"\n                                types={typeArray}\n                            />\n                        </div>\n                        <div className=\"faveRight\">\n                            <Filter \n                                defaultFilter=\"Filter by type\"\n                                defaultValue={this.state.types[0]}\n                                filters={filterArray}\n                                filterResults={this.filterResults}\n                                clearFilter={this.clearFilter}\n                            />\n                            <PlaceCards cards={favorites}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EventFavorites);\n","import React, {Component} from \"react\";\nimport Button from \"../../components/utility/button/Button\";\nimport \"./AddEventReviewForm.css\"\n\nclass AddEventReviewForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            events: \"\",\n            type:'',\n            review: \"\",\n            date:'',\n            readabledate:'',\n            stars: \"\"\n        }\n    }\n\n    addNewReview = (event)=>{\n        event.preventDefault();\n        this.props.addReview(this.state.events, this.state.type, this.state.review, this.state.date, this.state.readabledate, this.state.stars);\n        document.getElementsByClassName('type').value = this.props.defaultType;\n        document.getElementsByClassName(\"starDropdown\").value = this.props.defaultStars;\n        this.setState({\n            events: \"\",\n            type:'',\n            review: \"\",\n            date:'',\n            readabledate:'',\n            stars: \"\"\n        })\n    }\n\n    changePlace = (event)=>{\n        this.setState({\n            events : event.target.value\n        })\n    }\n\n    changeType = (event)=>{\n        this.setState({\n           type : event.target.value \n        })\n    }\n\n    changeDate = (event) => {\n        var date= event.target.value\n        var currDate = (date).toString().slice(0,10)\n        var currYear = currDate.slice(0,4)\n        var currMonDay = (currDate.slice(6,10)).replace(/-0+/g, '-');\n        var publishDate = `${currMonDay}-${currYear}`\n\n        this.setState({\n            readabledate: publishDate,\n            date: date\n        })\n        \n    }\n\n    changeStars = (event)=>{\n        this.setState({\n           stars : event.target.value \n        })\n    }\n\n    changeReview = (event)=>{\n        this.setState({\n            review : event.target.value\n        })\n    }\n    \n    render(){\n        let minDate = new Date().toISOString().slice(0,10);\n        let maxDate = '2030-03-10'\n        return(\n            <div className=\"AddEventReviewForm\">\n                <form onSubmit={this.addNewReview} className=\"eventReviewForm\">\n                <div className=\"eventInput\">\n                    <input type=\"text\" placeholder=\"Enter your place to review here!\" value={this.state.place} id=\"newEvent\" onChange={this.changePlace} required/>\n                </div>\n                <div className=\"typeStarDateInput\">\n                    <div className=\"eventStarTypeDropdowns\">\n                        <select className=\"type\" id=\"eventTypeDropdown\" onChange={this.changeType} value={this.state.type} required>\n                            <option value=\"\">{this.props.defaultType}</option>\n                            {this.props.types}\n                        </select>\n                        <select id=\"eventStarDropdown\" value={this.state.stars} onChange={this.changeStars} required> \n                            <option value=\"\">{this.props.defaultStars}</option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                        </select>\n                    </div>\n                    <input onChange={this.changeDate} id=\"eventDateDropdown\" type=\"date\" min={minDate} max={maxDate} value={this.state.date} required/>\n                </div>\n                <div className=\"addEventReview\">\n                    <textarea onChange={this.changeReview} id=\"newEventReview\" placeholder={this.props.placeholder} value={this.state.review} required></textarea>\n                        <Button type=\"submit\" className=\"submitButton\">Add Review</Button>\n                </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddEventReviewForm;","import React, { Component } from 'react';\nimport axios from \"axios\";\n\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport AddEventReviewForm from '../../../Forms/AddEventReviewForm';\nimport PlaceCards from '../../../../components/Lists/PlaceCards/PlaceCards';\nimport Button from \"../../../../components/utility/button/Button\";\nimport '../../reviews.css';\n\nclass EventReviews extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list : [],\n            types: ['Festival','Arts-Movies-Music', 'Sporting Events', 'Educational'],\n            date:\"\",\n            readabledate:'',\n            stars:'',\n            msg : \"\",\n            showAlert: false,\n        }\n    }\n\n    componentDidMount(){\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/events/getEventReviews`,\n            data : {\n                email : this.props.login.email\n            }\n        }).then((reviewListFromDB)=>{\n            this.setState(({\n                list : reviewListFromDB\n            }))\n        })\n    }\n\n\n    addReview = (event, type, review, date, readabledate, stars) =>{\n\n        axios({\n            method : \"POST\",\n            url : `${window.apiHost}/events/addEventReview/${event}`,\n            data : {\n                email : this.props.login.email,\n                event,\n                type,\n                review,\n                date,\n                readabledate,\n                stars\n            }\n        }).then((responseFromDB)=>{\n            this.setState({\n                list : responseFromDB,\n                msg : `Congrats! You've added a review for ${event}!`,\n                showAlert: true,\n            })\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    removeReview = (event)=>{\n        axios({\n            method : \"POST\",\n            url: `${window.apiHost}/events/deleteEventReview/${event}`,\n            data :{\n                email : this.props.login.email\n            }\n        }).then((backEndResponse)=>{\n            this.setState({\n                list : backEndResponse\n            })\n        })\n    }\n\n    changeDate = (event) => {\n        var date= event.target.value\n        var currDate = (date).toString().slice(0,10)\n        var currYear = currDate.slice(0,4)\n        var currMonDay = (currDate.slice(6,10)).replace(/-0+/g, '-');\n        var publishDate = `${currMonDay}-${currYear}`\n\n        this.setState({\n            readabledate: publishDate,\n            date: date\n        })\n        console.log(new Date())\n    }\n\n\n    render() {\n        let category = \"event\";\n        let section = \"reviews\";\n        if (this.state.list.data !== undefined) {\n            var EventReviews = this.state.list.data.map((review, i) => {\n                console.log(review)\n                return (\n                    <div key={i} className=\"placeCard\">\n                        <div className=\"cardLeft\">\n                            <h4>{review.eventname} - {review.stars} Stars </h4>\n                            <p>{review.readabledate}</p>\n                            <p>{review.review}</p>\n                        </div>\n\n                        <div className=\"cardRight\">\n                            <div className=\"buttonContainer\">\n                                <Button className=\"editButton\"><Link to={\"/userHome/\"+ category + \"/edit/\" + section + \"/\" + review.eventname} >Edit</Link></Button>\n                                <Button clicked={() => this.removeReview(review.eventname)} className=\"deleteButton\">Remove</Button>\n                            </div>\n                        </div>  \n\n                    </div>\n                )\n            })\n        } \n        \n        const typeArray = this.state.types.map((type, i)=>{\n            return (<option key={i} value={type}>{type}</option>)\n        });\n\n        if (this.props.login.length === 0) {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        } else {\n            return (\n                <div className=\"Reviews\">\n                    <h2>Reviews</h2>\n                    <SweetAlert\n                        show={this.state.showAlert}\n                        title=\"Review Added\"\n                        text={this.state.msg}\n                        confirmBtnBsStyle=\"danger\"\n                        onConfirm={() => this.setState({ showAlert: false })}\n                    />\n                    <div className=\"reviewBody\">\n                        <div className=\"reviewLeft\">\n                            <AddEventReviewForm\n                                placeholder=\"Add your event review here!\"\n                                defaultType= \"Choose type!\"\n                                defaultStars=\"How many stars?\"\n                                types={typeArray}\n                                addReview={this.addReview}\n                            />\n                        </div>\n                        <div className=\"reviewRight\">\n                            <PlaceCards cards={EventReviews}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps,null)(EventReviews);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport Button from '../../components/utility/button/Button'\nimport {Redirect} from \"react-router-dom\";\nimport './EventFaveReviewForm.css'\n\n\nclass EventFaveReviewForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            place:'',\n            category:'',\n            review:'',\n            type: '',\n            stars: '',\n            readabledate:'',\n            redirect : false\n            // date: '', we may need another component just for events, \n            // unless we can figure out how to conditionally render a date field on only certain pages\n        }\n    }\n\n    componentDidMount() {\n        const placename = this.props.match.params.place;\n        console.log(placename)\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n    \n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/${section}/getFaveToReview/${placename}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                place : responseFromDB.data.eventname,\n                type : responseFromDB.data.type,\n                readabledate: responseFromDB.data.readabledate,\n                category : category\n            })\n            \n        })\n    }\n\n    editPlace = (event)=>{\n        event.preventDefault();\n        const placename = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n        const updatedReview = this.state.review;\n        const updatedStars = this.state.stars;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/${section}/reviewFave/${placename}`,\n            data: {\n                email: this.props.login.email,\n                updatedReview,\n                updatedStars\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                stars:'',\n                review: \"\",\n                redirect: true,\n                category : category\n            })\n        })\n    }\n\n   \n    changePlace = (event) => {}\n\n    changeType = (event)=>{}\n\n    changeDate = (event)=>{}\n\n    changeReview = (event) => {\n        this.setState({\n            review: event.target.value\n        })\n    }\n\n    changeStars = (event) => {\n        this.setState({\n            stars: event.target.value\n        })\n    }\n\n\n    render() {\n        console.log(this.state.redirect)\n        console.log(this.state)\n        console.log(this.state.readabledate)\n\n        if(this.state.redirect === true){\n            const section = this.props.match.params.section;\n            // const category = this.props.match.params.category;\n            return(\n                <Redirect to={`/userHome/event/${section}`}/>\n            )\n        } else {\n            return (\n                <div className=\"EventFaveReviewFormContainer\">\n                    <form onSubmit={this.editPlace} className=\"EventFaveReviewForm\">\n                        <div className=\"addEventReviewNameTypeDate\">\n                            <input onChange={this.changePlace} type=\"text\" id=\"NewFaveReviewEvent\" value={this.state.place} required />\n                            <div className=\"NewFaveReviewEventTypeStars\">\n                                <select id=\"NewFaveReviewEventType\" onChange={this.changeType}>\n                                    <option defaultValue={this.state.type}>{this.state.type}</option>\n                                </select>\n                                <select id=\"NewFaveReviewEventStars\" value={this.state.stars} onChange={this.changeStars} required > \n                                    <option value=\"\">{this.props.defaultStars}</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                </select>\n                            </div>\n                    <input onChange={this.changeDate} type=\"text\" id=\"NewFaveReviewEventDate\" value={this.state.readabledate} required />\n                        </div>\n                        <div className=\"addNewEventReview\">\n                            <textarea onChange={this.changeReview} value={this.state.review} id=\"NewFaveReviewEventReview\"></textarea>\n                        </div>\n                        <Button type=\"submit\" className=\"submitButton\">Add</Button>\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EventFaveReviewForm);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport Button from '../../components/utility/button/Button'\nimport {Redirect} from \"react-router-dom\";\nimport './EditForm.css'\n\n\nclass EditForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            event: '',\n            category : \"\",\n            type: '',\n            text: '',\n            date:'',\n            readabledate:'',\n            eventTypes: ['Festival', 'Arts-Movies-Music', 'Sporting Events', 'Educational'],\n            redirect : false,\n            stars: \"\"\n            // date: '', we may need another component just for events, \n            // unless we can figure out how to conditionally render a date field on only certain pages\n        }\n    }\n\n    componentDidMount() {\n        const eventname = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const category = this.props.match.params.category;\n        console.log(this.props.match)\n        // const eventname = this.props.match.params.\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/${section}/getEventToEdit/${eventname}`,\n            data: {\n                email: this.props.login.email\n            }\n        }).then((responseFromDB) => {\n            console.log(responseFromDB)\n            let textFromDB = responseFromDB.data.note || responseFromDB.data.review\n            let eventFromDB = responseFromDB.data.eventname || responseFromDB.data.eventname\n            let convertedDate = responseFromDB.data.date.toString().slice(0,10)\n            let starsFromDB = responseFromDB.data.stars \n            this.setState({\n                event : eventFromDB,\n                category : category,\n                type : responseFromDB.data.type,\n                date: convertedDate,\n                text : textFromDB,\n                stars : starsFromDB\n            })\n            console.log(this.state.stars)\n        })\n    \n    }\n\n    editevent = (event)=>{\n        event.preventDefault();\n        const eventname = this.props.match.params.place;\n        const section = this.props.match.params.section;\n        const updatedEventName = this.state.event;\n        const updatedType = this.state.type;\n        const updatedDate = this.state.date;\n        const updatedReadableDate = this.state.readabledate\n        const updatedText = this.state.text;\n        const updatedStars = this.state.stars\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/${section}/editevent/${eventname}`,\n            data: {\n                email: this.props.login.email,\n                updatedEventName,\n                updatedType,\n                updatedDate,\n                updatedReadableDate,\n                updatedText,\n                updatedStars\n            }\n        }).then((responseFromDB) => {\n            this.setState({\n                event : \"\",\n                type : \"\",\n                date: '',\n                readabledate:'',\n                text : \"\",\n                redirect: true,\n                stars : \"\"\n            })\n        })\n    }\n\n   \n\n    changeevent = (event) => {\n        this.setState({\n            event: event.target.value\n        })\n    }\n\n    changeType = (event) => {\n        this.setState({\n            type: event.target.value\n        })\n    }\n\n    changeDate = (event) => {\n        var date= event.target.value\n        \n        var currDate = (date).toString().slice(0,10)\n        var currYear = currDate.slice(0,4)\n        var currMonDay = (currDate.slice(6,10)).replace(/-0+/g, '-');\n        var publishDate = `${currMonDay}-${currYear}`\n\n        this.setState({\n            readabledate: publishDate,\n            date: date\n        })\n        console.log(new Date())\n    }\n\n    changeText = (event) => {\n        this.setState({\n            text: event.target.value\n        })\n    }\n\n    changeStars = (event) =>{\n        this.setState({\n            stars : event.target.value\n        })\n    }\n\n\n    render() {\n        let typeArray;\n  \n            typeArray = this.state.eventTypes.map((type, i) => {\n                return (<option key={i} value={type}>{type}</option>)\n            })\n\n        let starDropdown;\n        if(this.props.match.params.section === \"reviews\"){\n            starDropdown = \n            <select id=\"EditReviewStars\" value={this.state.stars} onChange={this.changeStars} required > \n                <option value=\"\">{this.state.stars}</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n            </select>;\n        }\n        \n\n        if(this.state.redirect === true){\n            const section = this.props.match.params.section;\n            console.log(section)\n                return <Redirect to={`/userHome/event/${section}`}/>\n        } else {\n            let minDate = new Date().toISOString().slice(0,10);\n            let maxDate = '2030-03-10'\n            return (\n                <div className=\"EditFormContainer\">\n                    <form onSubmit={this.editevent} className=\"editForm\">\n                    <h2>Make your edits below!</h2>\n                    <input onChange={this.changeevent} type=\"text\" id=\"editPlace\" defaultValue={this.state.event} />\n                        <div className=\"editNameAndType\">\n                            \n                            <select className=\"DropDownEdit Type\" id=\"DropDownEdit\" onChange={this.changeType}>\n                                <option defaultValue={this.state.type}>{this.state.type}</option>\n                                {typeArray}\n                            </select>\n                            <input onChange={this.changeDate} id=\"NewEventDateDropdown\" type=\"date\" min={minDate} max={maxDate} value={this.state.date}/>\n                        </div>\n                        {starDropdown}\n                        <div className=\"editNote\">\n                            <textarea onChange={this.changeText} value={this.state.text} id=\"editText\"></textarea>\n                        </div>\n                        <Button type=\"submit\" className=\"submitButton\">Update</Button>\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EditForm);\n","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport ExploreForm from \"../../../Forms/ExploreForm\";\nimport axios from \"axios\";\nimport config from \"../../../../config\";\nimport {Redirect} from 'react-router-dom';\nimport '../../Explore.css'\nimport Button from \"../../../../components/utility/button/Button\";\nimport PlaceCards from \"../../../../components/Lists/PlaceCards/PlaceCards\";\n\nclass EventExplore extends Component {\n    constructor(){\n        super()\n        this.state = {\n            exploreResults : [],\n            types: ['Festival','Arts-Movies-Music', 'Sporting Events', 'Educational'],\n        }\n    }\n\n\n    exploreRequest = (name,city)=>{\n        let cityCoordinates, searchLat, searchLon;\n        const locationComma = city.replace(/,/g,\"\");\n        const locationFinalFormat = locationComma.replace(/ /g,\"+\");\n        const addressToCoordinatesUrl=`https://maps.googleapis.com/maps/api/geocode/json?address=${locationFinalFormat}&key=${config.apiKey}`;\n        axios({\n            method : \"GET\",\n            url : addressToCoordinatesUrl\n        }).then((response)=>{\n            searchLat =  response.data.results[0].geometry.location.lat\n            searchLon =  response.data.results[0].geometry.location.lng;\n            cityCoordinates = {\n                lat : searchLat,\n                lng : searchLon\n            }\n\n            let request = {\n              query: `${name}`,\n              rankby : \"distance\",\n              location : cityCoordinates,\n              radius: 10000\n            };\n    \n            // USE WINDOW TO ACCESS GOOGLE \n          \n            let service = new window.google.maps.places.PlacesService(document.createElement('div'));\n            let searchResults = [];\n            service.textSearch(request, (results, status)=> {\n                let loopLength;\n                if (10 < results.length){\n                    loopLength = 10\n                } else {\n                    loopLength = results.length\n                }\n\n                for(let i = 0; i < loopLength; i++) {\n                    searchResults.push(results[i])\n                }\n                \n                this.setState({\n                    exploreResults : searchResults\n                })\n            });\n        })\n        document.querySelector(\".placeCards\").style.visibility = \"visible\";\n    }\n\n    addExploreTodo = (place, type, text) => {\n        //api call will go here with autocomplete to add name, location to DB\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/addExploreTodo`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/event/todo\")\n            }\n        })\n    }\n\n    addExploreFavorite = (place, type, text)=>{\n        const email = this.props.login.email;\n        axios({\n            method: 'POST',\n            url: `${window.apiHost}/events/addExploreFavorite`,\n            data: {\n                place,\n                type,\n                text,\n                email\n            }\n        }).then((backEndResponse) => {\n            if(backEndResponse.data.msg === \"added\"){\n                this.props.history.push(\"/userHome/event/favorites\")\n            }\n        })\n\n    }\n\n    render(){\n        const exploreResults = this.state.exploreResults.map((place, i)=>{\n            const typeArray = this.state.types;\n            const exploreTypeArray = place.types;\n            let type;\n            for(let i =0; i < typeArray.length; i++){\n                for(let j = 0; j < exploreTypeArray.length; j++){\n                    if(typeArray[i].toLowerCase() === exploreTypeArray[j]){\n                        type = typeArray[i]\n                    }\n                }\n            }\n            \n            if(type === undefined){\n                type = \"Educational\"\n            }\n            \n            return (\n                <div key={i} className=\"placeCard\">\n                    <div className=\"cardLeft\">\n                        <h4>{place.name}</h4>\n                        <p>{type}</p>\n                    </div>\n                    <div className=\"buttonContainer\">\n                        <Button clicked={() => this.addExploreTodo(place.name, type, place.formatted_address)} className=\"todoButton\">Todo</Button>\n                        <Button clicked={() => this.addExploreFavorite(place.name, type, place.formatted_address)} className=\"faveButton\">Favorite</Button>\n                    </div> \n                </div>\n                )\n            })\n        if(this.props.login.length === 0){\n            return(\n            <Redirect to=\"/login\"/>\n            )\n        } else {\n            return (\n                <div className=\"Explore\">\n                    <h2>Explore local events</h2>\n                    <div className=\"exploreBody\">\n                        <div className=\"exploreLeft\">\n                            <ExploreForm\n                            searchPlaceholder=\"What events are you looking for?\"\n                            locationPlaceholder=\"Enter city and state\"\n                            exploreRequest={this.exploreRequest}\n                            />\n                        </div>\n                        <div className=\"exploreRight\">\n                            <PlaceCards cards={exploreResults} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps, null)(EventExplore);","import React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\nimport CategoryHomeLayout from '../CategoryHomeLayout';\nimport EventTodo from './todo/EventTodo';\nimport EventFavorites from './favorites/EventFavorites';\nimport EventReviews from './reviews/EventReviews';\nimport FaveReviewForm from '../../Forms/FaveReviewForm';\nimport EventFaveReviewForm from '../../Forms/EventFaveReviewForm';\nimport EventEditForm from '../../Forms/EventEditForm'\nimport \"../categoryHome.css\";\nimport EventExplore from './explore/EventExplore';\n\n\nclass Event extends Component {\n\n    render() {\n        return (\n            <CategoryHomeLayout>\n                <Route exact path=\"/userHome/event\" component={EventExplore} />\n                <Route exact path=\"/userHome/event/todo\" component={EventTodo} />\n                <Route exact path=\"/userHome/event/favorites\" component={EventFavorites} />\n                <Route exact path=\"/userHome/event/reviews\" component={EventReviews} />\n                <Route exact path=\"/userHome/:category/reviews/:section/:place\" component={FaveReviewForm} />\n                <Route exact path=\"/userHome/:category/eventReviews/:section/:place\" component={EventFaveReviewForm} />\n                <Route exact path=\"/userHome/:category/edit/:section/:place\" component={EventEditForm}/>\n            </CategoryHomeLayout>\n        )\n    }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nimport Splash from \"../../components/splash/Splash\";\nimport Login from \"../users/login/Login\";\nimport Register from \"../users/register/Register\";\n\nimport Account from \"../users/account/Account\";\nimport Home from \"../home/Home\";\nimport Food from \"../pages/food/Food\";\nimport Culture from \"../pages/culture/Culture\";\nimport Active from \"../pages/active/Active\";\nimport Event from \"../pages/event/Event\";\n\n\n\nclass Protected extends Component {\n    render(){\n        let pathArray = [\"/login\", \"/register\", \"/\"];\n        let currentPath = this.props.location.pathname;\n        let pathMatch = false;\n        for(let i =0; i < pathArray.length; i++){\n            if(pathArray[i] === currentPath){\n                pathMatch = true\n            }\n        }\n        if(pathMatch){\n            return(\n                <div>\n                    <Route exact path=\"/\" component={Splash}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                    <Route exact path=\"/register\" component={Register}/>\n                </div>\n            )\n        } else {\n            if(this.props.login.length !== 0){   \n                return(\n                    <div>\n                        <Route exact path=\"/account\" component={Account} />\n                        <Route exact path=\"/userHome\" component={Home}/>\n                        <Route path=\"/userHome/food\" component={Food} />\n                        <Route path=\"/userHome/culture\" component={Culture} />\n                        <Route path=\"/userHome/event\" component={Event} />\n                        <Route path=\"/userHome/active\" component={Active}/>\n                    </div>\n                )\n            } else {\n                return(\n                    <Redirect to=\"/\"/>\n                )\n            }\n        }\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        login : state.login,\n    }\n}\n\nexport default connect(mapStateToProps, null)(Protected);","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport './App.css';\nimport Layout from \"./components/layout/Layout\";\nimport Protected from './containers/Protected/Protected';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n         <Layout>\n           <Route path=\"/\" component={Protected}/>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","export default (state = [], action)=>{\n    if(action.type === \"LOGIN_ACTION\" || action.type === \"REG_ACTION\"){\n        return action.payload.data\n    } else if (action.type === \"LOGOUT_ACTION\"){\n        return []\n    } else {\n        return state\n    }\n}","import {combineReducers} from \"redux\";\nimport loginReducer from \"./loginReducer\";\nimport categoryReducer from \"./categoryReducer\";\n\n// import smaller reducers here\n\nconst rootReducer = combineReducers({\n    reg : loginReducer,\n    login : loginReducer,\n    category: categoryReducer,\n})\n\nexport default rootReducer;","export default (state = [], action) => {\n    if (action.type === \"CHANGE_CATEGORY\") {\n        return action.payload\n    } else {\n        return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Redux set up\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware} from \"redux\";\nimport reducers from \"./reducers/rootReducer.js\";\nimport reduxPromise from \"redux-promise\";\n\nconst middleware = applyMiddleware(reduxPromise);\nconst theStore = middleware(createStore);\nconst theStoreWithMiddlewareAndReducers = theStore(reducers)\n\n\nReactDOM.render(\n    <Provider store={theStoreWithMiddlewareAndReducers}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);"],"sourceRoot":""}